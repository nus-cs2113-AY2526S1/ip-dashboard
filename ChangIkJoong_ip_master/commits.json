{"authorDailyContributionsMap":{"ChangIkJoong":[{"date":"2025-08-20T00:00:00","commitResults":[{"hash":"961fc6d3c561d638537d440e72f8bbb989e08834","isMergeCommit":false,"messageTitle":"Level-0","messageBody":"","tags":["level-0"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":10}}}]},{"date":"2025-08-22T00:00:00","commitResults":[{"hash":"9b2d449057eef28d8ae3517b033f576067f36128","isMergeCommit":false,"messageTitle":"Added base functionality","messageBody":"Added the base functionality per week 1 + tag to the project.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}}]},{"date":"2025-08-23T00:00:00","commitResults":[{"hash":"452221f6922e40d12b184a58119efb0b0215fb5d","isMergeCommit":false,"messageTitle":"Implement input management and exit prompt","messageBody":"Created a taskManager() to handle the input prompt from the user, and added a Scanner function for input itself from the user. Using input \"bye\" from the user will stop the program via the while loop utilizing isRunning boolean.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":15}}}]},{"date":"2025-08-27T00:00:00","commitResults":[{"hash":"7366fb403446c50bbfa2dae06b59ee3dce17ea1c","isMergeCommit":false,"messageTitle":"create add, list functionality","messageBody":"added the functionality to add new prompts to a list, as well as the ability to list items via taskManager().\n\nFuture functionality would be to not include blank lines in the item list.\n","tags":["level-2"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":5}}}]},{"date":"2025-08-29T00:00:00","commitResults":[{"hash":"2d10a349bfb7433ffb998de090a3d02bde8532a8","isMergeCommit":false,"messageTitle":"implement marking functionality","messageBody":"From previous input, created a method to handle blank input, and implemented markDone and unmarkDone for tasks in the Bruce program.\n\nFuture functionality would be to push for an response if task already has been marked done or undone.\n","tags":["level-3","A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":101,"deletions":17}}}]},{"date":"2025-09-01T00:00:00","commitResults":[{"hash":"c207a7947cd7018a5e313b836dca80d88f15c942","isMergeCommit":false,"messageTitle":"remove mark bug","messageBody":"Quick update to recognize the isCompleted in outputInterface to match the assignemts\u0027.\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":15}}},{"hash":"e1fbcc6c6bc80036872d793314cc33f934b2f9a6","isMergeCommit":false,"messageTitle":"ABbstract and implement views and new Task classes","messageBody":"Updated the abstraction for a MVC (model view controller) to make it easier to understand and navigate.\n\nImplemented new Task classes and methods to handle these accordingly to Deadlines and Events and reflect in the UI.\n","fileTypesAndContributionMap":{"java":{"insertions":158,"deletions":33}}},{"hash":"47ccfdd33dd6d6be4309fd3bbb6ea4918c907849","isMergeCommit":false,"messageTitle":"Further abstraction and improve code readability","messageBody":"adjustments to abstraction lvls in the code, now it\u0027s seperated fully by MVC principle so far to make it easier for future development and abstraction according to instructions, now running instances passed to controller fr MV. Modified certain naming of methods and variables to fit conventions.\n\nFuture version, maybe add switch cases /enums to switch between taskManagement states?\n","fileTypesAndContributionMap":{"java":{"insertions":164,"deletions":125}}},{"hash":"f1f5e7f28deecaa2488daf06a3d76f9618b123f8","isMergeCommit":false,"messageTitle":"improve readability and naming conventions","messageBody":"adjustments to variables and naming conventions.\n\nFuture version, maybe add switch cases /enums to switch between taskManagement states?\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":21}}},{"hash":"7f9a15035e8144ddece91e3938c10eccfb141e30","isMergeCommit":false,"messageTitle":"change visibility for View constants","messageBody":"adjustments to visibility, package-private -\u003e public for static variables.\n\nFuture version, maybe add switch cases /enums to switch between taskManagement states?\n","tags":["Level-4","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2025-09-08T00:00:00","commitResults":[{"hash":"3b433527381af592101a9100bf70325dd94a5f08","isMergeCommit":false,"messageTitle":"Implement PR log comments from peers","messageBody":"Implemented bug fix for program still printing \"Event\" or \"deadline\" in the task descriptions, changed Controller to switch cases (lamda) for easier readability, changed variable names (taskcounter). added range check as seperate method for easier readability in model.\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":25}}}]},{"date":"2025-09-09T00:00:00","commitResults":[{"hash":"cb5e4b513a88b872bb33488344c6ff8d7ca3cd13","isMergeCommit":false,"messageTitle":"add A-packaging, implement exception handling and code-A-standard","messageBody":"Implemented bug fixes, error handling for all task versions so far, also logic for this. Future work needs to be done in the error handling, also abstraction and interfacing of the task model. Right now 1 parent, 3 children.\n","fileTypesAndContributionMap":{"java":{"insertions":200,"deletions":94}}},{"hash":"eb3c59dd858351ec4809c1e4a10f2e95398662b9","isMergeCommit":true,"messageTitle":"Merge Level-5 increment","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{}},{"hash":"403546062f9677b6716b69624e7188f78bf007e5","isMergeCommit":false,"messageTitle":"add A-packaging and refactoring of Task Variants","messageBody":"Changed the packaging conventions for the project to fit better A-Code quality.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":12}}},{"hash":"849f0951a7276d51e343f7554f89796ba6a03479","isMergeCommit":true,"messageTitle":"Merge branch-A-Packages increment","messageBody":"","tags":["Level-6","A-Packages","A-Exceptions","A-Collections"],"fileTypesAndContributionMap":{}}]},{"date":"2025-09-16T00:00:00","commitResults":[{"hash":"72570433bf1a72863f6153985c54890b4f39c467","isMergeCommit":false,"messageTitle":"add input and output handler class","messageBody":"Added a CodecConverter for both encoding and decoding the txt file, as well as created a dataHandler to communicate between controller and the codecConverter. Encapsulated both the model and datahandler with a singleton pattern to just make sure there\u0027s only a single instance of them, might not be needed fully at the moment however still a good precaution for future updates.\n","fileTypesAndContributionMap":{"java":{"insertions":308,"deletions":29}}},{"hash":"1ea8ed86e936775e3287fdbef548a5758cf68297","isMergeCommit":true,"messageTitle":"Merge Level-7 increment","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2025-09-17T00:00:00","commitResults":[{"hash":"030583b6d9cce91ae3c48216d5bf1d6cf85b4e7d","isMergeCommit":false,"messageTitle":"make .txt update every iteration","messageBody":"It now adds and supports continous updating every time a new item is added.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":17}}},{"hash":"a59de1d2efbc64713c93519b5f5d1edc58194187","isMergeCommit":false,"messageTitle":"update to code standard","messageBody":"changed som imports order such as alphabetical and sorted.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":12}}},{"hash":"713fd9ac7a1e19522d86489b16188691f0e6d737","isMergeCommit":false,"messageTitle":"Update project name from Duke to Bruce in README","messageBody":"Updated the readme to better fit with current project.","fileTypesAndContributionMap":{"md":{"insertions":7,"deletions":8}}}]},{"date":"2025-10-03T00:00:00","commitResults":[{"hash":"edc292b6392127f40d4ddddf36463b7b38c51c20","isMergeCommit":false,"messageTitle":"add Java Documentation","messageBody":"Added java documentation inline code for both classes and methods, all public covered.\n","fileTypesAndContributionMap":{"java":{"insertions":467,"deletions":60}}},{"hash":"f0c19922d794a1fa17fabed532bc952102791b9a","isMergeCommit":false,"messageTitle":"add find functionality","messageBody":"Added the method findTasks to be able to provide a keyword and find all corresponding tasks including the keyword in their description.\n","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"63950e35ee399f20a53cf99a887db19aac5d2713","isMergeCommit":true,"messageTitle":"Merge branch-A-JavaDoc","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"70a76b8526a730de31b2883e709d524156b0e6fc","isMergeCommit":true,"messageTitle":"Merge branch-Level-9","messageBody":"","tags":["A-MoreOOP","A-JavaDoc"],"fileTypesAndContributionMap":{}},{"hash":"25365369e5a027f377ce9ee433a3012017347669","isMergeCommit":false,"messageTitle":"debug find functionality","messageBody":"Re-Added the method findTasks to be able to provide a keyword and find all corresponding tasks including the keyword in their description.\n","tags":["Level-9","Bruce_final"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1bb3f59ecc804e02c3f7df026430166b7af63d7b","isMergeCommit":false,"messageTitle":"clean up code","messageBody":"cleaned up some code and made it easier to understand.\n","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":85}}},{"hash":"d0cfd0685dcd1f75183d035bb09bb840f54ff589","isMergeCommit":true,"messageTitle":"Merge pull request #1 from ChangIkJoong/branch-Code-Improvement","messageBody":"PR clean up code","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"ChangIkJoong":{"java":1067,"md":7,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":0}},"authorContributionVariance":{"ChangIkJoong":16119.616},"authorDisplayNameMap":{"ChangIkJoong":"CS2113-W14-1 HANS..OONG"}}
