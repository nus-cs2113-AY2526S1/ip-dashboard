[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"Meet yoda.Yoda.","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"He will guide you in your CS2113 journey.","lastModifiedDate":"2025-09-05T16:57:43","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:57:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:57:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-04T21:45:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"-":26,"V1T0bh":4}},{"path":"src/main/java/yoda/Yoda.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import yoda.storage.Storage;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import yoda.task.TaskList;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"import yoda.ui.Ui;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-29T16:55:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-08-29T17:08:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * The {@code Yoda} class is the entry point of the application.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" * It wires together the core components ({@link yoda.task.TaskList}, {@link yoda.storage.Storage}, and {@link yoda.ui.Ui)","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" * and drives the high-level lifecycle of the program.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":" * Yoda chatbot utilizes the following packages:","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":" *     \u003cli\u003e{@link yoda.task.TaskList}: For storing tasks throughout the execution of Yoda.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":" *     \u003cli\u003e{@link yoda.storage.Storage}: For opening and saving of tasks from and to file.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":" *     \u003cli\u003e{@link yoda.ui.Ui}: For handling all user interaction for the Yoda application.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":" *     \u003cli\u003e{@link yoda.parser.Parser}: For parsing raw user input into a keywords array.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"*/","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"public class Yoda {","lastModifiedDate":"2025-09-30T11:33:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"    public static TaskList inputList \u003d new TaskList();","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:06:56","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"    // main function that runs all other sub-functions","lastModifiedDate":"2025-08-29T17:08:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-29T23:36:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"        try {","lastModifiedDate":"2025-09-29T18:06:56","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"            Storage userData \u003d new Storage(\"data/user.txt\");","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"            Ui.start(userData.isNewFile());","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"            userData.fileToArray();","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:06:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"            Ui.run();","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"            userData.arrayToFile();","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-08-27T14:52:41","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"            Ui.end();","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-29T18:06:56","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"            Ui.showError(\"There were issues with the file.\", e);","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-29T18:06:56","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-08-27T14:52:41","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-08-27T14:52:41","isFullCredit":false}],"authorContributionMap":{"V1T0bh":43}},{"path":"src/main/java/yoda/exception/InsufficientArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.exception;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":" * Thrown to indicate that a user command did not contain enough arguments.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * For example:","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@code todo} with no description\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@code deadline} without a label or missing the {@code /by} argument\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@code event} without a start or end time\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"public class InsufficientArgumentsException extends YodaException {","lastModifiedDate":"2025-09-12T17:31:19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-12T17:29:24","isFullCredit":false}],"authorContributionMap":{"V1T0bh":16}},{"path":"src/main/java/yoda/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.exception;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":" * Thrown to indicate that a user command was not a valid one.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * For example:","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@code todoi read book} \u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@code clear}\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@code calendar}\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"public class InvalidCommandException extends YodaException {","lastModifiedDate":"2025-09-29T18:29:37","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2025-09-29T18:29:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"        super();","lastModifiedDate":"2025-09-29T18:29:37","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-29T18:29:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-29T18:29:37","isFullCredit":false}],"authorContributionMap":{"V1T0bh":19}},{"path":"src/main/java/yoda/exception/TaskOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.exception;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":" * Thrown to indicate that an index of a task is not in range. Usually when","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":" * the index goes beyond the size of {@link yoda.task.TaskList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":"public class TaskOutOfRangeException extends YodaException {","lastModifiedDate":"2025-09-12T17:31:19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-12T17:29:24","isFullCredit":false}],"authorContributionMap":{"V1T0bh":10}},{"path":"src/main/java/yoda/exception/YodaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.exception;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":" * Base class for all custom exceptions in the Yoda application.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * All exceptions from Yoda application should extend {@code YodaException} to provide a","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" * common type that can be caught when handling Yoda-specific errors.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * \u003ch2\u003eSubclasses\u003c/h2\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@link InsufficientArgumentsException} – thrown when a command does not have enough arguments.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@link InvalidCommandException} – thrown when the user provides an unrecognized command keyword.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@link TaskOutOfRangeException} – thrown when an invalid task index is referenced.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"public class YodaException extends Exception {","lastModifiedDate":"2025-09-12T17:31:19","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-12T17:29:24","isFullCredit":false}],"authorContributionMap":{"V1T0bh":18}},{"path":"src/main/java/yoda/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.parser;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * Splits raw user input into structured keywords for command handling.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" * The {@code Parser} fills a shared {@link #keywordsList} with up to five fields:","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * \u003col\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e\u003cb\u003eindex 0\u003c/b\u003e – command type (e.g., {@code todo}, {@code deadline}, {@code event}, {@code mark}, {@code list})\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e\u003cb\u003eindex 1\u003c/b\u003e – task label/description\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e\u003cb\u003eindex 2\u003c/b\u003e – start value (e.g., {@code /from} for events)\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e\u003cb\u003eindex 3\u003c/b\u003e – end value (e.g., {@code /to} or {@code /by})\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e\u003cb\u003eindex 4\u003c/b\u003e – Mark flag\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":" * Delimiters such as {@code /by}, {@code /from}, {@code /to}, and {@code /mark} are","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":" * used as boundaries for each keyword. Commands are parsed as per these examples:","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":" * \u003cpre\u003e{@code","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":" * \"deadline submit report /by Friday /mark X\"","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":" * // -\u003e [\"deadline\", \"submit report\", \"\", \"Friday\", \"X\"]","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":" * \"event project meeting /from Mon 2pm /to Mon 4pm\"","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":" * // -\u003e [\"event\", \"project meeting\", \"Mon 2pm\", \"Mon 4pm\", \"\"]","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":" * }\u003c/pre\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"public class Parser {","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"    public static final ArrayList\u003cString\u003e keywordsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"    // strips the string at index","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"    private static void strip (int index){","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"        keywordsList.set(index, keywordsList.get(index).strip());","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"    // takes an index and content and concats the string (at that index) with the content","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"    private static void append(int index, String content) {","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"        keywordsList.set(index, keywordsList.get(index) + content);","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"    // function to split the input to array","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"    // [TASK TYPE, TASK LABEL, TASK START, TASK END], if exists","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"    public static void split(String userInput) {","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"        keywordsList.clear();","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"        final int NO_OF_KEYWORDS \u003d 5;","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"        String[] splitArray \u003d userInput.split(\" \");","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"        // TYPE is first word","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"        keywordsList.add(splitArray[0]);","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"        if (splitArray.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"            return;","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"        // LABEL, START, END","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"        for (int j \u003d 1; j \u003c NO_OF_KEYWORDS; j++) {","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"            boolean hasExceedLength \u003d i \u003e\u003d splitArray.length;","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"V1T0bh"},"content":"            boolean wordContainsSlash \u003d hasExceedLength || splitArray[i].contains(\"/\");","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"V1T0bh"},"content":"            keywordsList.add(\"\");","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"            while (!(hasExceedLength || wordContainsSlash)) {","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"V1T0bh"},"content":"                append(j, splitArray[i] + \" \");","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"                i +\u003d 1;","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"                hasExceedLength \u003d i \u003e\u003d splitArray.length;","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"                wordContainsSlash \u003d hasExceedLength || splitArray[i].contains(\"/\");","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"            strip(j);","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"            // skips the word containing \"/\" (e.g. /by)","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"            i +\u003d 1;","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"V1T0bh"},"content":"    ","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"V1T0bh"},"content":"    ","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-30T12:19:59","isFullCredit":false}],"authorContributionMap":{"V1T0bh":81}},{"path":"src/main/java/yoda/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.storage;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import yoda.parser.Parser;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import yoda.Yoda;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"import yoda.task.Task;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"import java.io.File;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":" * Handles persistence of tasks to and from the file system.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":" * The {@code Storage} class ensures the data file and its parent directories exist.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":" * It loads the tasks from the save file into {@link yoda.task.TaskList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":" * Finally, it will write tasks back to the file in a command-like format.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"public class Storage {","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"    private final File userFile;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"    private final boolean isNew;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"     * Returns whether the underlying file was created for the first time.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"     * @return {@code true} if the file did not previously exist and was created;","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"     *         {@code false} if the file already existed.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"    public boolean isNewFile() {","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"        return isNew;","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"     * Constructs a {@code Storage} instance pointing to the given path.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"     * If necessary, parent directories are created automatically. If the file","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"     * does not exist, it will be created.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"     * @param path the path to the file used for persistence (e.g. {@code data/user.txt}).","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"     * @throws IOException if directories or file cannot be created.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"    public Storage(String path) throws IOException {","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"        // creates dir based on path if it does not exist","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"        // does nothing if it exists","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"        Path dir  \u003d Paths.get(path);","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"        Files.createDirectories(dir.getParent());","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"        userFile \u003d new File(path);","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"        isNew \u003d userFile.createNewFile();","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"     * Loads tasks from the file into {@link Yoda#inputList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"     * Each line of the file is parsed into keywords via {@link Parser#split(String)},","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"     * and then delegated to {@link yoda.task.TaskList#add(boolean)} with","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"V1T0bh"},"content":"     * {@code show \u003d false} to add silently.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"     * @throws FileNotFoundException if the underlying file cannot be read.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"    public void fileToArray() throws FileNotFoundException {","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"        Scanner fileScanner \u003d new Scanner(userFile);","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"            String fileInput \u003d fileScanner.nextLine();","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"            Parser.split(fileInput);","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"            Yoda.inputList.add(false);","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"V1T0bh"},"content":"     * Writes all tasks from {@link Yoda#inputList} into the file.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"V1T0bh"},"content":"     * Each task is converted to a command string via {@link Task#toCommand()} and","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"V1T0bh"},"content":"     * written as a separate line.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"V1T0bh"},"content":"     * @throws IOException if the file cannot be opened or written to.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"V1T0bh"},"content":"    public void arrayToFile() throws IOException {","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"V1T0bh"},"content":"        FileWriter fWrite \u003d new FileWriter(userFile);","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"V1T0bh"},"content":"        for (Task task : Yoda.inputList.getTasks()) {","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"V1T0bh"},"content":"            fWrite.write(task.toCommand());","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"V1T0bh"},"content":"            fWrite.write(\"\\n\");","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"V1T0bh"},"content":"        fWrite.close();","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-30T12:45:12","isFullCredit":false}],"authorContributionMap":{"V1T0bh":97}},{"path":"src/main/java/yoda/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.task;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import javax.naming.InsufficientResourcesException;","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * Represents a {@code Deadline} task in the Yoda application.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" * A {@code Deadline} includes an","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" * additional end time or due date. It represents tasks that must be finished","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * by a specific point in time.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"    protected String end;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"     * Constructs a new {@code Deadline} with the given description and end time.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"     * @param inputLabel the description text of the deadline task.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"     * @param inputEnd   the end time or due date for the deadline.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"     * @throws InsufficientResourcesException if the description or end time is empty.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"    public Deadline(String inputLabel, String inputEnd) throws InsufficientResourcesException {","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"        super(inputLabel);","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"        if (inputEnd.isEmpty()) {","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"            throw new InsufficientResourcesException();","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"        this.end \u003d inputEnd;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"     * Returns a string representation of the deadline for user display.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"     * Example: {@code [D][ ] submit report (by: Friday)}","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"     * @return a formatted string with the deadline type, completion status, label,","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"     *         and end time.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"    public String toString() {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"        return \"[D]\" + this.taskString() + \" (by: \" + this.end + \")\";","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"     * Converts this deadline into a command-like string suitable for saving to a file.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"     * Example: {@code deadline submit report /by Friday /mark X}","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"     * @return a command-like string containing this deadline\u0027s label, due date, and completion status.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"    public String toCommand(){","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"        String mark \u003d (isDone) ? \"X\" : \" \";","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"        return \"deadline \" + label +","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"                \" /by \" + end +","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"                \"  /mark \" + mark;","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false}],"authorContributionMap":{"V1T0bh":62}},{"path":"src/main/java/yoda/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.task;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import javax.naming.InsufficientResourcesException;","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * Represents an {@code Event} task in the Yoda application.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" * An {@code Event} includes both a start","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" * and an end time. It represents tasks that run for a","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * certain interval of time.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"public class Event extends Deadline {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"    protected String start;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"     * Constructs a new {@code Event} with the given description, start time, and end time.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"     * @param inputLabel the description text of the event.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"     * @param inputFrom  the start time of the event.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"     * @param inputEnd   the end time of the event.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"     * @throws InsufficientResourcesException if the description or end time is empty.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"    public Event(String inputLabel, String inputFrom, String inputEnd) throws InsufficientResourcesException {","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"        super(inputLabel, inputEnd);","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"        if (inputEnd.isEmpty()) {","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"            throw new InsufficientResourcesException();","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"        this.start \u003d inputFrom;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"     * Returns a string representation of the event for user display.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"     * Example: {@code [E][ ] project meeting (from: Mon 2pm to: Mon 4pm)}","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"     * @return a formatted string with the event type, completion status, label,","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"     *         and start–end interval.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"    public String toString() {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"        return \"[E]\" + this.taskString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"     * Converts this event into a command-like string suitable for saving to a file.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"     * Example: {@code event project meeting /from 2pm /to 4pm /mark X}","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"     * @return a commandd-like string containing this event\u0027s label, start, end time, and completion status.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"    public String toCommand(){","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"        String mark \u003d (isDone) ? \"X\" : \" \";","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"        return \"event \" + label +","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"                \" /from \" + start +","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"                \" /to \" + end +","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"                \" /mark \" + mark;","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false}],"authorContributionMap":{"V1T0bh":62}},{"path":"src/main/java/yoda/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.task;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import javax.naming.InsufficientResourcesException;","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * Represents a general task.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" * A {@code Task} stores a label (description) and a completion status flag.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" * It serves as primitive class for derived task types such as","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * {@link Todo}, Deadline, and Event.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" * \u003ch2\u003eAttributes\u003c/h2\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@code label} — the description text of the task.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003e{@code isDone} — whether the task has been completed.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":" * \u003ch2\u003eFeatures\u003c/h2\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003eProvide constructors that validate and initialize a task label.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003eExpose setters for label and completion mark.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003eFormat itself into human-readable and command-like strings.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":" *   \u003cli\u003ePrint feedback when tasks are marked/unmarked (or perform silently if required).\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"public class Task {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"    protected String label;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"     * Constructs a new empty {@code Task} with an empty label.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"    public Task() {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"        setLabel(\"\");","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"     * Constructs a new {@code Task} with the given label.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"     * @param inputLabel the description of the task.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"     * @throws InsufficientResourcesException if the input label is empty.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"    public Task(String inputLabel) throws InsufficientResourcesException {","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"        if (inputLabel.isEmpty()) {","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"            throw new InsufficientResourcesException();","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"        setLabel(inputLabel);","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"     * Updates the label (description) of this task.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"     * @param inputLabel the new description.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"    public void setLabel(String inputLabel) {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"        this.label \u003d inputLabel;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"     * Returns a formatted string with completion mark and label.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"     * Example: {@code [X] read book}","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"V1T0bh"},"content":"     * @return a formatted task string.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"    protected String taskString() {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"        String mark \u003d (isDone) ? \"X\" : \" \";","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"        return \"[\" + mark + \"] \" + label;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"     * Returns the string representation of this task for display.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"     * @return a formatted string with completion mark and label.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"V1T0bh"},"content":"    public String toString() {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"V1T0bh"},"content":"        String mark \u003d (isDone) ? \"X\" : \" \";","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"V1T0bh"},"content":"        return \"[\" + mark + \"] \" + label;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"V1T0bh"},"content":"     * Converts this task into a command-like string suitable for storage.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"V1T0bh"},"content":"     * @return a command-like string.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"V1T0bh"},"content":"    public String toCommand(){","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"V1T0bh"},"content":"        String mark \u003d (isDone) ? \"X\" : \" \";","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"V1T0bh"},"content":"        return \"task \" + label +","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"V1T0bh"},"content":"                \" /mark \" + mark;","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"V1T0bh"},"content":"     * Marks or unmarks the task, printing feedback to the user.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"V1T0bh"},"content":"     * @param inputMark {@code true} to mark as done, {@code false} to unmark.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"V1T0bh"},"content":"    public void setMark(boolean inputMark) {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"V1T0bh"},"content":"        this.isDone \u003d inputMark;","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"V1T0bh"},"content":"        if (inputMark) {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Affirmative! Marked have been the task:\");","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"V1T0bh"},"content":"        } else {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Oh no, I shall unmark thy task:\");","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(this);","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:08:19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"V1T0bh"},"content":"     * Marks or unmarks the task silently, without printing feedback.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"V1T0bh"},"content":"     * @param inputMark {@code true} to mark as done, {@code false} to unmark.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"V1T0bh"},"content":"    public void setMarkSilent(boolean inputMark) {","lastModifiedDate":"2025-09-29T18:08:19","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"V1T0bh"},"content":"        this.isDone \u003d inputMark;","lastModifiedDate":"2025-09-29T18:08:19","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-29T18:08:19","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false}],"authorContributionMap":{"V1T0bh":120}},{"path":"src/main/java/yoda/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.task;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import yoda.exception.InvalidCommandException;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import yoda.exception.TaskOutOfRangeException;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"import javax.naming.InsufficientResourcesException;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T11:33:19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":"import static yoda.Yoda.inputList;","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":"import static yoda.parser.Parser.keywordsList;","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":" * Represents the list of tasks during the execution of the Yoda application.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":" * A {@code TaskList} utilizes an {@link ArrayList} of {@link Task} objects and","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":" * provides operations for adding, deleting, marking, listing, and filtering tasks.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":" * \u003ch2\u003eUsage\u003c/h2\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":" * A {@code TaskList} is typically created at startup and populated","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":" * either from persistent storage or user commands.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"public class TaskList {","lastModifiedDate":"2025-09-30T11:33:19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"    private final ArrayList\u003cTask\u003e List;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"        List \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"     * Returns the underlying list of tasks.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"     * @return the backing {@link ArrayList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"        return List;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"     * @param index the zero-based index.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"     * @return the task at the given index.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"    public Task get(int index){","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"        return List.get(index);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"     * Returns the number of tasks in this list.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"     * @return the size of the list.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"    public int size() {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"        return List.size();","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"V1T0bh"},"content":"     * Returns a string representation of this task list.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"V1T0bh"},"content":"     * If the list is empty, a message is returned.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"     * Otherwise, a numbered listing of all tasks is returned.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"     * @return a human-readable string of all tasks.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"    public String toString() {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"        if (List.isEmpty()) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"            out \u003d new StringBuilder(\"This list of yours looks empty...\" + \"\\n\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"        } else {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"You have \" + List.size() + \" tasks:\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"V1T0bh"},"content":"            for (int i \u003d 0; i \u003c List.size(); i++) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"V1T0bh"},"content":"                out.append((i + 1)).append(\". \");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"V1T0bh"},"content":"                out.append(List.get(i)).append(\"\\n\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"V1T0bh"},"content":"        return out.toString();","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"V1T0bh"},"content":"     * Adds a new task to this list based on the current contents of {@link yoda.parser.Parser#keywordsList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"V1T0bh"},"content":"     * This method supports both:","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"V1T0bh"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003eUser-driven additions (with success messages when {@code show \u003d true}).\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003eFile-driven additions (silent, with mark status restored when {@code show \u003d false}).\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"V1T0bh"},"content":"     * @param show whether to print user-facing success messages.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"V1T0bh"},"content":"    public void add(boolean show) {","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"V1T0bh"},"content":"        try {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"V1T0bh"},"content":"            int lastIndex;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"V1T0bh"},"content":"            Task newTask;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"V1T0bh"},"content":"            if (keywordsList.get(1).isEmpty()) {","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"V1T0bh"},"content":"                throw new InsufficientResourcesException();","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"V1T0bh"},"content":"            switch (keywordsList.get(0)) {","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"V1T0bh"},"content":"                case \"todo\":","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"V1T0bh"},"content":"                    newTask \u003d new Todo(keywordsList.get(1));","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"V1T0bh"},"content":"                    lastIndex \u003d 2;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"V1T0bh"},"content":"                    break;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"V1T0bh"},"content":"                case \"deadline\":","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"V1T0bh"},"content":"                    newTask \u003d new Deadline(keywordsList.get(1), keywordsList.get(2));","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"V1T0bh"},"content":"                    lastIndex \u003d 3;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"V1T0bh"},"content":"                    break;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"V1T0bh"},"content":"                case \"event\":","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"V1T0bh"},"content":"                    newTask \u003d new Event(keywordsList.get(1), keywordsList.get(2), keywordsList.get(3));","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"V1T0bh"},"content":"                    lastIndex \u003d 4;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"V1T0bh"},"content":"                    break;","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"V1T0bh"},"content":"                default:","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"V1T0bh"},"content":"                    throw new InvalidCommandException(keywordsList.get(0) + \" is not a valid command...\");","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"V1T0bh"},"content":"            List.add(newTask);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"V1T0bh"},"content":"            if (show) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"V1T0bh"},"content":"                // expected: entry through user input","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"V1T0bh"},"content":"                System.out.println(\"Successfully added: \");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"V1T0bh"},"content":"                System.out.println(List.get(List.size() - 1));","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"V1T0bh"},"content":"            } else {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"V1T0bh"},"content":"                // expected: entry through file input","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"V1T0bh"},"content":"                if (keywordsList.get(lastIndex).equals(\"X\")) {","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"V1T0bh"},"content":"                    newTask \u003d List.get(List.size() - 1);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"V1T0bh"},"content":"                    newTask.setMarkSilent(true);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"V1T0bh"},"content":"                    List.set(List.size()-1, newTask);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"V1T0bh"},"content":"                }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"V1T0bh"},"content":"        } catch (InsufficientResourcesException e) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"V1T0bh"},"content":"            System.out.print(\"SHEESHHH!! \");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Your command has not enough arguments!\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Your task was not added.\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"V1T0bh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"My condolences, it seems you have too much on your plate.\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"V1T0bh"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Invalid command found.\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Error: \" + e);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Line skipped.\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"V1T0bh"},"content":"    };","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"V1T0bh"},"content":"     * Removes a task at the specified index.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"V1T0bh"},"content":"     * @param index the zero-based index.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"V1T0bh"},"content":"     * @throws TaskOutOfRangeException if the index is invalid.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"V1T0bh"},"content":"    public void delete(int index) throws TaskOutOfRangeException {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"V1T0bh"},"content":"        if (index \u003c 0 || index \u003e\u003d List.size()) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"V1T0bh"},"content":"            throw new TaskOutOfRangeException();","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"V1T0bh"},"content":"        } else {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"V1T0bh"},"content":"            List.remove(index);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"V1T0bh"},"content":"     * Marks or unmarks a task at the specified index.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"V1T0bh"},"content":"     * If the index is invalid, a message is printed instead of throwing an exception.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"V1T0bh"},"content":"     * @param index  the zero-based index of the task.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"V1T0bh"},"content":"     * @param isMark {@code true} to mark as done, {@code false} to unmark.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"V1T0bh"},"content":"    public void mark(int index, boolean isMark) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"V1T0bh"},"content":"        if (index \u003c 0 | index \u003e\u003d List.size()) {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Funny. This ID matches no task of yours.\");","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"V1T0bh"},"content":"        } else {","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"V1T0bh"},"content":"            Task newTask \u003d List.get(index);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"V1T0bh"},"content":"            newTask.setMark(isMark);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"V1T0bh"},"content":"            List.set(index, newTask);","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"V1T0bh"},"content":"     * Returns a filtered list of tasks whose string representation contains the given filter text.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"V1T0bh"},"content":"     * This method operates on the global {@link yoda.Yoda#inputList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"V1T0bh"},"content":"     * @param filter the substring to search for in task descriptions.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"V1T0bh"},"content":"     * @return a new list of tasks matching the filter.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"V1T0bh"},"content":"    public static ArrayList\u003cTask\u003e filterTasks(String filter) {","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"V1T0bh"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"V1T0bh"},"content":"        for (Task task : inputList.getTasks()) {","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"V1T0bh"},"content":"            if (String.valueOf(task).contains(filter)) {","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"V1T0bh"},"content":"                filteredList.add(task);","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"V1T0bh"},"content":"        return filteredList;","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T12:09:08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-30T11:33:19","isFullCredit":false}],"authorContributionMap":{"V1T0bh":203}},{"path":"src/main/java/yoda/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.task;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import javax.naming.InsufficientResourcesException;","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":" * Represents a {@code Todo} task in the Yoda application.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":" * A {@code Todo} is the simplest kind of task, consisting only of","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":" * a description (label) and a completion status flag inherited from {@link Task}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":"     * Constructs a new {@code Todo} with the specified description.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":"     * @param inputLabel the description text of the todo.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":"     * @throws InsufficientResourcesException if the label is empty or invalid","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":"     *                                        (as enforced by {@link Task}).","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"    public Todo(String inputLabel) throws InsufficientResourcesException {","lastModifiedDate":"2025-09-12T17:37:38","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"        super(inputLabel);","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"     * Returns a string representation of this todo for user display.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"     * Example: {@code [T][X] read book}","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"     * @return a formatted string including the {@code [T]} prefix and task details.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"    @Override","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"    public String toString() {","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"        return \"[T]\" + this.taskString();","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"     * Converts this todo into a command-like string suitable for saving to a file.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"     * Example: {@code todo read book /mark X}","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"     * @return a command-like string containing the description and mark of the todo.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"    public String toCommand(){","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"        String mark \u003d (isDone) ? \"X\" : \" \";","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"        return \"todo \" + label +","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"                \" /mark \" + mark;","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-29T18:22:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-05T16:56:38","isFullCredit":false}],"authorContributionMap":{"V1T0bh":53}},{"path":"src/main/java/yoda/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"V1T0bh"},"content":"package yoda.ui;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"V1T0bh"},"content":"import yoda.parser.Parser;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"V1T0bh"},"content":"import yoda.exception.TaskOutOfRangeException;","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"V1T0bh"},"content":"import yoda.task.Task;","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"V1T0bh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"V1T0bh"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"V1T0bh"},"content":"import static yoda.Yoda.inputList;","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"V1T0bh"},"content":"import static yoda.parser.Parser.keywordsList;","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"V1T0bh"},"content":"/**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"V1T0bh"},"content":" * The {@code Ui} class handles all user interaction for the Yoda application.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"V1T0bh"},"content":" *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"V1T0bh"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"V1T0bh"},"content":" * It (attempts to) boasts the vocabulary of a Star Wars character. Giving","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"V1T0bh"},"content":" * the user an immersive experience.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"V1T0bh"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"V1T0bh"},"content":" */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"V1T0bh"},"content":"public class Ui {","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"V1T0bh"},"content":"    static final Scanner SCANNER \u003d new Scanner(System.in); //  used for user input","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"V1T0bh"},"content":"     * Prints a horizontal divider line to separate sections of console output.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"V1T0bh"},"content":"    public static void divider(){","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(\"-----------------------------------\");","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"V1T0bh"},"content":"    // outputs text when program starts","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"V1T0bh"},"content":"     * Prints the startup banner and a greeting that depends on whether the data file is new.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"V1T0bh"},"content":"     * @param isNewFile true if this is the first time the data file is created; false otherwise.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"V1T0bh"},"content":"    public static void start(boolean isNewFile) {","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(\"-----------------------------------\");","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"V1T0bh"},"content":"                ___  _ ____  ____  ____\\s","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"V1T0bh"},"content":"                \\\\  \\\\///  _ \\\\/  _ \\\\/  _ \\\\","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"V1T0bh"},"content":"                 \\\\  / | / \\\\|| | \\\\|| / \\\\|","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"V1T0bh"},"content":"                 / /  | \\\\_/|| |_/|| |-||","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"V1T0bh"},"content":"                /_/   \\\\____/\\\\____/\\\\_/ \\\\|","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"V1T0bh"},"content":"                                       \\s\"\"\");","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(\"-------------- AWAKENS -------------\");","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"V1T0bh"},"content":"        if (isNewFile){","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Greetings youngling, Yoda is my name\");","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"V1T0bh"},"content":"        } else {","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"V1T0bh"},"content":"            System.out.println(\"Welcome back youngling! It is a pleasure to see you again\");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"V1T0bh"},"content":"     * Prints the iconic Yoda quote while asking the user for the next command.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"V1T0bh"},"content":"    public static void ask() {","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"V1T0bh"},"content":"        System.out.print(\"Do or do not what shall I help you with? \u003e \");","lastModifiedDate":"2025-09-30T13:25:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"V1T0bh"},"content":"     * Processes the most recently parsed command stored in {@code keywordsList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"V1T0bh"},"content":"     * Commands include:","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"V1T0bh"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003e{@code list} — prints the task list.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003e{@code mark} / {@code unmark} — marks/unmarks a task.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003e{@code todo}, {@code deadline}, {@code event} — adds a task based on user input.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003e{@code delete} — deletes the specified task after confirmation.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003e{@code find} — shows tasks whose text contains the keyword.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"V1T0bh"},"content":"     * @throws TaskOutOfRangeException if a task index is out of bounds for the current {@code TaskList}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"V1T0bh"},"content":"     * @throws NumberFormatException   if a numeric argument cannot be parsed (e.g., invalid task index).","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"V1T0bh"},"content":"    public static void processCommand() throws TaskOutOfRangeException {","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"V1T0bh"},"content":"        int itemId;","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"V1T0bh"},"content":"        String userInput;","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"V1T0bh"},"content":"        ArrayList\u003cTask\u003e filteredList;","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"V1T0bh"},"content":"        switch (keywordsList.get(0)) {","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"V1T0bh"},"content":"            case \"list\":","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"V1T0bh"},"content":"                System.out.print(inputList);","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"V1T0bh"},"content":"                break;","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"V1T0bh"},"content":"            case \"mark\":","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"V1T0bh"},"content":"            case \"unmark\":","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"V1T0bh"},"content":"                itemId \u003d Integer.parseInt(keywordsList.get(1)) - 1;","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"V1T0bh"},"content":"                if (itemId \u003e\u003d inputList.size()) {","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"V1T0bh"},"content":"                    throw new TaskOutOfRangeException();","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"V1T0bh"},"content":"                }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"V1T0bh"},"content":"                boolean isMark \u003d keywordsList.get(0).equals(\"mark\");","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"V1T0bh"},"content":"                inputList.mark(itemId, isMark);","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"V1T0bh"},"content":"                break;","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"V1T0bh"},"content":"            case \"todo\":","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"V1T0bh"},"content":"            case \"deadline\":","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"V1T0bh"},"content":"            case \"event\":","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"V1T0bh"},"content":"                inputList.add(true);","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"V1T0bh"},"content":"                break;","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"V1T0bh"},"content":"            case \"delete\":","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"V1T0bh"},"content":"                itemId \u003d Integer.parseInt(keywordsList.get(1)) - 1;","lastModifiedDate":"2025-10-01T04:24:14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"V1T0bh"},"content":"                // confirmation message","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"V1T0bh"},"content":"                System.out.println(\"This task will be PERMANENTLY deleted:\");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"V1T0bh"},"content":"                System.out.println(inputList.get(itemId));","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"V1T0bh"},"content":"                System.out.print(\"Are you sure? (Y/n) \u003e \");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"V1T0bh"},"content":"                userInput \u003d SCANNER.nextLine();","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"V1T0bh"},"content":"                if (userInput.equals(\"Y\")) {","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"V1T0bh"},"content":"                    inputList.delete(itemId);","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"V1T0bh"},"content":"                    System.out.println(\"Successfully deleted!\");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"V1T0bh"},"content":"                } else {","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"V1T0bh"},"content":"                    System.out.println(\"Delete command aborted...\");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"V1T0bh"},"content":"                }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"V1T0bh"},"content":"                break;","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"V1T0bh"},"content":"            case \"find\":","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"V1T0bh"},"content":"                filteredList \u003d inputList.filterTasks(keywordsList.get(1));","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"V1T0bh"},"content":"                if (filteredList.isEmpty()) {","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"V1T0bh"},"content":"                    System.out.println(\"*cough* All I found was dust. *cough*\");","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"V1T0bh"},"content":"                } else {","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"V1T0bh"},"content":"                    System.out.println(\"Ahh. I found these in your pocket:\");","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"V1T0bh"},"content":"                    for (Task task : filteredList) {","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"V1T0bh"},"content":"                        System.out.println(task);","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"V1T0bh"},"content":"                    }","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"V1T0bh"},"content":"                }","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:49:36","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"V1T0bh"},"content":"                break;","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"V1T0bh"},"content":"            default:","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"V1T0bh"},"content":"                System.out.println(\"Your instruction is invalid.\");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"V1T0bh"},"content":"    // function to ask the user for an input","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"V1T0bh"},"content":"    // modifies contents of yoda.task.Task list depending on user input","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"V1T0bh"},"content":"     * Runs the interactive command loop (REPL) until the user enters {@code bye}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"V1T0bh"},"content":"     * For each iteration:","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"V1T0bh"},"content":"     * \u003col\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003ePrompts the user for input.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003eParses input using {@code Parser.split(String)}.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003eExecutes the command via {@link #processCommand()}.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"V1T0bh"},"content":"     *   \u003cli\u003eDisplays errors consistently using {@link #showError(String, Exception)}.\u003c/li\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"V1T0bh"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"V1T0bh"},"content":"     * Valid commands include: {@code list}, {@code mark}, {@code unmark}, {@code todo}, {@code deadline},","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"V1T0bh"},"content":"     * {@code event}, {@code delete}, {@code find}, and {@code bye}.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"V1T0bh"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"V1T0bh"},"content":"    public static void run() {","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"V1T0bh"},"content":"        /* if \"bye\", loop terminates","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"V1T0bh"},"content":"         * if \"list\", shows previous inputs as a numbered list","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"V1T0bh"},"content":"         * if \"mark\"/\"unmark\", mark/unmark task accordingly","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"V1T0bh"},"content":"         * if \"deadline\"/\"todo\"/\"event\", add task accordingly","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"V1T0bh"},"content":"         * if \"delete\", deletes task accordingly","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"V1T0bh"},"content":"         */","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"V1T0bh"},"content":"        ask();","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"V1T0bh"},"content":"        String userInput \u003d SCANNER.nextLine();","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"V1T0bh"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"V1T0bh"},"content":"            Parser.split(userInput);","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"V1T0bh"},"content":"            divider();","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"V1T0bh"},"content":"            try {","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"V1T0bh"},"content":"                processCommand();","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"V1T0bh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"V1T0bh"},"content":"                showError(\"Number input is invalid! Try again.\", e);","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"V1T0bh"},"content":"            } catch (TaskOutOfRangeException | IndexOutOfBoundsException e) {","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"V1T0bh"},"content":"                showError(\"Task is out of range!\\n\" +","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"V1T0bh"},"content":"                        \"You have \" + inputList.size() + \" tasks.\", e);","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"V1T0bh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"V1T0bh"},"content":"                showError(\"Something went wrong!\", e);","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"V1T0bh"},"content":"            }","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"V1T0bh"},"content":"            divider();","lastModifiedDate":"2025-10-01T04:39:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"V1T0bh"},"content":"            ask();","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"V1T0bh"},"content":"            userInput \u003d SCANNER.nextLine();","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"V1T0bh"},"content":"        }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"V1T0bh"},"content":"     * Prints a formatted error with a custom heading and the exception message.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"V1T0bh"},"content":"     *","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"V1T0bh"},"content":"     * @param header human-readable error heading to display.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"V1T0bh"},"content":"     * @param e      the thrown exception whose message will be shown.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"V1T0bh"},"content":"    public static void showError(String header, Exception e) {","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(header);","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"V1T0bh"},"content":"        System.out.print(\"ERROR MESSAGE: \");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"V1T0bh"},"content":"    /**","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"V1T0bh"},"content":"     * Prints the farewell message along with the iconic Yoda line one last time and a termination banner.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"V1T0bh"},"content":"     * Intended to be called when the application is about to exit.","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"V1T0bh"},"content":"     */","lastModifiedDate":"2025-10-01T05:53:03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"V1T0bh"},"content":"    public static void end() {","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"V1T0bh"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(\"Do or do not, I shall say goodbye.\");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"V1T0bh"},"content":"        System.out.println(\"------------- PROGRAM TERMINATED -------------\");","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"V1T0bh"},"content":"    }","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"V1T0bh"},"content":"","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"V1T0bh"},"content":"}","lastModifiedDate":"2025-09-30T13:12:11","isFullCredit":false}],"authorContributionMap":{"V1T0bh":208}}]
