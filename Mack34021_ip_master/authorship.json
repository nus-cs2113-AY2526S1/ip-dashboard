[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Mack34021"},"content":"# Baraleous Personal Assistant","lastModifiedDate":"2025-09-12T11:53:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Mack34021"},"content":"This is the project repository for Baraleous. It\u0027s named after an incompetent fictional mercenary Doraleous. Given below are instructions on how to use it.","lastModifiedDate":"2025-09-12T11:53:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Mack34021"},"content":"## Using Baraleous","lastModifiedDate":"2025-09-12T11:53:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Mack34021"},"content":"There\u0027s no instructions here yet. Come back later I guess? ","lastModifiedDate":"2025-09-12T11:53:52","isFullCredit":false}],"authorContributionMap":{"Mack34021":4,"-":3}},{"path":"src/main/java/Baraleous.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mack34021"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Mack34021"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Mack34021"},"content":"public class Baraleous {","lastModifiedDate":"2025-08-26T19:16:04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Mack34021"},"content":"    private static final String BARALEOUS_LOGO \u003d \"Hello! I\u0027m Baraleous XIV!\\n\"","lastModifiedDate":"2025-09-12T11:58:41","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Mack34021"},"content":"            + \"What can I do for you today?\";","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Mack34021"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-12T11:58:41","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Mack34021"},"content":"        printMessage(BARALEOUS_LOGO, false);","lastModifiedDate":"2025-09-12T11:58:41","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Mack34021"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Mack34021"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Mack34021"},"content":"        while (true) {","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Mack34021"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Mack34021"},"content":"            ArrayList\u003cString\u003e commandsList \u003d getArguments(userInput);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Mack34021"},"content":"            if (commandSwitch(commandsList, taskList, userInput)) {","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Mack34021"},"content":"                break;","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Mack34021"},"content":"            }","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Mack34021"},"content":"     * Main switch used for different command types.","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Mack34021"},"content":"     * @param commandsList The list of commands passed by the user, one word per index","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Mack34021"},"content":"     * @param taskList     The program\u0027s main list of tasks (and events, deadline, etc.)","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Mack34021"},"content":"     * @param userInput    The unsplit user input string.","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Mack34021"},"content":"     * @return True if it needs to terminate early for program exit. False otherwise","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Mack34021"},"content":"    private static boolean commandSwitch(ArrayList\u003cString\u003e commandsList, TaskList taskList, String userInput) {","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Mack34021"},"content":"        switch (commandsList.get(0)) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Mack34021"},"content":"        case \"bye\":     // close program","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Goodbye!\", true);","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Mack34021"},"content":"            return true;","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Mack34021"},"content":"        case \"list\":    // Requested list of all added tasks","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Mack34021"},"content":"            listAllTasks(taskList);","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Mack34021"},"content":"            break;","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Mack34021"},"content":"        case \"mark\":    // Marks task as done","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Mack34021"},"content":"            if (commandsList.size() \u003d\u003d 2) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Mack34021"},"content":"                String indexToMark \u003d commandsList.get(1);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Mack34021"},"content":"                markTaskDone(indexToMark, taskList);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Mack34021"},"content":"            } else if (commandsList.size() \u003e 2) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Mack34021"},"content":"                printMessage(\"... That\u0027s too many arguments\", false);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Mack34021"},"content":"            } else {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Mack34021"},"content":"                printMessage(\"... Which task should I mark????\", false);","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Mack34021"},"content":"            }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Mack34021"},"content":"            break;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Mack34021"},"content":"        case \"unmark\":    // Marks task as done","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Mack34021"},"content":"            if (commandsList.size() \u003d\u003d 2) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Mack34021"},"content":"                String indexToMark \u003d commandsList.get(1);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Mack34021"},"content":"                unmarkTaskDone(indexToMark, taskList);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Mack34021"},"content":"            } else if (commandsList.size() \u003e 2) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Mack34021"},"content":"                printMessage(\"... That\u0027s too many arguments\", false);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Mack34021"},"content":"            } else {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Mack34021"},"content":"                printMessage(\"... Which task should I to mark????\", false);","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Mack34021"},"content":"            }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Mack34021"},"content":"            break;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Mack34021"},"content":"        case \"deadline\":    // Marks task as done","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Mack34021"},"content":"            addDeadlineToTaskList(commandsList, taskList);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Mack34021"},"content":"            break;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Mack34021"},"content":"        case \"event\":    // Marks task as done","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Mack34021"},"content":"            addEventToTaskList(commandsList, taskList);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Mack34021"},"content":"            break;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Mack34021"},"content":"        case \"task\":    // Requested new task added","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Mack34021"},"content":"            StringBuilder strBuil \u003d new StringBuilder();","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Mack34021"},"content":"            for (int i \u003d 1; i \u003c commandsList.size(); i++) {","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Mack34021"},"content":"                strBuil.append(commandsList.get(i)).append(\" \");","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Mack34021"},"content":"            }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Mack34021"},"content":"            String taskToAdd \u003d strBuil.toString().trim();","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Added: \u0027\" + taskToAdd + \"\u0027\", false);","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Mack34021"},"content":"            taskList.addTaskToList(taskToAdd);","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Mack34021"},"content":"            break;","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Mack34021"},"content":"        default:        // No actual commmand","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Need to add a command!\", false);","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Mack34021"},"content":"            break;","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Mack34021"},"content":"        return false;","lastModifiedDate":"2025-09-12T11:35:01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Mack34021"},"content":"     * Adds event to the taskList list","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Mack34021"},"content":"     * @param commandsList The user\u0027s input command, split into words","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Mack34021"},"content":"     * @param taskList     The taskList to add the newly-created task to","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Mack34021"},"content":"    private static void addEventToTaskList(ArrayList\u003cString\u003e commandsList, TaskList taskList) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Mack34021"},"content":"        // todo: add error checking","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Mack34021"},"content":"        // Loop through all words in command, looking for start and end times","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Mack34021"},"content":"        int startTimeIndex \u003d 0;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Mack34021"},"content":"        int endTimeIndex \u003d 0;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Mack34021"},"content":"        for (int i \u003d 1; i \u003c commandsList.size(); i++) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Mack34021"},"content":"            String str \u003d commandsList.get(i);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Mack34021"},"content":"            if (str.startsWith(\"/from\")) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Mack34021"},"content":"                if (startTimeIndex \u003d\u003d 0) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Mack34021"},"content":"                    startTimeIndex \u003d i;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Mack34021"},"content":"                } else {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Mack34021"},"content":"                    System.out.println(\"ERROR: multiple start times for event.\");","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Mack34021"},"content":"                }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Mack34021"},"content":"            } else if (str.startsWith(\"/to\")) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Mack34021"},"content":"                if (endTimeIndex \u003d\u003d 0) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Mack34021"},"content":"                    endTimeIndex \u003d i;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Mack34021"},"content":"                } else {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Mack34021"},"content":"                    System.out.println(\"ERROR: multiple end times for event.\");","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Mack34021"},"content":"                }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Mack34021"},"content":"            }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Mack34021"},"content":"        StringBuilder eventName \u003d new StringBuilder();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Mack34021"},"content":"        StringBuilder eventStartTime \u003d new StringBuilder();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Mack34021"},"content":"        StringBuilder eventEndTime \u003d new StringBuilder();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Mack34021"},"content":"        // Builds strings with the known start and endpoints of sections of the command string","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Mack34021"},"content":"        for (int i \u003d 1; i \u003c startTimeIndex; i++) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Mack34021"},"content":"            eventName.append(commandsList.get(i)).append(\" \");","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Mack34021"},"content":"        for (int i \u003d startTimeIndex + 1; i \u003c endTimeIndex; i++) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Mack34021"},"content":"            eventStartTime.append(commandsList.get(i)).append(\" \");","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Mack34021"},"content":"        for (int i \u003d endTimeIndex + 1; i \u003c commandsList.size(); i++) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Mack34021"},"content":"            eventEndTime.append(commandsList.get(i)).append(\" \");","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Mack34021"},"content":"        String eventNameTrimmed \u003d eventName.toString().trim();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Mack34021"},"content":"        String eventStartTimeTrimmed \u003d eventStartTime.toString().trim();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Mack34021"},"content":"        String eventEndTimeTrimmed \u003d eventEndTime.toString().trim();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Mack34021"},"content":"        // Trim all strings, then create and add deadline to the task list","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Mack34021"},"content":"        if (eventNameTrimmed.isEmpty()) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Mack34021"},"content":"            eventNameTrimmed \u003d \"UNSPECIFIED\";   // In case user forgets to give due date","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Mack34021"},"content":"        if (eventStartTimeTrimmed.isEmpty()) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Mack34021"},"content":"            eventStartTimeTrimmed \u003d \"UNSPECIFIED\";   // In case user forgets to give due date","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Mack34021"},"content":"        if (eventEndTimeTrimmed.isEmpty()) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"Mack34021"},"content":"            eventEndTimeTrimmed \u003d \"UNSPECIFIED\";   // In case user forgets to give due date","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"Mack34021"},"content":"        taskList.addEventToList(eventNameTrimmed, eventStartTimeTrimmed, eventEndTimeTrimmed);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Mack34021"},"content":"        printMessage(\"Added Event: \u0027\" + eventNameTrimmed + \"\u0027 starting at \u0027\" + eventStartTimeTrimmed","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Mack34021"},"content":"                + \"\u0027 and ending at \u0027\" + eventEndTimeTrimmed + \"\u0027\", false);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Mack34021"},"content":"     * Adds deadline to the taskList list","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Mack34021"},"content":"     * @param commandsList The user\u0027s input command, split into words","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Mack34021"},"content":"     * @param taskList     The taskList to add the newly-created task to","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Mack34021"},"content":"    private static void addDeadlineToTaskList(ArrayList\u003cString\u003e commandsList, TaskList taskList) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Mack34021"},"content":"        StringBuilder deadlineName \u003d new StringBuilder();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Mack34021"},"content":"        StringBuilder deadlineDueBy \u003d new StringBuilder();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Mack34021"},"content":"        // Loop through all words in command, looking for \"/by\" to find the due time","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Mack34021"},"content":"        for (int i \u003d 1; i \u003c commandsList.size(); i++) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Mack34021"},"content":"            String str \u003d commandsList.get(i);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Mack34021"},"content":"            if (str.startsWith(\"/by\")) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Mack34021"},"content":"                for (int j \u003d i + 1; j \u003c commandsList.size(); j++) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Mack34021"},"content":"                    String str2 \u003d commandsList.get(j);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Mack34021"},"content":"                    if (str2.startsWith(\"/\")) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Mack34021"},"content":"                        break;  // As another command found, is no longer part of \u0027/by\u0027","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Mack34021"},"content":"                    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Mack34021"},"content":"                    deadlineDueBy.append(str2).append(\" \");","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Mack34021"},"content":"                }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Mack34021"},"content":"                break;","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Mack34021"},"content":"            } else {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Mack34021"},"content":"                // Then not the deadline, so add to the task text","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Mack34021"},"content":"                deadlineName.append(str).append(\" \");","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"Mack34021"},"content":"            }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Mack34021"},"content":"        // Trim all strings, then create and add deadline to the task list","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Mack34021"},"content":"        String deadlineNameTrimmed \u003d deadlineName.toString().trim();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Mack34021"},"content":"        String deadlineDueByTrimmed \u003d deadlineDueBy.toString().trim();","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Mack34021"},"content":"        if (deadlineNameTrimmed.isEmpty()) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Mack34021"},"content":"            deadlineNameTrimmed \u003d \"UNSPECIFIED\";   // In case user forgets to give due date","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Mack34021"},"content":"        if (deadlineDueByTrimmed.isEmpty()) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Mack34021"},"content":"            deadlineDueByTrimmed \u003d \"UNSPECIFIED\";   // In case user forgets to give due date","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"Mack34021"},"content":"        taskList.addDeadlineToList(deadlineNameTrimmed, deadlineDueByTrimmed);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Mack34021"},"content":"        printMessage(\"Added Deadline: \u0027\" + deadlineNameTrimmed","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Mack34021"},"content":"                + \"\u0027 due by \u0027\" + deadlineDueByTrimmed + \"\u0027\", false);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Mack34021"},"content":"     * Marks a task as complete","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Mack34021"},"content":"     * @param taskToMark The task index to mark as complete","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Mack34021"},"content":"     * @param taskList   The list of tasks","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Mack34021"},"content":"    private static void markTaskDone(String taskToMark, TaskList taskList) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Mack34021"},"content":"        int taskIndex \u003d Integer.parseInt(taskToMark);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Mack34021"},"content":"        if (taskIndex \u003c\u003d 0) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Mate.... task \"","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Mack34021"},"content":"                    + taskIndex + \" ..... really? Indexing starts at task 1.\", false);","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Mack34021"},"content":"            return;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Mack34021"},"content":"        if (taskIndex \u003e\u003d taskList.getTaskListLength()) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Brother you are not that busy, you don\u0027t have \"","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Mack34021"},"content":"                    + taskIndex + \" tasks, you only got \" + (taskList.getTaskListLength() - 1), false);","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Mack34021"},"content":"            return;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Mack34021"},"content":"        Task curTask \u003d taskList.getTaskFromList(taskIndex);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Mack34021"},"content":"        if (curTask.getIsTaskDone()) {","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Hey! That\u0027s already complete\\n[X] \" + curTask.toString(), false);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Mack34021"},"content":"        } else {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Mack34021"},"content":"            curTask.setTaskDone(true);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"OK! Task marked complete!\\n[X] \" + curTask.toString(), false);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Mack34021"},"content":"     * Marks a task as not complete","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Mack34021"},"content":"     * @param taskToMark The task index to mark as complete","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Mack34021"},"content":"     * @param taskList   The list of tasks to find taskToMark within","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Mack34021"},"content":"    private static void unmarkTaskDone(String taskToMark, TaskList taskList) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Mack34021"},"content":"        int taskIndex \u003d Integer.parseInt(taskToMark);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Mack34021"},"content":"        if (taskIndex \u003c\u003d 0) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Mate.... task \"","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"Mack34021"},"content":"                    + taskIndex + \" ..... really? Indexing starts at task 1.\", false);","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"Mack34021"},"content":"            return;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"Mack34021"},"content":"        if (taskIndex \u003e\u003d taskList.getTaskListLength()) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Brother you are not that busy, you don\u0027t have \"","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Mack34021"},"content":"                    + taskIndex + \" tasks, you only got \" + (taskList.getTaskListLength() - 1), false);","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"Mack34021"},"content":"            return;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Mack34021"},"content":"        Task curTask \u003d taskList.getTaskFromList(taskIndex);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Mack34021"},"content":"        if (!curTask.getIsTaskDone()) {","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"Hey! That\u0027s already not complete\\n[ ] \"","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Mack34021"},"content":"                    + curTask.toString(), false);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Mack34021"},"content":"        } else {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"Mack34021"},"content":"            curTask.setTaskDone(false);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Mack34021"},"content":"            printMessage(\"OK! Task marked as incomplete!\\n[ ] \"","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Mack34021"},"content":"                    + curTask.toString(), false);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Mack34021"},"content":"     * Lists all currently-saved tasks in a user-friendly manner","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"Mack34021"},"content":"     * @param taskList The list to print","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Mack34021"},"content":"    private static void listAllTasks(TaskList taskList) {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Mack34021"},"content":"        StringBuilder taskListString \u003d new StringBuilder();","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"Mack34021"},"content":"        for (int i \u003d 1; i \u003c taskList.getTaskListLength(); i++) {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"Mack34021"},"content":"            Task curTask \u003d taskList.getTaskFromList(i);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"Mack34021"},"content":"            String taskMarker \u003d curTask.getIsTaskDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Mack34021"},"content":"            String taskType;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"Mack34021"},"content":"            if (curTask instanceof Deadline) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Mack34021"},"content":"                taskType \u003d \"[D]\";","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Mack34021"},"content":"            } else if (curTask instanceof Event) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Mack34021"},"content":"                taskType \u003d \"[E]\";","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Mack34021"},"content":"            } else {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Mack34021"},"content":"                taskType \u003d \"[T]\";","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Mack34021"},"content":"            }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"Mack34021"},"content":"            taskListString.append(String.format(\"%d.%s%s %s\", i, taskType, taskMarker, curTask.toString()));","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Mack34021"},"content":"            if (i \u003c taskList.getTaskListLength() - 1) {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Mack34021"},"content":"                taskListString.append(\u0027\\n\u0027);","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Mack34021"},"content":"            }","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Mack34021"},"content":"        printMessage(taskListString.toString(), false);","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Mack34021"},"content":"     * Prints to terminal in a nice formatted manner.","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Mack34021"},"content":"     * @param message String to be printed to the user","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Mack34021"},"content":"    private static void printMessage(String message, boolean isFinalMessage) {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Mack34021"},"content":"        String modMessage \u003d message.replaceAll(\"\\n\", \"\\n  \");","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Mack34021"},"content":"        System.out.println(\"  _________Baraleous__________\");","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Mack34021"},"content":"        System.out.println(\"  \" + modMessage);","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Mack34021"},"content":"        if (!isFinalMessage) {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Mack34021"},"content":"            System.out.println(\"  ____________User____________\");","lastModifiedDate":"2025-09-02T16:36:47","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-08-26T19:16:04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-08-26T19:16:04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-08-26T19:16:04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"Mack34021"},"content":"     * Splits the string into an array of words","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"Mack34021"},"content":"     * @param string       The string to be extracted from","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"Mack34021"},"content":"     * @param commandsList The arraylist to write identified commands into","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"Mack34021"},"content":"    private static void getWordArrayFromString(String string, ArrayList\u003cString\u003e commandsList) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"Mack34021"},"content":"        // Trims whitespace, and finds the end of the word","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"Mack34021"},"content":"        String stringTrimmed \u003d string.trim();","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"Mack34021"},"content":"        int firstSpace \u003d stringTrimmed.indexOf(\" \");","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"Mack34021"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"Mack34021"},"content":"            firstSpace \u003d stringTrimmed.length();","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Mack34021"},"content":"        // Adds the first word to the commandsList ArrayList","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Mack34021"},"content":"        String firstWord \u003d stringTrimmed.substring(0, firstSpace).trim();","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Mack34021"},"content":"        commandsList.add(firstWord);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Mack34021"},"content":"        // Finds remaining string, and recursively passes. Base case then there is no remaining string.","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Mack34021"},"content":"        String remainder \u003d stringTrimmed.substring(firstSpace);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Mack34021"},"content":"        if (!remainder.isEmpty()) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Mack34021"},"content":"            getWordArrayFromString(remainder, commandsList);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"Mack34021"},"content":"        }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"Mack34021"},"content":"    /**","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"Mack34021"},"content":"     * Splits string into arrayList of strings, one word long each","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Mack34021"},"content":"     *","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"Mack34021"},"content":"     * @param userInput Unformatted string input from scanner","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"Mack34021"},"content":"     * @return Arraylist\u003cString\u003e of words (stings with no whitespaces)","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"Mack34021"},"content":"     */","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Mack34021"},"content":"    private static ArrayList\u003cString\u003e getArguments(String userInput) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Mack34021"},"content":"        ArrayList\u003cString\u003e commandsList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Mack34021"},"content":"        getWordArrayFromString(userInput, commandsList);","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Mack34021"},"content":"        return commandsList;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Mack34021"},"content":"}","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false}],"authorContributionMap":{"Mack34021":310}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mack34021"},"content":"public class Deadline extends Task{","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Mack34021"},"content":"    private String dueBy;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Mack34021"},"content":"    public Deadline(String task, String dueBy) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Mack34021"},"content":"        super(task);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Mack34021"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Mack34021"},"content":"    @Override","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Mack34021"},"content":"    public String toString() {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Mack34021"},"content":"        return super.toString() + \" (by: \" + dueBy + \")\";","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Mack34021"},"content":"}","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false}],"authorContributionMap":{"Mack34021":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mack34021"},"content":"public class Event extends Task{","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Mack34021"},"content":"    private String startsAt;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Mack34021"},"content":"    private String endsAt;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Mack34021"},"content":"    public Event(String task, String startsAt, String endsAt) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Mack34021"},"content":"        super(task);","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Mack34021"},"content":"        this.startsAt \u003d startsAt;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Mack34021"},"content":"        this.endsAt \u003d endsAt;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Mack34021"},"content":"    @Override","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Mack34021"},"content":"    public String toString() {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Mack34021"},"content":"        return super.toString() + \" (from: \" + startsAt + \" to: \" + endsAt + \")\";","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Mack34021"},"content":"}","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false}],"authorContributionMap":{"Mack34021":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mack34021"},"content":"public class Task{","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Mack34021"},"content":"    private String task;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Mack34021"},"content":"    private boolean isTaskDone;","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Mack34021"},"content":"    public Task(String task) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Mack34021"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Mack34021"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Mack34021"},"content":"    public void setTaskString(String task) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Mack34021"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Mack34021"},"content":"    public boolean getIsTaskDone() {","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Mack34021"},"content":"        return isTaskDone;","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Mack34021"},"content":"    public void setTaskDone(boolean taskDone) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Mack34021"},"content":"        this.isTaskDone \u003d taskDone;","lastModifiedDate":"2025-09-02T18:58:11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Mack34021"},"content":"    @Override","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Mack34021"},"content":"    public String toString() {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Mack34021"},"content":"        return task;","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Mack34021"},"content":"}","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false}],"authorContributionMap":{"Mack34021":26}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mack34021"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Mack34021"},"content":"public class TaskList {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Mack34021"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Mack34021"},"content":"    public TaskList() {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Mack34021"},"content":"        this.taskList.add(new Task(\"ROOTTASK\"));","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Mack34021"},"content":"    public int getTaskListLength() {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Mack34021"},"content":"        return taskList.size();","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Mack34021"},"content":"    public void addTaskToList(String str) {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Mack34021"},"content":"        taskList.add(new Task(str));","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Mack34021"},"content":"    public void addDeadlineToList(String str, String dueBy) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Mack34021"},"content":"        taskList.add(new Deadline(str, dueBy));","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Mack34021"},"content":"    public void addEventToList(String str, String startTime, String endTime) {","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Mack34021"},"content":"        taskList.add(new Event(str, startTime, endTime));","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-03T16:56:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Mack34021"},"content":"    public Task getTaskFromList(int index) {","lastModifiedDate":"2025-09-02T18:26:16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Mack34021"},"content":"        return taskList.get(index);","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Mack34021"},"content":"","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Mack34021"},"content":"    @Override","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Mack34021"},"content":"    public String toString() {","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Mack34021"},"content":"        return \"TaskList{\" +","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Mack34021"},"content":"                \"taskList\u003d\" + taskList +","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Mack34021"},"content":"                \u0027}\u0027;","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Mack34021"},"content":"    }","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Mack34021"},"content":"}","lastModifiedDate":"2025-09-02T17:25:27","isFullCredit":false}],"authorContributionMap":{"Mack34021":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mack34021"},"content":"Test input 1","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Mack34021"},"content":"Test2","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Mack34021"},"content":"mark 1","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Mack34021"},"content":"mark 1","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Mack34021"},"content":"mark 2","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Mack34021"},"content":"mark 2","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Mack34021"},"content":"deadline work /by this afternoon","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Mack34021"},"content":"deadline play /by never :((((","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Mack34021"},"content":"list","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Mack34021"},"content":"mark 3","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Mack34021"},"content":"list","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Mack34021"},"content":"event sleeping /from 2am /to feels like 6am RIP my sleep schedule","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Mack34021"},"content":"mark 5","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Mack34021"},"content":"list","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Mack34021"},"content":"todo sleep","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Mack34021"},"content":"todo cry","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Mack34021"},"content":"mark 7","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Mack34021"},"content":"list","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false}],"authorContributionMap":{"Mack34021":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Mack34021"},"content":"java -classpath ..\\bin Baraleous \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-05T15:17:47","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"Mack34021":1,"-":20}}]
