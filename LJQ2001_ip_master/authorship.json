[{"path":"src/main/java/Resonant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"/*","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":" * Resonant is a simple CLI chatbot that:","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":" * - Echoes and stores user inputs as tasks,","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":" * - Lists tasks with indices and status,","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":" * - Marks/unmarks tasks as done using commands \"mark N\" / \"unmark N\",","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * - Adds ToDos via \"todo \u003cdesc\u003e\",","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * - Adds Deadlines via \"deadline \u003cdesc\u003e /by \u003cwhen\u003e\",","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * - Adds Events via \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\",","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * - Exits on \"bye\".","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" *","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":" * Storage is an in-memory fixed-size array of up to 100 tasks.","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":" *","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":" * Notes on date/time:","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":" *   Dates/times are treated as plain strings (no parsing needed).","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":" *","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":" * Examples:","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":" *   todo borrow book","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":" *   deadline return book /by Sunday","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":" *   event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"public class Resonant {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d Base class and subclasses (A-Inheritance) \u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"    static class Task {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"        protected final String description;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"        protected boolean isDone;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"        Task(String description) {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"            this.description \u003d description;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"        void mark() { this.isDone \u003d true; }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"        void unmark() { this.isDone \u003d false; }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"        String getStatusIcon() { return isDone ? \"X\" : \" \"; }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"        /** Base renders \"[\u003cstatus\u003e] description\". Subclasses prepend their type icon and optionally append details. */","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"        @Override","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"        public String toString() {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"            return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"    static class Todo extends Task {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"        Todo(String description) {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"            super(description);","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"        @Override","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"        public String toString() {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"    static class Deadline extends Task {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"        protected final String by;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"        Deadline(String description, String by) {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"            super(description);","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"            this.by \u003d by;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"        @Override","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"        public String toString() {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"    static class Event extends Task {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":"        protected final String from;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":"        protected final String to;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":"        Event(String description, String from, String to) {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":"            super(description);","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"            this.from \u003d from;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"            this.to \u003d to;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"        @Override","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LJQ2001"},"content":"        public String toString() {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LJQ2001"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LJQ2001"},"content":"    // ----- Simple fixed-size store (\u003c\u003d100 tasks) -----","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LJQ2001"},"content":"    private static final Task[] tasks \u003d new Task[100];","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LJQ2001"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LJQ2001"},"content":"     * Runs the Resonant chatbot REPL until the user types \"bye\".","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LJQ2001"},"content":"     * Supported commands:","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LJQ2001"},"content":"     *   \"list\" – prints all tasks","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LJQ2001"},"content":"     *   \"mark N\" – marks task N as done (1-based)","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LJQ2001"},"content":"     *   \"unmark N\" – marks task N as not done (1-based)","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LJQ2001"},"content":"     *   \"todo \u003cdesc\u003e\" – adds a ToDo","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LJQ2001"},"content":"     *   \"deadline \u003cdesc\u003e /by \u003cwhen\u003e\" – adds a Deadline","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LJQ2001"},"content":"     *   \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\" – adds an Event","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LJQ2001"},"content":"     *   any other non-empty line – added as a ToDo (fallback)","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LJQ2001"},"content":"     *   \"bye\" – exits","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LJQ2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LJQ2001"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LJQ2001"},"content":"        box(","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LJQ2001"},"content":"                \" Hello! I\u0027m Resonant\",","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LJQ2001"},"content":"                \" What can I do for you?\"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LJQ2001"},"content":"        );","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LJQ2001"},"content":"        while (true) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LJQ2001"},"content":"            String input \u003d sc.nextLine().trim();","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LJQ2001"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LJQ2001"},"content":"                box(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LJQ2001"},"content":"                break;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LJQ2001"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LJQ2001"},"content":"                printList();","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LJQ2001"},"content":"            } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LJQ2001"},"content":"                handleMarkUnmark(input, true);","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LJQ2001"},"content":"            } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LJQ2001"},"content":"                handleMarkUnmark(input, false);","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LJQ2001"},"content":"            } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LJQ2001"},"content":"                String desc \u003d input.substring(5).trim();","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LJQ2001"},"content":"                if (!desc.isEmpty()) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LJQ2001"},"content":"                    addTask(new Todo(desc));","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LJQ2001"},"content":"                } else {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LJQ2001"},"content":"                    box(\" Please provide a description, e.g., todo borrow book\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LJQ2001"},"content":"                }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LJQ2001"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LJQ2001"},"content":"                handleDeadline(input);","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LJQ2001"},"content":"            } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LJQ2001"},"content":"                handleEvent(input);","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LJQ2001"},"content":"            } else if (!input.isEmpty()) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LJQ2001"},"content":"                // Fallback: treat any other non-empty line as a ToDo for convenience","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LJQ2001"},"content":"                addTask(new Todo(input));","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LJQ2001"},"content":"        sc.close();","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LJQ2001"},"content":"    /** Handle \"deadline \u003cdesc\u003e /by \u003cwhen\u003e\" */","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LJQ2001"},"content":"    private static void handleDeadline(String input) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LJQ2001"},"content":"        String body \u003d input.substring(\"deadline\".length()).trim();","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LJQ2001"},"content":"        if (body.isEmpty()) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LJQ2001"},"content":"            box(\" Please provide a description and /by, e.g., deadline return book /by Sunday\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LJQ2001"},"content":"        String[] split \u003d splitOnKeyword(body, \"/by\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LJQ2001"},"content":"        String desc \u003d split[0];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LJQ2001"},"content":"        String by \u003d split[1];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LJQ2001"},"content":"        if (by \u003d\u003d null) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LJQ2001"},"content":"            box(\" Missing \u0027/by\u0027. Use e.g., deadline return book /by Sunday\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"LJQ2001"},"content":"        addTask(new Deadline(desc, by));","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"LJQ2001"},"content":"    /** Handle \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\" */","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"LJQ2001"},"content":"    private static void handleEvent(String input) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"LJQ2001"},"content":"        String body \u003d input.substring(\"event\".length()).trim();","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"LJQ2001"},"content":"        if (body.isEmpty()) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"LJQ2001"},"content":"            box(\" Please provide a description, /from and /to, e.g., event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"LJQ2001"},"content":"        String[] splitFrom \u003d splitOnKeyword(body, \"/from\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"LJQ2001"},"content":"        String desc \u003d splitFrom[0];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"LJQ2001"},"content":"        String fromPart \u003d splitFrom[1];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"LJQ2001"},"content":"        if (fromPart \u003d\u003d null) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"LJQ2001"},"content":"            box(\" Missing \u0027/from\u0027. Use e.g., event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"LJQ2001"},"content":"        String[] splitTo \u003d splitOnKeyword(fromPart, \"/to\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"LJQ2001"},"content":"        String from \u003d splitTo[0];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"LJQ2001"},"content":"        String to \u003d splitTo[1];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"LJQ2001"},"content":"        if (to \u003d\u003d null) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"LJQ2001"},"content":"            box(\" Missing \u0027/to\u0027. Use e.g., event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"LJQ2001"},"content":"        addTask(new Event(desc, from, to));","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"LJQ2001"},"content":"     * Splits a command body by the first occurrence of a keyword (case sensitive),","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"LJQ2001"},"content":"     * returning a 2-element array: [leftTrimmed, rightTrimmedOrNull].","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"LJQ2001"},"content":"     * E.g., splitOnKeyword(\"return book /by Sunday\", \"/by\") -\u003e [\"return book\", \"Sunday\"]","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"LJQ2001"},"content":"    private static String[] splitOnKeyword(String text, String keyword) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"LJQ2001"},"content":"        int idx \u003d indexOfKeyword(text, keyword);","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"LJQ2001"},"content":"        if (idx \u003d\u003d -1) return new String[]{ text.trim(), null };","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"LJQ2001"},"content":"        String left \u003d text.substring(0, idx).trim();","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"LJQ2001"},"content":"        String right \u003d text.substring(idx + keyword.length()).trim();","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"LJQ2001"},"content":"        return new String[]{ left, right };","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"LJQ2001"},"content":"    /** Finds the index of the keyword considering optional leading spaces before it. */","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"LJQ2001"},"content":"    private static int indexOfKeyword(String text, String keyword) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"LJQ2001"},"content":"        return text.indexOf(keyword);","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"LJQ2001"},"content":"     * Adds a task (any type), if capacity allows, and prints the standardized box.","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"LJQ2001"},"content":"    private static void addTask(Task t) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"LJQ2001"},"content":"        if (taskCount \u003e\u003d 100) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"LJQ2001"},"content":"            box(\" Sorry, your task list is full (100 items).\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"LJQ2001"},"content":"        tasks[taskCount++] \u003d t;","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"LJQ2001"},"content":"        box(","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"LJQ2001"},"content":"                \" Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"LJQ2001"},"content":"                \"   \" + t.toString(),","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"LJQ2001"},"content":"                \" Now you have \" + taskCount + \" \" + (taskCount \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"LJQ2001"},"content":"        );","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"LJQ2001"},"content":"    /** Prints the current task list with indices and status/type icons. */","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"LJQ2001"},"content":"    private static void printList() {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"LJQ2001"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"LJQ2001"},"content":"            box(\" Your list is empty.\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"LJQ2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"LJQ2001"},"content":"        sb.append(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"LJQ2001"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"LJQ2001"},"content":"            sb.append(\"\\n \").append(i + 1).append(\".\").append(tasks[i].toString());","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"LJQ2001"},"content":"        box(sb.toString());","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"LJQ2001"},"content":"     * Handles mark N / unmark N","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"LJQ2001"},"content":"    private static void handleMarkUnmark(String input, boolean mark) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"LJQ2001"},"content":"        String[] parts \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"LJQ2001"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"LJQ2001"},"content":"            box(\" Please provide a task number, e.g., \" + (mark ? \"mark 2\" : \"unmark 2\"));","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"LJQ2001"},"content":"        try {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"LJQ2001"},"content":"            int idx \u003d Integer.parseInt(parts[1]); // 1-based","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"LJQ2001"},"content":"            if (idx \u003c 1 || idx \u003e taskCount) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"LJQ2001"},"content":"                box(\" Task number out of range. You have \" + taskCount + \" task(s).\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"LJQ2001"},"content":"                return;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"LJQ2001"},"content":"            Task t \u003d tasks[idx - 1];","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"LJQ2001"},"content":"            if (mark) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"LJQ2001"},"content":"                t.mark();","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"LJQ2001"},"content":"                box(","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"LJQ2001"},"content":"                        \" Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"LJQ2001"},"content":"                        \"   \" + t.toString()","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"LJQ2001"},"content":"                );","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"LJQ2001"},"content":"            } else {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"LJQ2001"},"content":"                t.unmark();","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"LJQ2001"},"content":"                box(","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"LJQ2001"},"content":"                        \" OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"LJQ2001"},"content":"                        \"   \" + t.toString()","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"LJQ2001"},"content":"                );","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"LJQ2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"LJQ2001"},"content":"            box(\" Invalid number. Use e.g., \" + (mark ? \"mark 2\" : \"unmark 2\"));","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"LJQ2001"},"content":"    /** Prints a box with the given lines inside. */","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"LJQ2001"},"content":"    private static void box(String... lines) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"LJQ2001"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"LJQ2001"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"LJQ2001"},"content":"            System.out.println(line);","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"LJQ2001"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false}],"authorContributionMap":{"LJQ2001":281}}]
