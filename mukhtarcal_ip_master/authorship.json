[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"# Dennis.ui.Dennis project template","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mukhtarcal"},"content":"1. After that, locate the `src/main/java/Dennis.ui.Dennis.java` file, right-click it, and choose `Run Dennis.ui.Dennis.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"-":24,"mukhtarcal":2}},{"path":"data/dennis.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"T | 0 | read","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mukhtarcal"},"content":"T | 1 | read1","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mukhtarcal"},"content":"D | 0 | read2 | wednesday","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mukhtarcal"},"content":"E | 0 | read3 | 1 | 2","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false}],"authorContributionMap":{"mukhtarcal":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"# Dennis.ui.Dennis User Guide","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"-":29,"mukhtarcal":1}},{"path":"src/main/java/Dennis/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"package Dennis.task;","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mukhtarcal"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mukhtarcal"},"content":"    String by;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mukhtarcal"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mukhtarcal"},"content":"        super(description);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mukhtarcal"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mukhtarcal"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mukhtarcal"},"content":"    public String getBy() {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mukhtarcal"},"content":"        return this.by;","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mukhtarcal"},"content":"    @Override","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mukhtarcal"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mukhtarcal"},"content":"        return \"[\" + type + \"]\" + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mukhtarcal"},"content":"}","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false}],"authorContributionMap":{"mukhtarcal":20}},{"path":"src/main/java/Dennis/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"package Dennis.task;","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mukhtarcal"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mukhtarcal"},"content":"    String from;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mukhtarcal"},"content":"    String to;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mukhtarcal"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mukhtarcal"},"content":"        super(description);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mukhtarcal"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mukhtarcal"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mukhtarcal"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mukhtarcal"},"content":"    public String getFrom() {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mukhtarcal"},"content":"        return this.from;","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mukhtarcal"},"content":"    public String getTo() {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mukhtarcal"},"content":"        return this.to;","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mukhtarcal"},"content":"    @Override","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mukhtarcal"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mukhtarcal"},"content":"        return \"[\" + type + \"]\" + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mukhtarcal"},"content":"}","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false}],"authorContributionMap":{"mukhtarcal":26}},{"path":"src/main/java/Dennis/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"package Dennis.task;","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mukhtarcal"},"content":"public class Task {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mukhtarcal"},"content":"    String description;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mukhtarcal"},"content":"    boolean isDone;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mukhtarcal"},"content":"    String type \u003d \" \";","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mukhtarcal"},"content":"    // create task with isDone defaulted to false","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mukhtarcal"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mukhtarcal"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mukhtarcal"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mukhtarcal"},"content":"    // method to return description","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mukhtarcal"},"content":"    public String getDescription() {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mukhtarcal"},"content":"        return this.description;","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mukhtarcal"},"content":"    // method to return isDone","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mukhtarcal"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mukhtarcal"},"content":"        return this.isDone;","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mukhtarcal"},"content":"    // method to mark task as complete","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mukhtarcal"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mukhtarcal"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mukhtarcal"},"content":"    // method to unmark task as incomplete","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mukhtarcal"},"content":"    public void unmarkAsNotDone() {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mukhtarcal"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mukhtarcal"},"content":"    // method to display task","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mukhtarcal"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mukhtarcal"},"content":"        return \"[\" + type + \"]\" + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mukhtarcal"},"content":"}","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false}],"authorContributionMap":{"mukhtarcal":38}},{"path":"src/main/java/Dennis/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"package Dennis.task;","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mukhtarcal"},"content":"import Dennis.task.Task;","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mukhtarcal"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mukhtarcal"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mukhtarcal"},"content":"        super(description);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mukhtarcal"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mukhtarcal"},"content":"}","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false}],"authorContributionMap":{"mukhtarcal":10}},{"path":"src/main/java/Dennis/ui/Dennis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"package Dennis.ui;","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mukhtarcal"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mukhtarcal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mukhtarcal"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mukhtarcal"},"content":"import java.io.File;","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mukhtarcal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mukhtarcal"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-12T19:43:57","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mukhtarcal"},"content":"import Dennis.task.*;","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"mukhtarcal"},"content":"public class Dennis {","lastModifiedDate":"2025-08-25T15:56:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"mukhtarcal"},"content":"    private static final String DATA_DIR \u003d \"./data\";","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"mukhtarcal"},"content":"    private static final String DATA_FILE \u003d DATA_DIR + \"/dennis.txt\";","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"mukhtarcal"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-25T15:56:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"mukhtarcal"},"content":"        final int MAX_NUM_TASKS \u003d 100;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mukhtarcal"},"content":"        final String LOGO \u003d","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"mukhtarcal"},"content":"                \"██████╗  \" + \"███████╗ \" + \"███╗   ██╗ \" + \"███╗   ██╗ \" + \"██╗ \" + \"███████╗\\n\" +","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mukhtarcal"},"content":"                \"██╔══██╗ \" + \"██╔════╝ \" + \"████╗  ██║ \" + \"████╗  ██║ \" + \"██║ \" + \"██╔════╝\\n\" +","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"mukhtarcal"},"content":"                \"██║  ██║ \" + \"█████╗   \" + \"██╔██╗ ██║ \" + \"██╔██╗ ██║ \" + \"██║ \" + \"███████╗\\n\" +","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"mukhtarcal"},"content":"                \"██║  ██║ \" + \"███╔══╝  \" + \"██║╚██╗██║ \" + \"██║╚██╗██║ \" + \"██║ \" + \"╚════██║\\n\" +","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"mukhtarcal"},"content":"                \"██████╔╝ \" + \"███████╗ \" + \"██║ ╚████║ \" + \"██║ ╚████║ \" + \"██║ \" + \"███████║\\n\" +","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"mukhtarcal"},"content":"                \"╚═════╝  \" + \"╚══════╝ \" + \"╚═╝  ╚═══╝ \" + \"╚═╝  ╚═══╝ \" + \"╚═╝ \" + \"╚══════╝\\n\";","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"mukhtarcal"},"content":"        ensureDataDirExists();","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"mukhtarcal"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"mukhtarcal"},"content":"        loadInData(taskList);","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"mukhtarcal"},"content":"        // greeting message","lastModifiedDate":"2025-09-02T16:20:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"mukhtarcal"},"content":"        printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"mukhtarcal"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"mukhtarcal"},"content":"        System.out.println(\" Yooo! I\u0027m Dennis, PRETTY SICK LOGO HUH?!\\n\" + \" Alright, What do you want? :|\\n\");","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"mukhtarcal"},"content":"        printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"mukhtarcal"},"content":"        String line;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"mukhtarcal"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"mukhtarcal"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"mukhtarcal"},"content":"        // as long as the user does not say bye, take in the user input","lastModifiedDate":"2025-09-02T16:20:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"mukhtarcal"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"mukhtarcal"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2025-09-02T16:20:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-02T16:20:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"mukhtarcal"},"content":"            switch (words[0]) {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"mukhtarcal"},"content":"            case \"list\":","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"mukhtarcal"},"content":"                printTaskList(taskList);","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"mukhtarcal"},"content":"                break;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"mukhtarcal"},"content":"            case \"mark\":","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"mukhtarcal"},"content":"                try {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"mukhtarcal"},"content":"                    int taskIndexMark \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"mukhtarcal"},"content":"                    taskList.get(taskIndexMark).markAsDone();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Alright, i\u0027ve marked this task as FINALLY completed:\\n   \"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"mukhtarcal"},"content":"                            + taskList.get(taskIndexMark));","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"mukhtarcal"},"content":"                    saveTasks(taskList);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"mukhtarcal"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! You need to give me a valid task to mark! The form of the command is:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"mukhtarcal"},"content":"                            \" mark #\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"mukhtarcal"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! The task number needs to be a valid digit! Follow this format:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"mukhtarcal"},"content":"                            \" mark #\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"mukhtarcal"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! You need to give me a valid task to mark! The form of the command is:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"mukhtarcal"},"content":"                            \" mark #\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\\n\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"mukhtarcal"},"content":"                }","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"mukhtarcal"},"content":"                break;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"mukhtarcal"},"content":"            case \"unmark\":","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"mukhtarcal"},"content":"                try {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"mukhtarcal"},"content":"                    int taskIndexUnmark \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"mukhtarcal"},"content":"                    taskList.get(taskIndexUnmark).unmarkAsNotDone();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" OK, I\u0027ve marked this task as not done because you STILL haven\u0027t completed it:\\n   \"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"mukhtarcal"},"content":"                            + taskList.get(taskIndexUnmark));","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"mukhtarcal"},"content":"                    saveTasks(taskList);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"mukhtarcal"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! You need to give me a valid task to unmark! The form of the command is:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"mukhtarcal"},"content":"                            \" unmark #\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"mukhtarcal"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! The task number needs to be a valid digit! Follow this format:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"mukhtarcal"},"content":"                            \" unmark #\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"mukhtarcal"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! You need to give me a valid task to unmark! The form of the command is:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"mukhtarcal"},"content":"                            \" unmark #\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\\n\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"mukhtarcal"},"content":"                }","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"mukhtarcal"},"content":"                break;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"mukhtarcal"},"content":"            case \"todo\":","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"mukhtarcal"},"content":"                // if there are no words after \"todo\", print error message","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"mukhtarcal"},"content":"                if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" OMG your todo obviously can\u0027t be empty!\\n\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"mukhtarcal"},"content":"                }","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"mukhtarcal"},"content":"                String todoDescription \u003d line.substring(line.indexOf(\" \") + 1).trim();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"mukhtarcal"},"content":"                Todo newTodo \u003d new Todo(todoDescription);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"mukhtarcal"},"content":"                taskList.add(newTodo);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"mukhtarcal"},"content":"                System.out.println(\" Ok, I added this TODO, make sure you actually do it!\\n\");","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"mukhtarcal"},"content":"                System.out.println(\" \" + taskList.get(taskList.size() - 1));","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"mukhtarcal"},"content":"                saveTasks(taskList);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"mukhtarcal"},"content":"                break;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"mukhtarcal"},"content":"            case \"deadline\":","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"mukhtarcal"},"content":"                // if there are no words after \"deadline\", print error message","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"mukhtarcal"},"content":"                if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" OMG your deadline obviously can\u0027t be empty!\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"mukhtarcal"},"content":"                } else if (!line.contains(\"/by\")) { // if the event doesn\u0027t contain \"/by\", print error message","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" You need to include the \\\"/by\\\" keyword when creating a deadline!\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"mukhtarcal"},"content":"                            \" Do I need to spell it out for you?! Fine, I will, your deadline command needs to be of the form:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"mukhtarcal"},"content":"                            \" \\\"deadline deadline_name /by duedate\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is missing \\\"/by\\\" keyword\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"mukhtarcal"},"content":"                }","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"mukhtarcal"},"content":"                String[] deadlineParts \u003d line.split(\"/by\", 2);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"mukhtarcal"},"content":"                String deadlineDescription \u003d deadlineParts[0].substring(\"deadline\".length()).trim();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"mukhtarcal"},"content":"                String by \u003d deadlineParts[1].trim();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"mukhtarcal"},"content":"                Deadline newDeadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"mukhtarcal"},"content":"                taskList.add(newDeadline);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"mukhtarcal"},"content":"                System.out.println(\" Ok, I added this deadline, make sure you actually do it BY THE DEADLINE!\\n\");","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"mukhtarcal"},"content":"                System.out.println(\" \" + taskList.get(taskList.size() - 1));","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"mukhtarcal"},"content":"                saveTasks(taskList);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"mukhtarcal"},"content":"                break;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"mukhtarcal"},"content":"            case \"event\":","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"mukhtarcal"},"content":"                // if there are no words after \"event\", print error message","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"mukhtarcal"},"content":"                if (words.length \u003d\u003d 1) {","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" OMG your event obviously can\u0027t be empty!\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"mukhtarcal"},"content":"                } else if (!line.contains(\"/from\") \u0026\u0026 !line.contains(\"/to\")) { // if the event doesn\u0027t contain \"/from\" and \"/to\", print error message","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" You need to include the \\\"/from\\\" and \\\"/to\\\" keywords when creating an event!\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"mukhtarcal"},"content":"                            \" Do I need to spell it out for you?! Fine, I will, your event command needs to be of the form:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"mukhtarcal"},"content":"                            \" \\\"event event_name /from beginning /to end\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is missing \\\"/from\\\" and \\\"/to\\\" keywords\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"mukhtarcal"},"content":"                } else if (!line.contains(\"/from\")) { // if the event doesn\u0027t contain \"/from\", print error message","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" You need to include the \\\"/from\\\" keyword when creating an event!\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"mukhtarcal"},"content":"                            \" Do I need to spell it out for you?! Fine, I will, your event command needs to be of the form:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"mukhtarcal"},"content":"                            \" \\\"event event_name /from beginning /to end\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is missing \\\"/from\\\" keyword\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"mukhtarcal"},"content":"                } else if (!line.contains(\"/to\")) { // if the event doesn\u0027t contain \"/to\", print error message","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" You need to include the \\\"/to\\\" keyword when creating an event!\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"mukhtarcal"},"content":"                            \" Do I need to spell it out for you?! Fine, I will, your event command needs to be of the form:\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"mukhtarcal"},"content":"                            \" \\\"event event_name /from beginning /to end\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is missing \\\"/to\\\" keyword\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"mukhtarcal"},"content":"                }","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"mukhtarcal"},"content":"                String[] eventParts \u003d line.split(\"/from\", 2);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"mukhtarcal"},"content":"                String eventDescription \u003d eventParts[0].substring(\"event\".length()).trim();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"mukhtarcal"},"content":"                String[] timeParts \u003d eventParts[1].split(\"/to\", 2);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"mukhtarcal"},"content":"                String from \u003d timeParts[0].trim();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"mukhtarcal"},"content":"                String to \u003d timeParts[1].trim();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"mukhtarcal"},"content":"                Event newEvent \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"mukhtarcal"},"content":"                taskList.add(newEvent);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"mukhtarcal"},"content":"                System.out.println(\" Ok, I added this event, make sure you actually show up ON TIME!\\n\");","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"mukhtarcal"},"content":"                System.out.println(\" \" + taskList.get(taskList.size() - 1));","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"mukhtarcal"},"content":"                break;","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"mukhtarcal"},"content":"            case \"delete\":","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"mukhtarcal"},"content":"                try {","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"mukhtarcal"},"content":"                    int taskIndexDelete \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"mukhtarcal"},"content":"                    Task deletedTask \u003d taskList.get(taskIndexDelete);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"mukhtarcal"},"content":"                    taskList.remove(taskIndexDelete);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" OK, I\u0027ve deleted this task, I hope you didn\u0027t just delete it because you don\u0027t feel like doing it!:\\n   \"","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"mukhtarcal"},"content":"                            + deletedTask);","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"mukhtarcal"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! You need to give me a valid task to delete! The form of the command is:\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"mukhtarcal"},"content":"                            \" delete #\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\");","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"mukhtarcal"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! The task number needs to be a valid digit! Follow this format:\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"mukhtarcal"},"content":"                            \" delete #\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\");","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"mukhtarcal"},"content":"                } catch (NullPointerException e) {","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"mukhtarcal"},"content":"                    System.out.println(\" Come on! You need to give me a valid task to delete! The form of the command is:\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"mukhtarcal"},"content":"                            \" delete #\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"mukhtarcal"},"content":"                            \" Where # is a valid task number\\n\" +","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"mukhtarcal"},"content":"                            \" {\" + line + \"}\" + \" is not a valid command!\\n\");","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"mukhtarcal"},"content":"                    printDivider();","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"mukhtarcal"},"content":"                }","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"mukhtarcal"},"content":"                saveTasks(taskList);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"mukhtarcal"},"content":"                break;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"mukhtarcal"},"content":"            default:","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"mukhtarcal"},"content":"                // if the first word is not a known command, print error message","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"mukhtarcal"},"content":"                System.out.println(\" What the heck are you trying to do?!\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"mukhtarcal"},"content":"                        \" Start your message with todo, deadline, or event.\\n\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"mukhtarcal"},"content":"                        \" {\" + line + \"}\" +","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"mukhtarcal"},"content":"                        \" doesn\u0027t start with a valid command!\");","lastModifiedDate":"2025-09-10T17:03:54","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"mukhtarcal"},"content":"                printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"mukhtarcal"},"content":"                break;","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"mukhtarcal"},"content":"            }","lastModifiedDate":"2025-09-02T15:10:51","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"mukhtarcal"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"mukhtarcal"},"content":"        }","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-02T14:38:10","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"mukhtarcal"},"content":"        // once recieved \"bye\", output farewell message","lastModifiedDate":"2025-09-02T16:20:53","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"mukhtarcal"},"content":"        printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"mukhtarcal"},"content":"        System.out.println(\" Thank god! I was wondering when you\u0027d finish! Farewell from the one and only:\\n\");","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"mukhtarcal"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"mukhtarcal"},"content":"        printDivider();","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"mukhtarcal"},"content":"        saveTasks(taskList);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"mukhtarcal"},"content":"    // make sure the data folder exists, if it does not, create it","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"mukhtarcal"},"content":"    private static void ensureDataDirExists() {","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"mukhtarcal"},"content":"        File dir \u003d new File(DATA_DIR);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"mukhtarcal"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"mukhtarcal"},"content":"            dir.mkdirs();","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"mukhtarcal"},"content":"        }","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"mukhtarcal"},"content":"    // load in data from ./data/dennis.txt into taskList if data exists","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"mukhtarcal"},"content":"    private static void loadInData(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"mukhtarcal"},"content":"        File filePath \u003d new File(DATA_FILE);","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"mukhtarcal"},"content":"        // if there\u0027s nothing to load yet","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"mukhtarcal"},"content":"        if (!filePath.exists()) {","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"mukhtarcal"},"content":"            return;","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"mukhtarcal"},"content":"        }","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"mukhtarcal"},"content":"        try (Scanner s \u003d new Scanner(filePath)) {","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"mukhtarcal"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"mukhtarcal"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"mukhtarcal"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"mukhtarcal"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"mukhtarcal"},"content":"                boolean isDone \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"mukhtarcal"},"content":"                String description \u003d parts[2].trim();","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"mukhtarcal"},"content":"                Task task \u003d null;","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"mukhtarcal"},"content":"                switch (type) {","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"mukhtarcal"},"content":"                case \"T\":","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"mukhtarcal"},"content":"                    task \u003d new Todo(description);","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"mukhtarcal"},"content":"                case \"D\":","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"mukhtarcal"},"content":"                    String by \u003d parts[3].trim();","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"mukhtarcal"},"content":"                    task \u003d new Deadline(description, by);","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"mukhtarcal"},"content":"                case \"E\":","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"mukhtarcal"},"content":"                    String start \u003d parts[3].trim();","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"mukhtarcal"},"content":"                    String end \u003d parts[4].trim();","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"mukhtarcal"},"content":"                    task \u003d new Event(description, start, end);","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"mukhtarcal"},"content":"                    break;","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"mukhtarcal"},"content":"                }","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"mukhtarcal"},"content":"                if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"mukhtarcal"},"content":"                    task.markAsDone();","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"mukhtarcal"},"content":"                }","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"mukhtarcal"},"content":"                taskList.add(task);","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"mukhtarcal"},"content":"            }","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"mukhtarcal"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"mukhtarcal"},"content":"            System.out.println(\"Error loading tasks: \" + e.getMessage());","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"mukhtarcal"},"content":"        }","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-10-01T12:50:04","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"mukhtarcal"},"content":"    // create dennis.txt file in data folder with all the tasks","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"mukhtarcal"},"content":"    private static void saveTasks(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-09-12T19:43:57","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"mukhtarcal"},"content":"        File filePath \u003d new File(DATA_FILE);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"mukhtarcal"},"content":"        try {","lastModifiedDate":"2025-09-12T19:43:57","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"mukhtarcal"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"mukhtarcal"},"content":"            fw.write(createStringTaskList(list));","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"mukhtarcal"},"content":"            fw.close();","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"mukhtarcal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-12T19:43:57","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"mukhtarcal"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-09-12T19:43:57","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"mukhtarcal"},"content":"        }","lastModifiedDate":"2025-09-12T19:43:57","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"mukhtarcal"},"content":"    // cosmetic method for printing divider between outputs","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"mukhtarcal"},"content":"    private static void printDivider() {","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"mukhtarcal"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"mukhtarcal"},"content":"    // method to print clean String list from Array list","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"mukhtarcal"},"content":"    private static void printTaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"mukhtarcal"},"content":"        String stringList \u003d \"\";","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"mukhtarcal"},"content":"        // for each element in the list, create a numbered list","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"mukhtarcal"},"content":"        for (int index \u003d 0; (index \u003c list.size()) \u0026\u0026 (list.get(index) !\u003d null); index++) {","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"mukhtarcal"},"content":"            stringList +\u003d \" \" + Integer.toString(index + 1) + \". \" + list.get(index).toString() + \"\\n\";","lastModifiedDate":"2025-09-12T17:53:02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"mukhtarcal"},"content":"        }","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-04T22:08:18","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"mukhtarcal"},"content":"        System.out.println(stringList);","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-08-25T15:56:01","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"mukhtarcal"},"content":"    // method to return clean String list from Array list","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"mukhtarcal"},"content":"    private static String createStringTaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2025-09-12T19:43:57","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"mukhtarcal"},"content":"        String stringList \u003d \"\";","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"mukhtarcal"},"content":"        for (int index \u003d 0; index \u003c list.size(); index++) {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"mukhtarcal"},"content":"            Task task \u003d list.get(index);","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"mukhtarcal"},"content":"            String taskLine \u003d \"\";","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"mukhtarcal"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"mukhtarcal"},"content":"                taskLine \u003d \"T | \" + (task.isDone() ? \"1\" : \"0\") + \" | \" + task.getDescription();","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"mukhtarcal"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"mukhtarcal"},"content":"                Deadline d \u003d (Deadline) task;","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"mukhtarcal"},"content":"                taskLine \u003d \"D | \" + (d.isDone() ? \"1\" : \"0\") + \" | \" + d.getDescription() + \" | \" + d.getBy();","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"mukhtarcal"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"mukhtarcal"},"content":"                Event e \u003d (Event) task;","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"mukhtarcal"},"content":"                taskLine \u003d \"E | \" + (e.isDone() ? \"1\" : \"0\") + \" | \" + e.getDescription() + \" | \" + e.getFrom() + \" | \" + e.getTo();","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"mukhtarcal"},"content":"            }","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"mukhtarcal"},"content":"            stringList +\u003d taskLine + \"\\n\";","lastModifiedDate":"2025-09-12T20:05:53","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"mukhtarcal"},"content":"        }","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"mukhtarcal"},"content":"","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"mukhtarcal"},"content":"        return stringList;","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"mukhtarcal"},"content":"    }","lastModifiedDate":"2025-09-12T19:26:03","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"mukhtarcal"},"content":"}","lastModifiedDate":"2025-08-25T15:56:01","isFullCredit":false}],"authorContributionMap":{"mukhtarcal":386}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mukhtarcal"},"content":"todo read book","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"mukhtarcal"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"mukhtarcal"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"mukhtarcal"},"content":"list","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"mukhtarcal"},"content":"mark 1","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"mukhtarcal"},"content":"list","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"mukhtarcal"},"content":"mark 3","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"mukhtarcal"},"content":"list","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"mukhtarcal"},"content":"bye","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false}],"authorContributionMap":{"mukhtarcal":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"mukhtarcal"},"content":"java -classpath ..\\bin Dennis.ui.Dennis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":20,"mukhtarcal":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"mukhtarcal"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Dennis/ui/*.java","lastModifiedDate":"2025-09-10T17:17:56","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"mukhtarcal"},"content":"java -classpath ../bin Dennis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-05T18:47:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"-":36,"mukhtarcal":2}}]
