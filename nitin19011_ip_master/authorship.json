[{"path":"data/socks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"T | 0 | read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"E | 0 | team sync (from: Mon 2pm to: Mon 3pm) | Mon 2pm","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false}],"authorContributionMap":{"nitin19011":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"# Socks — User Guide","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"Socks is a simple, keyboard‑only command‑line task manager. You can add todos, deadlines, events, list them, mark/unmark as done, delete, and find tasks by keyword. Data is saved automatically to `data/socks.txt`.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":"- Platform: Windows, macOS, Linux","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":"- Java: 17+","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":"---","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"## Quick Start","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"1. Install Java 17 or later.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"2. Run the app:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"    - If you have a JAR (e.g., `socks.jar`):","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"      ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"      java -jar socks.jar","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"      ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"    - Run from classes (from the project root after building/compiling):","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"      ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"      java -cp out socks.Socks","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"      ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"3. You should see a welcome banner. Type commands and press Enter.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"Data file is created at `data/socks.txt` in the working directory.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"---","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nitin19011"},"content":"## Commands","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nitin19011"},"content":"- list  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nitin19011"},"content":"  Show all tasks with 1‑based indices.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nitin19011"},"content":"  list","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nitin19011"},"content":"- todo  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nitin19011"},"content":"  Add a todo.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nitin19011"},"content":"  todo DESCRIPTION","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nitin19011"},"content":"  Example:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nitin19011"},"content":"  todo read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nitin19011"},"content":"- deadline  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nitin19011"},"content":"  Add a deadline with a due time.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nitin19011"},"content":"  deadline DESCRIPTION /by WHEN","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nitin19011"},"content":"  Example:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nitin19011"},"content":"  deadline return book /by June 6th","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nitin19011"},"content":"- event  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nitin19011"},"content":"  Add an event with start and end times.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nitin19011"},"content":"  event DESCRIPTION /from START /to END","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nitin19011"},"content":"  Example:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nitin19011"},"content":"  event team sync /from Mon 2pm /to Mon 3pm","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nitin19011"},"content":"- mark  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nitin19011"},"content":"  Mark a task (1‑based index) as done.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nitin19011"},"content":"  mark INDEX","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nitin19011"},"content":"  Example:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nitin19011"},"content":"  mark 1","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nitin19011"},"content":"- unmark  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nitin19011"},"content":"  Mark a task as not done.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nitin19011"},"content":"  unmark INDEX","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nitin19011"},"content":"- delete  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nitin19011"},"content":"  Delete a task.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nitin19011"},"content":"  delete INDEX","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nitin19011"},"content":"- find  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nitin19011"},"content":"  Show tasks containing the keyword (case‑insensitive).","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nitin19011"},"content":"  find KEYWORD","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nitin19011"},"content":"  Example:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nitin19011"},"content":"  find book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nitin19011"},"content":"- bye  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nitin19011"},"content":"  Exit the application.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nitin19011"},"content":"  bye","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nitin19011"},"content":"  ```","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nitin19011"},"content":"Notes:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nitin19011"},"content":"- INDEX is 1‑based (the number shown by `list`).","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nitin19011"},"content":"- `find` matches within the task’s display text (e.g., it will match inside “(by: …)” and “(from: … to: …)” too).","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nitin19011"},"content":"---","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nitin19011"},"content":"## Sample Session","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nitin19011"},"content":"Hello from","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nitin19011"},"content":"  ____             _      ____","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nitin19011"},"content":" / ___|  ___   ___| | __ / ___|","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nitin19011"},"content":" \\___ \\ / _ \\ / __| |/ / \\___ \\","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nitin19011"},"content":"  ___) | (_) | (__|   \u003c   ___) |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nitin19011"},"content":" |____/ \\___/ \\___|_|\\_\\ |____/","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nitin19011"},"content":"Your trusty life tracker! What can I do for you?","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nitin19011"},"content":"todo read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nitin19011"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nitin19011"},"content":"  [T][ ] read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nitin19011"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nitin19011"},"content":"deadline return book /by June 6th","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nitin19011"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nitin19011"},"content":"  [D][ ] return book (by: June 6th)","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nitin19011"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nitin19011"},"content":"event team sync /from Mon 2pm /to Mon 3pm","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nitin19011"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nitin19011"},"content":"  [E][ ] team sync (from: Mon 2pm to: Mon 3pm)","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nitin19011"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nitin19011"},"content":"list","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nitin19011"},"content":"1. [T][ ] read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nitin19011"},"content":"2. [D][ ] return book (by: June 6th)","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nitin19011"},"content":"3. [E][ ] team sync (from: Mon 2pm to: Mon 3pm)","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nitin19011"},"content":"mark 1","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nitin19011"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nitin19011"},"content":"  [T][X] read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nitin19011"},"content":"  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nitin19011"},"content":"unmark 1","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nitin19011"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nitin19011"},"content":"  [T][ ] read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nitin19011"},"content":"  ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nitin19011"},"content":"delete 2","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nitin19011"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nitin19011"},"content":"  [D][ ] return book (by: June 6th)","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nitin19011"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nitin19011"},"content":"list","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nitin19011"},"content":"1. [T][ ] read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nitin19011"},"content":"2. [E][ ] team sync (from: Mon 2pm to: Mon 3pm)","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nitin19011"},"content":"find book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nitin19011"},"content":" Here are the matching tasks in your list:","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"nitin19011"},"content":" 1.[T][ ] read book","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"nitin19011"},"content":" ","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"nitin19011"},"content":"bye","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"nitin19011"},"content":"ByeBye! Stay productive and hope to see you again soon!","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"nitin19011"},"content":"---","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"nitin19011"},"content":"## Command Summary","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"nitin19011"},"content":"| Command   | Format                                   | Example                                       |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"nitin19011"},"content":"|----------|-------------------------------------------|-----------------------------------------------|","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"nitin19011"},"content":"| list     | `list`                                    | `list`                                        |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"nitin19011"},"content":"| todo     | `todo DESCRIPTION`                        | `todo read book`                              |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"nitin19011"},"content":"| deadline | `deadline DESCRIPTION /by WHEN`           | `deadline return book /by June 6th`           |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"nitin19011"},"content":"| event    | `event DESCRIPTION /from START /to END`   | `event team sync /from Mon 2pm /to Mon 3pm`   |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"nitin19011"},"content":"| mark     | `mark INDEX`                              | `mark 1`                                      |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"nitin19011"},"content":"| unmark   | `unmark INDEX`                            | `unmark 1`                                    |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"nitin19011"},"content":"| delete   | `delete INDEX`                            | `delete 2`                                    |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"nitin19011"},"content":"| find     | `find KEYWORD`                            | `find book`                                   |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"nitin19011"},"content":"| bye      | `bye`                                     | `bye`                                         |","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"nitin19011"},"content":"---","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"nitin19011"},"content":"## Storage","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"nitin19011"},"content":"- File path: `data/socks.txt`","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"nitin19011"},"content":"- The app creates the folder and file if missing.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"nitin19011"},"content":"- Tasks are saved automatically after add, delete, mark, and unmark.","lastModifiedDate":"2025-10-02T18:58:52","isFullCredit":false}],"authorContributionMap":{"nitin19011":169,"-":19}},{"path":"src/main/java/Socks/Socks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package Socks;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"import task.Task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":"import task.TaskList;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":"import task.Storage;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":"import task.SocksException;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":"import ui.Ui;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"import parser.Parser;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-28T11:07:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-08-26T19:04:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":" * The Socks class is the main application class for the task management system.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":" * It handles the initialization of the UI, storage, task list, and parser,","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":" * and contains the main run loop that reads user input and executes commands.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"public class Socks {","lastModifiedDate":"2025-08-28T11:07:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"    private final Ui ui;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"    private final Storage storage;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"    private final TaskList tasks;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"    private final Parser parser;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-08-26T19:04:23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nitin19011"},"content":"     * Entry point of the application.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nitin19011"},"content":"     * Creates the app with the default data file path and starts the run loop.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nitin19011"},"content":"     * @param args optional first argument overrides the default data file path","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nitin19011"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nitin19011"},"content":"        Socks socks \u003d new Socks(\"data/socks.txt\");","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nitin19011"},"content":"        socks.run();","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nitin19011"},"content":"     * Constructs a Socks application instance.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nitin19011"},"content":"     * Initializes the UI, storage, parser, and loads tasks from disk.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nitin19011"},"content":"     * If loading fails, starts with an empty task list.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nitin19011"},"content":"     * @param filePath the path to the data file where tasks are saved/loaded","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nitin19011"},"content":"    public Socks(String filePath) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nitin19011"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nitin19011"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nitin19011"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nitin19011"},"content":"        TaskList loaded;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nitin19011"},"content":"        try {","lastModifiedDate":"2025-09-17T00:29:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nitin19011"},"content":"            ArrayList\u003cTask\u003e fromDisk \u003d storage.load();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nitin19011"},"content":"            loaded \u003d new TaskList(fromDisk);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nitin19011"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nitin19011"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nitin19011"},"content":"            loaded \u003d new TaskList();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-09-17T00:29:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nitin19011"},"content":"        this.tasks \u003d loaded;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-17T00:29:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-17T00:29:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nitin19011"},"content":"     * Starts the main application loop.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nitin19011"},"content":"     * Displays the welcome message, continuously reads user input,","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nitin19011"},"content":"     * and passes it to the parser for handling.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nitin19011"},"content":"     * The loop terminates when the user issues the \"bye\" command or input ends.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nitin19011"},"content":"    public void run() {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nitin19011"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nitin19011"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nitin19011"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nitin19011"},"content":"        while (!exit \u0026\u0026 sc.hasNextLine()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nitin19011"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nitin19011"},"content":"            try {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nitin19011"},"content":"                exit \u003d parser.handle(input, tasks, ui, storage);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nitin19011"},"content":"            } catch (SocksException e) {","lastModifiedDate":"2025-09-17T00:29:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nitin19011"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nitin19011"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-17T00:29:59","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nitin19011"},"content":"                ui.showError(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-08-29T00:11:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-08-28T15:58:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nitin19011"},"content":"        sc.close();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-08-26T19:04:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-09-17T00:29:59","isFullCredit":false}],"authorContributionMap":{"nitin19011":83}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package parser;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"import task.Task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":"import task.TaskList;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":"import task.Storage;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":"import task.SocksException;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":"import ui.Ui;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":" * The Parser class is responsible for interpreting user input commands","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":" * and executing the corresponding actions on the task list. ","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":" * It interacts with the TaskList, Ui, and Storage classes.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"public class Parser {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"     * Handles a user input command by parsing it and performing the appropriate action.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"     * @param input   the raw input string from the user","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"     * @param tasks   the TaskList object that stores tasks","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"     * @param ui      the Ui object for displaying messages to the user","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"     * @param storage the Storage object for saving task data","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"     * @return true if the command indicates the program should exit (e.g., \"bye\"), false otherwise","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the input command is invalid or has missing/incorrect arguments","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nitin19011"},"content":"    public boolean handle(String input, TaskList tasks, Ui ui, Storage storage) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nitin19011"},"content":"        String trimmed \u003d input.trim();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nitin19011"},"content":"        if (trimmed.isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nitin19011"},"content":"        String[] parts \u003d trimmed.split(\"\\\\s+\", 2);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nitin19011"},"content":"        String cmd \u003d parts[0].toLowerCase();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nitin19011"},"content":"        String args \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nitin19011"},"content":"        switch (cmd) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nitin19011"},"content":"        case \"bye\":","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nitin19011"},"content":"            ui.showGoodbye();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nitin19011"},"content":"            return true;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nitin19011"},"content":"        case \"list\":","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nitin19011"},"content":"            ui.showList(tasks.getAll());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nitin19011"},"content":"        case \"mark\": {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nitin19011"},"content":"            int idx \u003d parseIndex(args);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nitin19011"},"content":"            ui.showMarked(tasks.mark(idx));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nitin19011"},"content":"            storage.save(new java.util.ArrayList\u003c\u003e(tasks.getAll()));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nitin19011"},"content":"        case \"unmark\": {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nitin19011"},"content":"            int idx \u003d parseIndex(args);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nitin19011"},"content":"            ui.showUnmarked(tasks.unmark(idx));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nitin19011"},"content":"            storage.save(new java.util.ArrayList\u003c\u003e(tasks.getAll()));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nitin19011"},"content":"        case \"delete\": {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nitin19011"},"content":"            int idx \u003d parseIndex(args);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nitin19011"},"content":"            Task deleted \u003d tasks.delete(idx);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nitin19011"},"content":"            ui.showDeleted(deleted, tasks.size());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nitin19011"},"content":"            storage.save(new java.util.ArrayList\u003c\u003e(tasks.getAll()));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nitin19011"},"content":"        case \"todo\": {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nitin19011"},"content":"            Task t \u003d tasks.addTodo(args);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nitin19011"},"content":"            ui.showAdded(t, tasks.size());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nitin19011"},"content":"            storage.save(new java.util.ArrayList\u003c\u003e(tasks.getAll()));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nitin19011"},"content":"        case \"deadline\": {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nitin19011"},"content":"            String[] segs \u003d splitOnce(args, \" /by \");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nitin19011"},"content":"            Task t \u003d tasks.addDeadline(segs[0], segs[1]);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nitin19011"},"content":"            ui.showAdded(t, tasks.size());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nitin19011"},"content":"            storage.save(new java.util.ArrayList\u003c\u003e(tasks.getAll()));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nitin19011"},"content":"        case \"event\": {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nitin19011"},"content":"            String[] segsFrom \u003d splitOnce(args, \" /from \");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nitin19011"},"content":"            String desc \u003d segsFrom[0];","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nitin19011"},"content":"            String[] segsTo \u003d splitOnce(segsFrom[1], \" /to \");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nitin19011"},"content":"            Task t \u003d tasks.addEvent(desc, segsTo[0], segsTo[1]);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nitin19011"},"content":"            ui.showAdded(t, tasks.size());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nitin19011"},"content":"            storage.save(new java.util.ArrayList\u003c\u003e(tasks.getAll()));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nitin19011"},"content":"        case \"find\": {","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nitin19011"},"content":"            if (args \u003d\u003d null || args.trim().isEmpty()) {","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nitin19011"},"content":"                throw new SocksException(\"Please provide a keyword to find.\");","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nitin19011"},"content":"            String needle \u003d args.toLowerCase();","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nitin19011"},"content":"            int count \u003d 0;","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nitin19011"},"content":"            System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nitin19011"},"content":"            java.util.List\u003cTask\u003e list \u003d tasks.getAll();","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nitin19011"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nitin19011"},"content":"                Task t \u003d list.get(i);","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nitin19011"},"content":"                if (t.toString().toLowerCase().contains(needle)) {","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nitin19011"},"content":"                    System.out.println(\" \" + (++count) + \".\" + t);","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nitin19011"},"content":"                }","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nitin19011"},"content":"            if (count \u003d\u003d 0) {","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nitin19011"},"content":"                System.out.println(\" No matching tasks found.\");","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nitin19011"},"content":"            return false;","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nitin19011"},"content":"        default:","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"I\u0027m sorry, but I don\u0027t know what that means :\u003c\");","lastModifiedDate":"2025-10-01T23:01:54","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nitin19011"},"content":"     * Parses a string as an integer index and validates that it is positive.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nitin19011"},"content":"     * @param s the string to parse","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nitin19011"},"content":"     * @return the parsed positive integer","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the string is empty, null, or not a positive integer","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nitin19011"},"content":"    private int parseIndex(String s) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nitin19011"},"content":"        if (s \u003d\u003d null || s.trim().isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"Please provide an index.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nitin19011"},"content":"        try {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nitin19011"},"content":"            int idx \u003d Integer.parseInt(s.trim());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nitin19011"},"content":"            if (idx \u003c\u003d 0) throw new NumberFormatException();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nitin19011"},"content":"            return idx;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nitin19011"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"Index must be a positive number.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nitin19011"},"content":"     * Splits a string into two parts using the first occurrence of a delimiter.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nitin19011"},"content":"     * @param text      the string to split","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nitin19011"},"content":"     * @param delimiter the delimiter to split on","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nitin19011"},"content":"     * @return an array of two strings: the part before the delimiter and the part after","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the delimiter is missing or either part is empty","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nitin19011"},"content":"    private String[] splitOnce(String text, String delimiter) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nitin19011"},"content":"        int pos \u003d text.indexOf(delimiter);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nitin19011"},"content":"        if (pos \u003c 0) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"Missing \u0027\" + delimiter.trim() + \"\u0027 part.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nitin19011"},"content":"        String left \u003d text.substring(0, pos).trim();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nitin19011"},"content":"        String right \u003d text.substring(pos + delimiter.length()).trim();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nitin19011"},"content":"        if (left.isEmpty() || right.isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"Incomplete command: \" + delimiter.trim());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nitin19011"},"content":"        return new String[] { left, right };","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false}],"authorContributionMap":{"nitin19011":159}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":" * Extends the Task class and adds a specific deadline attribute.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":"    private final String deadline;","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"     * Constructs a Deadline object with a description and a deadline.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"     * @param deadline    the deadline of the task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"        super(description + \" (by: \" + deadline + \")\");","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"     * Returns the deadline of this task.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"     * @return the deadline as a String","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"    public String getDeadline() {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nitin19011"},"content":"        return this.deadline;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nitin19011"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nitin19011"},"content":"     * @return a formatted string including task type, status, and description","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nitin19011"},"content":"    @Override","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nitin19011"},"content":"    public String toString() {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nitin19011"},"content":"        return (\"[D]\" + \"[\" + this.taskStatus + \"] \" + description);","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false}],"authorContributionMap":{"nitin19011":39}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":" * Represents an event task that has a start time and an end time.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":" * Extends the Task class and adds specific start and end time attributes.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":"    String startTime;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":"    private String endTime;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"     * Constructs an Event object with a description, start time, and end time.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"     * @param startTime   the start time of the event","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"     * @param endTime     the end time of the event","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"        super(description + \" (from: \" + startTime + \" to: \" + endTime + \")\");","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nitin19011"},"content":"     * Returns the string representation of the event task. ","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nitin19011"},"content":"     * @return a formatted string including task type, status, and description","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nitin19011"},"content":"    @Override","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nitin19011"},"content":"    public String toString() {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nitin19011"},"content":"        return \"[E]\" + \"[\" + this.taskStatus + \"] \" + description;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false}],"authorContributionMap":{"nitin19011":33}},{"path":"src/main/java/task/SocksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":" * Represents custom exceptions thrown by the Socks application.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":" * Used to indicate errors in user input or command handling.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":"public class SocksException extends Exception {","lastModifiedDate":"2025-09-17T00:17:37","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"     * Constructs a SocksException with the specified error message.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"     * @param message the detail message explaining the reason for the exception","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"    public SocksException(String message) {","lastModifiedDate":"2025-09-17T00:17:37","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"        super(message); // call Exception class\u0027s constructor","lastModifiedDate":"2025-09-17T13:49:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-17T00:17:37","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-09-17T00:17:37","isFullCredit":false}],"authorContributionMap":{"nitin19011":17}},{"path":"src/main/java/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"import java.io.*;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":" * The Storage class handles reading and writing tasks to a file on disk.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":" * It provides methods to load tasks from a file and save tasks back to the file.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"public class Storage {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"    private final Path dataPath;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"     * @param filePath the path to the file where tasks will be stored","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"        this.dataPath \u003d Paths.get(filePath);","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nitin19011"},"content":"     * If the file or its directories do not exist, they will be created.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"     * Corrupted lines are skipped with a warning.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nitin19011"},"content":"     * @return an ArrayList of Task objects loaded from the file","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nitin19011"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nitin19011"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nitin19011"},"content":"        try {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nitin19011"},"content":"            if (!Files.exists(dataPath.getParent())) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nitin19011"},"content":"                Files.createDirectories(dataPath.getParent());","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nitin19011"},"content":"            if (!Files.exists(dataPath)) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nitin19011"},"content":"                Files.createFile(dataPath);","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nitin19011"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(dataPath.toFile()));","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nitin19011"},"content":"            String line;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nitin19011"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nitin19011"},"content":"                try {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nitin19011"},"content":"                    Task task \u003d parseLine(line);","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nitin19011"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nitin19011"},"content":"                        tasks.add(task);","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nitin19011"},"content":"                    }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nitin19011"},"content":"                } catch (Exception e) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nitin19011"},"content":"                    // Corrupted line: skip","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nitin19011"},"content":"                    System.out.println(\"Warning: Skipping invalid line: \" + line);","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nitin19011"},"content":"                }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nitin19011"},"content":"            reader.close();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nitin19011"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nitin19011"},"content":"            System.out.println(\"Error loading data: \" + e.getMessage());","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nitin19011"},"content":"        return tasks;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nitin19011"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nitin19011"},"content":"     * If the parent directories do not exist, they will be created.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nitin19011"},"content":"     * @param tasks the ArrayList of tasks to save","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nitin19011"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nitin19011"},"content":"        try {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nitin19011"},"content":"            if (!Files.exists(dataPath.getParent())) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nitin19011"},"content":"                Files.createDirectories(dataPath.getParent());","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nitin19011"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataPath.toFile()));","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nitin19011"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nitin19011"},"content":"                writer.write(formatTask(task));","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nitin19011"},"content":"                writer.newLine();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nitin19011"},"content":"            }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nitin19011"},"content":"            writer.close();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nitin19011"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nitin19011"},"content":"            System.out.println(\"Error saving data: \" + e.getMessage());","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nitin19011"},"content":"     * Parses a single line from the storage file into a Task object.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nitin19011"},"content":"     * This method is private because it is only used internally by load().","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nitin19011"},"content":"     * @param line a line from the storage file","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nitin19011"},"content":"     * @return the Task object represented by the line","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nitin19011"},"content":"     * @throws Exception if the line is invalid or the task type is unknown","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nitin19011"},"content":"    private Task parseLine(String line) throws Exception {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nitin19011"},"content":"        String[] fields \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nitin19011"},"content":"        String type \u003d fields[0].trim();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nitin19011"},"content":"        boolean isDone \u003d fields[1].trim().equals(\"1\");","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nitin19011"},"content":"        String desc \u003d fields[2].trim();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nitin19011"},"content":"        switch (type) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nitin19011"},"content":"        case \"T\":","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nitin19011"},"content":"            Todo todo \u003d new Todo(desc);","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nitin19011"},"content":"            todo.isDone \u003d isDone;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nitin19011"},"content":"            todo.taskStatus \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nitin19011"},"content":"            return todo;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nitin19011"},"content":"        case \"D\":","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nitin19011"},"content":"            String by \u003d fields[3].trim();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nitin19011"},"content":"            Deadline deadline \u003d new Deadline(desc, by);","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nitin19011"},"content":"            deadline.isDone \u003d isDone;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nitin19011"},"content":"            deadline.taskStatus \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nitin19011"},"content":"            return deadline;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nitin19011"},"content":"        case \"E\":","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nitin19011"},"content":"            String at \u003d fields[3].trim();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nitin19011"},"content":"            Event event \u003d new Event(desc, at, \"\");","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nitin19011"},"content":"            event.isDone \u003d isDone;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nitin19011"},"content":"            event.taskStatus \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nitin19011"},"content":"            return event;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nitin19011"},"content":"        default:","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nitin19011"},"content":"            throw new Exception(\"Unknown task type\");","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nitin19011"},"content":"     * Formats a Task object into a string suitable for storage in a file.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nitin19011"},"content":"     * This method is private because it is only used internally by save().","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nitin19011"},"content":"     * @param task the Task to format","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nitin19011"},"content":"     * @return a string representing the task for storage","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nitin19011"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nitin19011"},"content":"        String type \u003d \"T\";","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nitin19011"},"content":"        String extra \u003d \"\";","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nitin19011"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nitin19011"},"content":"            type \u003d \"D\";","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nitin19011"},"content":"            extra \u003d \" | \" + ((Deadline) task).getDeadline();","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nitin19011"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nitin19011"},"content":"            type \u003d \"E\";","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nitin19011"},"content":"            extra \u003d \" | \" + ((Event) task).startTime;","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nitin19011"},"content":"        return String.format(\"%s | %d | %s%s\", type, task.isDone ? 1 : 0, task.description, extra);","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-09-26T20:47:28","isFullCredit":false}],"authorContributionMap":{"nitin19011":136}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":" * This is the base class for different types of tasks such as Todo, Deadline, and Event.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":"public class Task {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":"    protected String description;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"    protected String taskStatus;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"     * By default, a task is not done and its taskStatus is set to a blank space.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"        taskStatus \u003d \" \";","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false}],"authorContributionMap":{"nitin19011":24}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":"import java.util.List;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":" * Represents a list of tasks and provides operations to manage them.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":" * Supports adding, deleting, marking, and unmarking tasks.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"public class TaskList {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"    public TaskList() {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"     * Constructs a TaskList with an existing list of tasks.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"     * @param existing an ArrayList of tasks to initialize the TaskList; if null, an empty list is created","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nitin19011"},"content":"    public TaskList(ArrayList\u003cTask\u003e existing) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"        this.tasks \u003d (existing \u003d\u003d null) ? new ArrayList\u003c\u003e() : existing;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nitin19011"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nitin19011"},"content":"     * @return the size of the task list","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nitin19011"},"content":"    public int size() {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nitin19011"},"content":"        return tasks.size();","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nitin19011"},"content":"     * Returns all tasks in the list.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nitin19011"},"content":"     * @return a List of all Task objects","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nitin19011"},"content":"    public List\u003cTask\u003e getAll() {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nitin19011"},"content":"        return tasks;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nitin19011"},"content":"     * Retrieves a task by its 1-based index.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nitin19011"},"content":"     * @param oneBasedIndex the 1-based index of the task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nitin19011"},"content":"     * @return the Task at the specified index","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the index is out of range","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nitin19011"},"content":"    public Task get(int oneBasedIndex) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nitin19011"},"content":"        int idx \u003d oneBasedIndex - 1;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nitin19011"},"content":"        if (oneBasedIndex \u003c\u003d 0 || idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"Index out of range: \" + oneBasedIndex);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nitin19011"},"content":"        return tasks.get(idx);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nitin19011"},"content":"     * Adds a Todo task to the list.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nitin19011"},"content":"     * @param description the description of the todo","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nitin19011"},"content":"     * @return the added Todo task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the description is null or empty","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nitin19011"},"content":"    public Task addTodo(String description) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nitin19011"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nitin19011"},"content":"        Task t \u003d new Todo(description.trim());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nitin19011"},"content":"        tasks.add(t);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nitin19011"},"content":"        return t;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nitin19011"},"content":"     * Adds a Deadline task to the list.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nitin19011"},"content":"     * @param description the description of the deadline","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nitin19011"},"content":"     * @param by          the deadline time","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nitin19011"},"content":"     * @return the added Deadline task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the description or deadline is null or empty","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nitin19011"},"content":"    public Task addDeadline(String description, String by) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nitin19011"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nitin19011"},"content":"        if (by \u003d\u003d null || by.trim().isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"Deadline requires a /by time.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nitin19011"},"content":"        Task t \u003d new Deadline(description.trim(), by.trim());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nitin19011"},"content":"        tasks.add(t);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nitin19011"},"content":"        return t;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nitin19011"},"content":"     * Adds an Event task to the list.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nitin19011"},"content":"     * @param description the description of the event","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nitin19011"},"content":"     * @param from        the start time of the event","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nitin19011"},"content":"     * @param to          the end time of the event","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nitin19011"},"content":"     * @return the added Event task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if description, from, or to is null or empty","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nitin19011"},"content":"    public Task addEvent(String description, String from, String to) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nitin19011"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"nitin19011"},"content":"        if (from \u003d\u003d null || from.trim().isEmpty() || to \u003d\u003d null || to.trim().isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"nitin19011"},"content":"            throw new SocksException(\"Event requires both /from and /to.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"nitin19011"},"content":"        Task t \u003d new Event(description.trim(), from.trim(), to.trim());","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"nitin19011"},"content":"        tasks.add(t);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"nitin19011"},"content":"        return t;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"nitin19011"},"content":"     * Deletes a task by its 1-based index.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"nitin19011"},"content":"     * @param oneBasedIndex the 1-based index of the task to delete","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"nitin19011"},"content":"     * @return the deleted Task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the index is out of range","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"nitin19011"},"content":"    public Task delete(int oneBasedIndex) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"nitin19011"},"content":"        Task t \u003d get(oneBasedIndex);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"nitin19011"},"content":"        tasks.remove(oneBasedIndex - 1);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"nitin19011"},"content":"        return t;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"nitin19011"},"content":"     * Marks a task as done by its 1-based index.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"nitin19011"},"content":"     * @param oneBasedIndex the 1-based index of the task to mark","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"nitin19011"},"content":"     * @return the marked Task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the index is out of range","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"nitin19011"},"content":"    public Task mark(int oneBasedIndex) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"nitin19011"},"content":"        Task t \u003d get(oneBasedIndex);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"nitin19011"},"content":"        t.isDone \u003d true;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"nitin19011"},"content":"        t.taskStatus \u003d \"X\";","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"nitin19011"},"content":"        return t;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"nitin19011"},"content":"     * Unmarks a task (marks it as not done) by its 1-based index.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"nitin19011"},"content":"     * @param oneBasedIndex the 1-based index of the task to unmark","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"nitin19011"},"content":"     * @return the unmarked Task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"nitin19011"},"content":"     * @throws SocksException if the index is out of range","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"nitin19011"},"content":"    public Task unmark(int oneBasedIndex) throws SocksException {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"nitin19011"},"content":"        Task t \u003d get(oneBasedIndex);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"nitin19011"},"content":"        t.isDone \u003d false;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"nitin19011"},"content":"        t.taskStatus \u003d \" \";","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"nitin19011"},"content":"        return t;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false}],"authorContributionMap":{"nitin19011":159}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":" * Represents a Todo task, which is a basic task without a specific time or deadline.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":" * Extends the Task class.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"        super(description);","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"     * @return a formatted string including the task type, status, and description","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"    @Override","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"    public String toString() {","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nitin19011"},"content":"        return (\"[T]\" + \"[\" + this.taskStatus + \"] \" + description);","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-09-09T13:56:48","isFullCredit":false}],"authorContributionMap":{"nitin19011":27}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nitin19011"},"content":"package ui;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"nitin19011"},"content":"import task.Task;","lastModifiedDate":"2025-10-02T18:05:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"nitin19011"},"content":"import java.util.List;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"nitin19011"},"content":"/**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"nitin19011"},"content":" * Handles all user interactions for the Socks application.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"nitin19011"},"content":" * Responsible for displaying messages, task lists, errors, and confirmations.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"nitin19011"},"content":" */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"nitin19011"},"content":"public class Ui {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"nitin19011"},"content":"     * Displays a welcome message with the app logo.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"nitin19011"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"nitin19011"},"content":"        String logo \u003d","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"nitin19011"},"content":"                \"\"\"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"nitin19011"},"content":"                          ____             _      ____  ","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"nitin19011"},"content":"                         / ___|  ___   ___| | __ / ___| ","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"nitin19011"},"content":"                         \\\\___ \\\\ / _ \\\\ / __| |/ / \\\\___ \\\\ ","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"nitin19011"},"content":"                          ___) | (_) | (__|   \u003c   ___) |","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"nitin19011"},"content":"                         |____/ \\\\___/ \\\\___|_|\\\\_\\\\ |____/ ","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"nitin19011"},"content":"                        \"\"\";","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"Your trusty life tracker! What can I do for you?\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"nitin19011"},"content":"     * Displays a goodbye message when the user exits the application.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"nitin19011"},"content":"    public void showGoodbye() {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"ByeBye! Stay productive and hope to see you again soon!\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"nitin19011"},"content":"     * Displays a message indicating that previous tasks could not be loaded.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"nitin19011"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"Error: Could not load previous tasks. Starting with an empty list.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"nitin19011"},"content":"     * Displays a generic error message.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"nitin19011"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"nitin19011"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"Error: \" + message);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"nitin19011"},"content":"     * Displays a message confirming that a task has been added.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"nitin19011"},"content":"     * @param task the task that was added","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"nitin19011"},"content":"     * @param size the total number of tasks after addition","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"nitin19011"},"content":"    public void showAdded(Task task, int size) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"nitin19011"},"content":"     * Displays a message confirming that a task has been deleted.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"nitin19011"},"content":"     * @param task the task that was deleted","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"nitin19011"},"content":"     * @param size the total number of tasks after deletion","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"nitin19011"},"content":"    public void showDeleted(Task task, int size) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"nitin19011"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"nitin19011"},"content":"     * @param task the task that was marked","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"nitin19011"},"content":"    public void showMarked(Task task) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"nitin19011"},"content":"     * Displays a message confirming that a task has been unmarked (not done).","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"nitin19011"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"nitin19011"},"content":"    public void showUnmarked(Task task) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"nitin19011"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"nitin19011"},"content":"","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"nitin19011"},"content":"    /**","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"nitin19011"},"content":"     * Displays the list of tasks with their index numbers.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"nitin19011"},"content":"     * Shows a special message if the list is empty.","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"nitin19011"},"content":"     *","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"nitin19011"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"nitin19011"},"content":"     */","lastModifiedDate":"2025-10-01T23:48:43","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"nitin19011"},"content":"    public void showList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"nitin19011"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"nitin19011"},"content":"            System.out.println(\"Your list is empty.\");","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"nitin19011"},"content":"            return;","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"nitin19011"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"nitin19011"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"nitin19011"},"content":"        }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"nitin19011"},"content":"    }","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"nitin19011"},"content":"}","lastModifiedDate":"2025-10-01T22:38:07","isFullCredit":false}],"authorContributionMap":{"nitin19011":109}}]
