[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"# Odin User Guide","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"![Screenshot](./Odin_Preview.png)","lastModifiedDate":"2025-10-04T17:53:12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"Odin is a simple task management chatbot that helps users organize and","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"track their tasks efficiently. It supports adding, marking, unmarking,","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"deleting, and searching tasks, including todos, deadlines, and events.","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"Task data is stored persistently and automatically saved after each command, so no work is lost.","lastModifiedDate":"2025-10-04T17:19:02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-04T17:19:02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"## Adding todos: `todo`","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"Adds a basic task.","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"Format:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"Example:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"todo homework","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"Expected Output:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"Successfully added:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"[T][ ] homework","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"## Adding deadlines: `deadline`","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"Adds a task with a deadline.","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"Format:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"deadline TASK_DESCRIPTION /by YYYY-MM-DD","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"Example:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"deadline EE2026 Assignment /by 2025-10-06","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"Expected Output:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"Successfully added:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"[D][ ] EE2026 Assignment (by Oct 06 2025)","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"## Adding events: `event`","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"Adds a task with a start time and end time.","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"Format:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"event TASK_DESCRIPTION /from YYYY-MM-DD /to YYYY-MM-DD","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"Example:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"event Orientation /from 2025-08-08 /to 2025-08-10","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"Expected Output:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"Successfully added:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"[E][ ] Orientation (from: Aug 08 2025 to: Aug 10 2025)","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"## Listing tasks: `list`","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"Lists all the tasks currently.","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"Format:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"list","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"Example:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"list","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"Expected Output:","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"These are your tasks.","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"1. [T][ ] homework","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"2. [D][ ] EE2026 Assignment (by Oct 06 2025)","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"3. [E][ ] Orientation (from: Aug 08 2025 to: Aug 10 2025)","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:03:25","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"## Marking a task: `mark`","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"Marks a task as done.","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"Format:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shauntsr"},"content":"mark TASK_NUMBER","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"Example:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"mark 2","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"Expected Output:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"Nice! Another task down!","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"   [D][X] EE2026 Assignment (by Oct 06 2025)","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shauntsr"},"content":"## Unmarking a task: `unmark`","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shauntsr"},"content":"Marks a task as not done.","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shauntsr"},"content":"Format:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shauntsr"},"content":"unmark TASK_NUMBER","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shauntsr"},"content":"Example:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shauntsr"},"content":"unmark 2","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shauntsr"},"content":"Expected Output:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shauntsr"},"content":"Task unmarked. Please tell me it was a misinput.","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shauntsr"},"content":"   [D][ ] EE2026 Assignment (by Oct 06 2025)","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shauntsr"},"content":"## Deleting a task: `delete`","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shauntsr"},"content":"Deletes a task from the tasklist.","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shauntsr"},"content":"Format:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shauntsr"},"content":"delete TASK_NUMBER","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shauntsr"},"content":"Example:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shauntsr"},"content":"delete 3","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shauntsr"},"content":"Expected Output:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shauntsr"},"content":"Deleting task 3...","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shauntsr"},"content":"   [E][ ] Orientation (from: Aug 08 2025 to: Aug 10 2025)","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shauntsr"},"content":"You now have 2 tasks.","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shauntsr"},"content":"## Finding a task: `find`","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shauntsr"},"content":"Finds tasks with the matching keyword. Matching is case-insensitive.","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shauntsr"},"content":"Format:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shauntsr"},"content":"find QUERY","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shauntsr"},"content":"Example:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shauntsr"},"content":"find lab","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shauntsr"},"content":"Expected Output:","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"shauntsr"},"content":"Querying...","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shauntsr"},"content":"1 matching task(s) were found in your list.","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shauntsr"},"content":"1. [D][ ] EE2026 Lab Task (by Oct 06 2025)","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"shauntsr"},"content":"```","lastModifiedDate":"2025-10-04T17:14:49","isFullCredit":false}],"authorContributionMap":{"shauntsr":171,"-":26}},{"path":"src/main/java/odin/Odin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin;","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import odin.exceptions.IllegalFileException;","lastModifiedDate":"2025-09-29T20:50:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import odin.parser.Parser;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import odin.storage.Storage;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import odin.task.TaskList;","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import odin.ui.Ui;","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-08-31T22:25:09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-08-31T22:25:09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"public class Odin {","lastModifiedDate":"2025-08-26T17:55:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-17T22:49:25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"     * Entry point for the chatbot","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"     * @param args - Not needed","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-26T17:55:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"        TaskList taskList;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"            storage.init();","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"            taskList \u003d storage.loadTasks();","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"        } catch (IllegalFileException | IOException e) {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"            Ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"            return;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T18:30:49","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"        // Introduction","lastModifiedDate":"2025-09-01T19:25:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"        Ui.printIntroMessage();","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-08-31T22:25:09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-31T22:25:09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"        while (true) {","lastModifiedDate":"2025-08-31T22:25:09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-08-31T22:25:09","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-08-31T22:25:09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"            if (Parser.handleInput(input, taskList, storage)) return;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-17T22:41:22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T21:59:24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T21:59:24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-01T19:20:33","isFullCredit":false}],"authorContributionMap":{"shauntsr":44}},{"path":"src/main/java/odin/exceptions/IllegalFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.exceptions;","lastModifiedDate":"2025-09-29T20:50:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"public class IllegalFileException extends RuntimeException {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"    public IllegalFileException(String message) {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"        super(message);","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false}],"authorContributionMap":{"shauntsr":7}},{"path":"src/main/java/odin/exceptions/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.exceptions;","lastModifiedDate":"2025-09-29T20:50:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"public class IllegalTaskException extends Exception {","lastModifiedDate":"2025-09-17T23:13:28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"    public IllegalTaskException(String message) {","lastModifiedDate":"2025-09-17T23:13:28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"        super(message);","lastModifiedDate":"2025-09-17T23:13:28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-17T23:13:28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-17T23:13:28","isFullCredit":false}],"authorContributionMap":{"shauntsr":7}},{"path":"src/main/java/odin/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.parser;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import odin.exceptions.IllegalTaskException;","lastModifiedDate":"2025-09-29T20:50:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import odin.storage.Storage;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import odin.task.Deadline;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import odin.task.Event;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import odin.task.TaskList;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import odin.task.Todo;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"import odin.ui.Ui;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":" * The {@code Parse} class handles parsing of user input commands","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"public class Parser {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"     * Handles a single user input by parsing the command keyword","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"     * and executing the corresponding actions.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"     * @param input    The raw input string entered by the user.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"     * @param taskList The current list of tasks.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"     * @param storage  The storage object used to handle persistence of tasks.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"     * @return {@code true} If the command was \"bye\" (to exit the program), {@code false} otherwise.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    public static boolean handleInput(String input, TaskList taskList, Storage storage) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"        String command \u003d splitInput[0];","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"        String commandParams \u003d splitInput.length \u003e 1 ? splitInput[1] : null;","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"        try {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"            switch (command) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"            case \"bye\":","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"                return true;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"            case \"list\":","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"                System.out.println(\"These are your tasks.\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"                Ui.printTasks(taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"                break;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"            case \"mark\":","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"                handleMark(input, taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"                storage.saveTasks(taskList, taskList.getTaskCount());","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"                break;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"            case \"unmark\":","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"                handleUnmark(input, taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"                storage.saveTasks(taskList, taskList.getTaskCount());","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"                break;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"            case \"delete\":","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"                handleDelete(input, taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"                storage.saveTasks(taskList, taskList.getTaskCount());","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"                break;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"            case \"todo\":","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"                addTodo(taskList, commandParams);","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"                storage.saveTasks(taskList, taskList.getTaskCount());","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"                break;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"            case \"deadline\":","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"                addDeadline(taskList, commandParams);","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"                storage.saveTasks(taskList, taskList.getTaskCount());","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"                break;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"            case \"event\":","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"                addEvent(taskList, commandParams);","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"                storage.saveTasks(taskList, taskList.getTaskCount());","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"                break;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"            case \"find\":","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"                findTasks(taskList, commandParams);","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"                break;","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"            default:","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"                System.out.println(\"Easter egg found.\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"            }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        } catch (IllegalTaskException | IOException | NullPointerException e) {","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"            Ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"            Ui.printErrorMessage(\"Index should be an integer.\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"            Ui.printErrorMessage(\"Index is not valid.\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"            Ui.printErrorMessage(\"Time should be of format yyyy-MM-dd\");","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"        return false;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"     * Adds a new Todo to the task list.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"     * @param taskList    The tasklist to add the new task to.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"     * @param taskDetails The description of the Deadline task.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"     * @throws NullPointerException If taskDetails is {@code null}","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"    private static void addTodo(TaskList taskList, String taskDetails) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"        if (taskDetails \u003d\u003d null) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"            throw new NullPointerException(\"Missing task details.\");","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"        Todo toDo \u003d new Todo(taskDetails);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"        taskList.addTask(toDo);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskAddedMessage(taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskCount(taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"     * Adds a new Deadline to the task list.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"     * @param taskList    The tasklist to add the new task to.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"     * @param taskDetails The description of the Deadline task.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"     * @throws NullPointerException If taskDetails is {@code null}","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"     * @throws IllegalTaskException If input format is invalid.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shauntsr"},"content":"    private static void addDeadline(TaskList taskList, String taskDetails) throws IllegalTaskException {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shauntsr"},"content":"        if (taskDetails \u003d\u003d null) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"            throw new NullPointerException(\"Missing task details.\");","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"        String[] splitDeadlineInput \u003d taskDetails.split(\" /by \");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"        if (splitDeadlineInput.length !\u003d 2) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"            throw new IllegalTaskException(\"odin.task.Deadline should follow the format: TASK /by DEADLINE\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"        Deadline deadline \u003d new Deadline(splitDeadlineInput[0], LocalDate.parse(splitDeadlineInput[1]));","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shauntsr"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskAddedMessage(taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskCount(taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"shauntsr"},"content":"     * Adds a new Event to the task list.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"shauntsr"},"content":"     * @param taskList    The tasklist to add the new task to.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"shauntsr"},"content":"     * @param taskDetails The description of the Event task.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"shauntsr"},"content":"     * @throws NullPointerException If taskDetails is {@code null}","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"shauntsr"},"content":"     * @throws IllegalTaskException If input format is invalid.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"shauntsr"},"content":"    private static void addEvent(TaskList taskList, String taskDetails) throws IllegalTaskException {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"shauntsr"},"content":"        if (taskDetails \u003d\u003d null) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"shauntsr"},"content":"            throw new NullPointerException(\"Missing task details.\");","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"shauntsr"},"content":"        String[] splitEventInput \u003d taskDetails.split(\" /from \");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"shauntsr"},"content":"        if (splitEventInput.length \u003c 2) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"shauntsr"},"content":"            throw new IllegalTaskException(\"Missing start time.\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"shauntsr"},"content":"        String[] splitEventTimings \u003d splitEventInput[1].split(\" /to \");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"shauntsr"},"content":"        if (splitEventTimings.length \u003c 2) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"shauntsr"},"content":"            throw new IllegalTaskException(\"Missing end time.\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"shauntsr"},"content":"        LocalDate from \u003d LocalDate.parse(splitEventTimings[0]);","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"shauntsr"},"content":"        LocalDate to \u003d LocalDate.parse(splitEventTimings[1]);","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"shauntsr"},"content":"        Event event \u003d new Event(splitEventInput[0], from, to);","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"shauntsr"},"content":"        taskList.addTask(event);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskAddedMessage(taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskCount(taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"shauntsr"},"content":"     * Marks a task as not done by unmarking it.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"shauntsr"},"content":"     * @param input    The full input string containing the command and index.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"shauntsr"},"content":"     * @param taskList The task list","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"shauntsr"},"content":"     * @throws NumberFormatException     if the provided index is not an integer.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"shauntsr"},"content":"     * @throws IndexOutOfBoundsException if the index is not valid for the task list.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"shauntsr"},"content":"    private static void handleUnmark(String input, TaskList taskList) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"shauntsr"},"content":"        int unmarkIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"shauntsr"},"content":"        taskList.unmarkTask(unmarkIndex);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskUnmarkedMessage(taskList, unmarkIndex);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"shauntsr"},"content":"     * Marks a task as done by marking it.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"shauntsr"},"content":"     * @param input    The full input string containing the command and index.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"shauntsr"},"content":"     * @param taskList The task list","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"shauntsr"},"content":"     * @throws NumberFormatException     if the provided index is not an integer.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"shauntsr"},"content":"     * @throws IndexOutOfBoundsException if the index is not valid for the task list.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"shauntsr"},"content":"    private static void handleMark(String input, TaskList taskList) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"shauntsr"},"content":"        int markIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"shauntsr"},"content":"        taskList.markTask(markIndex);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskMarkedMessage(taskList, markIndex);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"shauntsr"},"content":"     * Deletes a task from tasklist.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"shauntsr"},"content":"     * @param input    The full input string containing the command and index.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"shauntsr"},"content":"     * @param taskList The task list","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"shauntsr"},"content":"     * @throws NumberFormatException     If the provided index is not an integer.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"shauntsr"},"content":"     * @throws IndexOutOfBoundsException If the index is not valid for the task list.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"shauntsr"},"content":"    private static void handleDelete(String input, TaskList taskList) {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"shauntsr"},"content":"        int deleteIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskDeletedMessage(taskList, deleteIndex);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"shauntsr"},"content":"        taskList.deleteTask(deleteIndex);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"shauntsr"},"content":"        Ui.printTaskCount(taskList);","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"shauntsr"},"content":"     * Finds all tasks in the task list that match the given search query.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"shauntsr"},"content":"     * @param taskList      The task list to search through.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"shauntsr"},"content":"     * @param commandParams The search keyword to look for.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"shauntsr"},"content":"     * @throws NullPointerException If {@code commandParams} is {@code null}.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"shauntsr"},"content":"    private static void findTasks(TaskList taskList, String commandParams) {","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"shauntsr"},"content":"        if (commandParams \u003d\u003d null) {","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"shauntsr"},"content":"            throw new NullPointerException(\"Query is missing.\");","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"shauntsr"},"content":"        ArrayList\u003cInteger\u003e taskIndices \u003d taskList.findTask(commandParams);","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"shauntsr"},"content":"        Ui.printFoundTasks(taskList, taskIndices);","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false}],"authorContributionMap":{"shauntsr":215}},{"path":"src/main/java/odin/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.storage;","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import odin.exceptions.IllegalFileException;","lastModifiedDate":"2025-09-29T20:50:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import odin.task.Deadline;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"import odin.task.Event;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import odin.task.Task;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"import odin.task.TaskList;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"import odin.task.Todo;","lastModifiedDate":"2025-09-29T20:10:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"import java.io.File;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":" * The {@code Storage} class manages saving and loading tasks","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":" * from a persistent file. It supports initialization of the save file,","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":" * parsing tasks from file strings, and writing updated task lists back to disk.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"public class Storage {","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    static final String DEFAULT_FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    private String filePath;","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"     * Creates a {@code Storage} instance with the default file path.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    public Storage() {","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"        this.filePath \u003d DEFAULT_FILE_PATH;","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"     * Creates a {@code Storage} instance with a custom file path.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"     * @param filePath The path to the file where tasks should be stored.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"     * Parses a single line from the save file into a {@link Task}.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"     * @param fileString The raw string representation of a task from the file.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"     * @return The reconstructed {@link Task} object.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"     * @throws IllegalFileException If the string format is invalid or task type is unrecognized.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"    private Task handleFileString(String fileString) throws IllegalFileException {","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        char taskType \u003d fileString.charAt(0);","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"        return switch (taskType) {","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"            case \u0027T\u0027 -\u003e Todo.fromFileString(fileString);","lastModifiedDate":"2025-09-29T20:10:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"            case \u0027D\u0027 -\u003e Deadline.fromFileString(fileString);","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"            case \u0027E\u0027 -\u003e Event.fromFileString(fileString);","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"            default -\u003e throw new IllegalFileException(\"Incorrect file format.\");","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"        };","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"     * Initialises the storage by ensuring the save file exists.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"     * \u003cli\u003e If the file exists, do nothing \u003c/li\u003e","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"     * \u003cli\u003e If the file does not exist, creates a new directory (if needed) and save file. \u003c/li\u003e","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"     * @throws IOException If","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"    public void init() throws IOException {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        // If file exists, nothing to do","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Save file found.\");","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"            return;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"No save file found. Starting new save file.\");","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        File parentFile \u003d file.getParentFile();","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"        parentFile.mkdirs();","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"New save file created at \" + file.getPath());","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"     * Loads all tasks from the save file into a {@link TaskList}.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"     * @return A {@link TaskList} containing all tasks read from the file.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"     * @throws FileNotFoundException If the save file does not exist.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"     * @throws IllegalFileException  If a line in the file cannot be parsed into a task.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"    public TaskList loadTasks() throws FileNotFoundException, IllegalFileException {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"            String fileString \u003d scanner.nextLine();","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"            Task task \u003d handleFileString(fileString);","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"            taskList.addTask(task);","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"        return taskList;","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"     * Saves all tasks in the {@link TaskList} to the save file.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"     * Each task is written in its serialized format on a new line.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shauntsr"},"content":"     * @param taskList The list of tasks to save.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shauntsr"},"content":"     * @param listSize The number of tasks to save (useful if list is partially filled).","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"     * @throws IOException If the file cannot be written to.","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-03T22:23:18","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"    public void saveTasks(TaskList taskList, int listSize) throws IOException {","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"        for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"            writer.write(taskList.getTask(i).toFileString());","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"            writer.newLine();","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"        writer.close();","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-24T22:38:57","isFullCredit":false}],"authorContributionMap":{"shauntsr":128}},{"path":"src/main/java/odin/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.task;","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":" * Represents a task that must be completed by a specific date.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":" * A {@code Deadline} stores a single {@link LocalDate} value representing","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":" * the due date, in addition to the description and completion status","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":" * inherited from {@link Task}.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"    private LocalDate by;","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"     * Constructs a {@link Deadline} with the given description and due date.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"     * @param by          The due date of the task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"        super(description);","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"     * Returns a string representation of the deadline for display.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"     * Format example:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"     * [D][ ] Submit report (by Oct 04 2025)","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"     * @return The formatted deadline string showing type, status, description, and due date.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"    public String toString() {","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"        return \"[D]\" + super.toString() + \" (by \" + by.format(taskDateFormat) + \")\";","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"     * Returns a string representation of the deadline suitable for file storage.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"     * Format example:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"     * D | 0 | Submit report | 2025-10-04","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"     * @return A formatted string containing the deadline’s type, status, description, and due date.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"    public String toFileString() {","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"        return \"D\" + DELIM + super.toFileString() + DELIM + by;","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"     * Reconstructs a {@link Deadline} object from its stored file representation.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"     * Expected format:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"     * D | STATUS | DESCRIPTION | BY","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"     * where {@code STATUS} is {@code 1} if the deadline is done, and {@code 0} otherwise.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"     * @param fileString The line of text representing the deadline in the save file.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"     * @return The reconstructed {@link Deadline} object.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"     * @throws java.time.format.DateTimeParseException if the stored date is not in ISO format.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"    public static Deadline fromFileString(String fileString) {","lastModifiedDate":"2025-09-24T23:48:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        String[] splitFileString \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"        Deadline deadline \u003d new Deadline(splitFileString[2], LocalDate.parse(splitFileString[3]));","lastModifiedDate":"2025-09-30T13:22:43","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        if (splitFileString[1].equals(\"1\")) {","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"            deadline.setIsDone(true);","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"        return deadline;","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false}],"authorContributionMap":{"shauntsr":79}},{"path":"src/main/java/odin/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.task;","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":" * Represents an event task that occurs within a specific time range.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":" * An {@code Event} stores a start date ({@code from}) and an end date ({@code to})","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":" * in addition to the task description and completion status inherited from","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":" * {@link Task}.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"    private LocalDate from;","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"    private LocalDate to;","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"     * Constructs an {@link Event} with the given description and time period.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"     * @param from        The start date of the event.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"     * @param to          The end date of the event.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"        super(description);","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"     * Returns a string representation of the event for display.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"     * Format example:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"     * [E][X] Project meeting (from: Oct 01 2025 to: Oct 02 2025)","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"     * @return The formatted event string showing type, status, description, and date range.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"    public String toString() {","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(taskDateFormat) + \" to: \" + to.format(taskDateFormat) + \")\";","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"     * Returns a string representation of the event suitable for file storage.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"     * Format example:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"     * E | 1 | Project meeting | 2025-10-01 | 2025-10-02","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"     * @return A formatted string containing the event’s type, status, description, and date range.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"    public String toFileString() {","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"        return \"E\" + DELIM + super.toFileString() + DELIM + from + DELIM + to;","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"     * Reconstructs an {@link Event} object from its stored file representation.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"     * Expected format:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"     * E | STATUS | DESCRIPTION | FROM | TO","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"     * where {@code STATUS} is {@code 1} if the event is done, and {@code 0} otherwise.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"     * @param fileString The line of text representing the event in the save file.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"     * @return The reconstructed {@link Event} object.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"     * @throws java.time.format.DateTimeParseException if the stored dates are not in ISO format.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"    public static Event fromFileString(String fileString) {","lastModifiedDate":"2025-09-24T23:48:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        String[] splitFileString \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"        LocalDate from \u003d LocalDate.parse(splitFileString[3]);","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"        LocalDate to \u003d LocalDate.parse(splitFileString[4]);","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"        Event event \u003d new Event(splitFileString[2], from, to);","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"        if (splitFileString[1].equals(\"1\")) {","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"            event.setIsDone(true);","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"        return event;","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-14T18:28:07","isFullCredit":false}],"authorContributionMap":{"shauntsr":84}},{"path":"src/main/java/odin/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.task;","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":" * This is the abstract parent class for all specific task types.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"public abstract class Task {","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"     * Delimiter used in save file formatting.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"    public static final String DELIM \u003d \" | \";","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"     * Formatter for displaying task dates in a readable format.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"    protected static final DateTimeFormatter taskDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-30T23:58:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    private String description;","lastModifiedDate":"2025-09-01T14:28:50","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T13:05:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"     * Constructs a {@code Task} with the specified description.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-01T14:28:50","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-01T14:28:50","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T13:05:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T13:05:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"     * @return The task description.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"    public String getDescription() {","lastModifiedDate":"2025-09-01T14:28:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"        return description;","lastModifiedDate":"2025-09-01T14:28:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T13:05:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"     * @return {@code \"[X]\"} if the task is done, {@code \"[ ]\"} otherwise.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"     * Updates the completion status of the task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"     * @param isDone {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T19:04:35","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"     * Returns a string representation of the task for display.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"     * @return The formatted task string showing its status and description.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-09-14T16:57:47","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"    public String toString() {","lastModifiedDate":"2025-09-14T16:57:47","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2025-09-01T19:04:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T19:04:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"     * Returns a string representation of the task for file storage.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"     * The format is {@code STATUS | DESCRIPTION}, where {@code STATUS}","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"     * is {@code 1} if the task is done and {@code 0} otherwise.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"     * @return A formatted string containing the task\u0027s file representation.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"    public String toFileString() {","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"        String fileStatusIcon \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"        return fileStatusIcon + DELIM + description;","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-01T13:05:23","isFullCredit":false}],"authorContributionMap":{"shauntsr":80}},{"path":"src/main/java/odin/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.task;","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-24T21:40:49","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T21:40:49","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":" * The {@code TaskList} class represents a collection of {@link Task} objects.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":" * It provides methods for adding, removing, marking, unmarking, finding,","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":" * and retrieving tasks.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"public class TaskList {","lastModifiedDate":"2025-09-01T18:28:17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-24T21:40:49","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T18:28:17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"     * Adds a new {@link Task} to the task list.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"     * @param task The task to be added.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"        taskList.add(task);","lastModifiedDate":"2025-09-24T21:40:49","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T18:28:17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T18:28:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"     * Marks a task by setting as done.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"     * @param taskIndex The index of the task to mark.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"     * @throws IndexOutOfBoundsException If the index is invalid.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-09-24T21:40:49","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-09-17T23:25:04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-17T23:25:04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"        taskList.get(taskIndex).setIsDone(true);","lastModifiedDate":"2025-09-24T21:40:49","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T18:58:24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"     * Unmarks a task by setting as not done.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"     * @param taskIndex The index of the task to unmark.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"     * @throws IndexOutOfBoundsException If the index is invalid.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2025-09-01T19:25:26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-09-24T21:40:49","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-09-17T23:25:04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-17T23:25:04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"        taskList.get(taskIndex).setIsDone(false);","lastModifiedDate":"2025-09-24T21:40:49","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T19:25:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-01T19:25:26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"     * @throws IndexOutOfBoundsException If the index is invalid.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2025-09-24T21:59:24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2025-09-24T21:59:24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-09-24T21:59:24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-24T21:59:24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2025-09-24T21:59:24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-01T18:28:17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"     * Finds all tasks in the list whose description contains the given query (case-insensitive).","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"     * @param query The search query string.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"     * @return A list of indices representing the positions of matching tasks.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"    public ArrayList\u003cInteger\u003e findTask(String query) {","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"        ArrayList\u003cInteger\u003e taskIndices \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"        for (int index \u003d 0; index \u003c taskList.size(); index++) {","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"            Task task \u003d taskList.get(index);","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"            if (task.getDescription().toLowerCase().contains(query.toLowerCase())) {","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"                taskIndices.add(index);","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"            }","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"        return taskIndices;","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-01T00:36:15","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"        return taskList.size();","lastModifiedDate":"2025-09-25T13:06:28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"     * Retrieves a task at a given index.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"     * @return The {@link Task} at the specified index.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"     * @throws IndexOutOfBoundsException If the index is invalid.","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:47:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"        return taskList.get(index);","lastModifiedDate":"2025-09-25T13:06:28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-25T00:48:53","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-01T18:28:17","isFullCredit":false}],"authorContributionMap":{"shauntsr":98}},{"path":"src/main/java/odin/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.task;","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":" * Represents a basic task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":" * A {@code Todo} simply tracks a description and completion status,","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":" * inherited from {@link Task}. It is the simplest type of task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-29T20:10:32","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":"     * Constructs a {@link Todo} with the given description.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"     * @param description Description of the to-do task.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-29T20:10:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"        super(description);","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"     * Returns a string representation of the to-do for display.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"     * Format example:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"     * [T][X] Buy groceries","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"     * @return The formatted string showing type, status, and description.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"    public String toString() {","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"     * Returns a string representation of the to-do suitable for file storage.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"     * Format example:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"     * T | 0 | Buy groceries","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"     * @return A formatted string containing the to-do’s type, status, and description.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"    @Override","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"    public String toFileString() {","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"        return \"T\" + DELIM + super.toFileString();","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T22:42:56","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"     * Reconstructs a {@link Todo} object from its stored file representation.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"     * Expected format:","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"     * T | STATUS | DESCRIPTION","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"     * where {@code STATUS} is {@code 1} if the to-do is done, and {@code 0} otherwise.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"     * @param fileString The line of text representing the to-do in the save file.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"     * @return The reconstructed {@link Todo} object.","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T16:10:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"    public static Todo fromFileString(String fileString) {","lastModifiedDate":"2025-09-29T20:10:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"        String[] splitFileString \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2025-09-25T00:30:11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"        Todo toDo \u003d new Todo(splitFileString[2]);","lastModifiedDate":"2025-09-29T20:10:32","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"        if (splitFileString[1].equals(\"1\")) {","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"            toDo.setIsDone(true);","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"        return toDo;","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-24T23:30:23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-14T18:00:12","isFullCredit":false}],"authorContributionMap":{"shauntsr":71}},{"path":"src/main/java/odin/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"package odin.ui;","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"import odin.task.Task;","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"import odin.task.TaskList;","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"/**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":" * The {@code Ui} class handles all user interface outputs for the Odin program.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":" * It provides methods to display messages, errors, and task information on the console.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"shauntsr"},"content":" */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"public class Ui {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"shauntsr"},"content":"     * Prints a horizontal separator line to the console.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"shauntsr"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"__________________________________________\");","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"shauntsr"},"content":"     * Prints an error message with a standard prefix.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"shauntsr"},"content":"     * @param errorMessage The error message to display.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"shauntsr"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Error:\\n   \" + errorMessage);","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"shauntsr"},"content":"     * Prints all tasks in the provided {@link TaskList}, each with its corresponding index.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"shauntsr"},"content":"     * @param taskList The list of tasks to display.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"shauntsr"},"content":"    public static void printTasks(TaskList taskList) {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"shauntsr"},"content":"        int taskCount \u003d taskList.getTaskCount();","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"shauntsr"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"shauntsr"},"content":"            Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"shauntsr"},"content":"            int taskIndex \u003d i + 1;","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"shauntsr"},"content":"            System.out.println(taskIndex + \". \" + currTask.toString());","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"shauntsr"},"content":"     * Prints a message confirming that a new task has been successfully added.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"shauntsr"},"content":"     * @param taskList The list containing the newly added task.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"shauntsr"},"content":"    public static void printTaskAddedMessage(TaskList taskList) {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"shauntsr"},"content":"        int taskCount \u003d taskList.getTaskCount();","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Successfully added:\");","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"shauntsr"},"content":"        System.out.println(taskList.getTask(taskCount - 1));","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"shauntsr"},"content":"     * Prints a message when a task has been marked as done.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"shauntsr"},"content":"     * @param taskList  The task list containing the marked task.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"shauntsr"},"content":"     * @param taskIndex The index of the task that was marked.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"shauntsr"},"content":"    public static void printTaskMarkedMessage(TaskList taskList, int taskIndex) {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Nice! Another task down!\");","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"   \" + taskList.getTask(taskIndex).toString());","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"shauntsr"},"content":"     * Prints a message when a task has been unmarked (set to not done).","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"shauntsr"},"content":"     * @param taskList  The task list containing the unmarked task.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"shauntsr"},"content":"     * @param taskIndex The index of the task that was unmarked.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"shauntsr"},"content":"    public static void printTaskUnmarkedMessage(TaskList taskList, int taskIndex) {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Task unmarked. Please tell me it was a misinput.\");","lastModifiedDate":"2025-10-04T15:55:02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"   \" + taskList.getTask(taskIndex).toString());","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"shauntsr"},"content":"     * Prints a message indicating that a task has been deleted.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"shauntsr"},"content":"     * @param taskList  The task list containing the deleted task.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"shauntsr"},"content":"     * @param taskIndex The index of the deleted task.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"shauntsr"},"content":"    public static void printTaskDeletedMessage(TaskList taskList, int taskIndex) {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Deleting task \" + (taskIndex + 1) + \"...\");","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"   \" + taskList.getTask(taskIndex).toString());","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"shauntsr"},"content":"     * Prints the current number of tasks in the list.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"shauntsr"},"content":"     * @param taskList The task list whose size is being reported.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"shauntsr"},"content":"    public static void printTaskCount(TaskList taskList) {","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"You now have \" + taskList.getTaskCount() + \" tasks.\");","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"shauntsr"},"content":"     * Displays the tasks that match a given search query.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"shauntsr"},"content":"     * If no matching tasks are found, prints a message indicating that.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"shauntsr"},"content":"     *","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"shauntsr"},"content":"     * @param taskList    The list of tasks to search from.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"shauntsr"},"content":"     * @param taskIndices The indices of tasks that match the query.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"shauntsr"},"content":"    public static void printFoundTasks(TaskList taskList, ArrayList\u003cInteger\u003e taskIndices) {","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Querying...\");","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"shauntsr"},"content":"        if (taskIndices.isEmpty()) {","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"shauntsr"},"content":"            System.out.println(\"Could not find matching task.\");","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"shauntsr"},"content":"            return;","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"shauntsr"},"content":"        System.out.println(taskIndices.size() + \" matching task(s) were found in your list.\");","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"shauntsr"},"content":"        int count \u003d 0;","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"shauntsr"},"content":"        for (int taskIndex : taskIndices) {","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"shauntsr"},"content":"            System.out.println((count + 1) + \". \" + taskList.getTask(taskIndex));","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"shauntsr"},"content":"            count++;","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"shauntsr"},"content":"        }","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"shauntsr"},"content":"","lastModifiedDate":"2025-10-01T00:46:56","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"shauntsr"},"content":"    /**","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"shauntsr"},"content":"     * Prints the introductory message displayed when the program starts.","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"shauntsr"},"content":"     */","lastModifiedDate":"2025-10-04T15:54:08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"shauntsr"},"content":"    public static void printIntroMessage() {","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"shauntsr"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"Hello! I\u0027m Odin\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"shauntsr"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"shauntsr"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"shauntsr"},"content":"    }","lastModifiedDate":"2025-09-29T20:49:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"shauntsr"},"content":"}","lastModifiedDate":"2025-09-29T20:34:40","isFullCredit":false}],"authorContributionMap":{"shauntsr":127}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"T | 0 | borrow book","lastModifiedDate":"2025-10-01T00:52:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"D | 1 | return book | 2025-09-12","lastModifiedDate":"2025-10-01T00:52:44","isFullCredit":false}],"authorContributionMap":{"shauntsr":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shauntsr"},"content":"todo borrow book","lastModifiedDate":"2025-09-17T21:55:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"shauntsr"},"content":"list","lastModifiedDate":"2025-09-17T21:55:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"shauntsr"},"content":"deadline return book /by","lastModifiedDate":"2025-09-17T23:28:06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"shauntsr"},"content":"deadline return book /by 2025-09-12","lastModifiedDate":"2025-10-01T00:52:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"shauntsr"},"content":"mark 2","lastModifiedDate":"2025-09-17T21:55:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"shauntsr"},"content":"list","lastModifiedDate":"2025-09-17T21:55:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"shauntsr"},"content":"unmark 5","lastModifiedDate":"2025-09-17T23:28:06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"shauntsr"},"content":"find book","lastModifiedDate":"2025-10-01T00:52:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"bye","lastModifiedDate":"2025-09-17T21:55:44","isFullCredit":false}],"authorContributionMap":{"shauntsr":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"shauntsr"},"content":"REM delete data folder from previous run","lastModifiedDate":"2025-10-01T00:52:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"shauntsr"},"content":"if exist data rmdir /s /q data","lastModifiedDate":"2025-10-01T00:52:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"shauntsr"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\odin\\Odin.java","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"shauntsr"},"content":"java -classpath ..\\bin odin.Odin \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-18T17:39:31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"shauntsr":4,"-":19}}]
