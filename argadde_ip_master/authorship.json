[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"argadde"},"content":"# Bevo User Guide","lastModifiedDate":"2025-08-19T17:46:34","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"argadde":1,"-":29}},{"path":"src/main/java/Bevo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"argadde"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"argadde"},"content":"public class Bevo {","lastModifiedDate":"2025-08-19T17:46:34","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"argadde"},"content":"    /** List of commands available to the user */","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"argadde"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"argadde"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"argadde"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"argadde"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"argadde"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"argadde"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"argadde"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"argadde"},"content":"    /** Unknown message used when unable to determine times */","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"argadde"},"content":"    private static final String UNSPECIFIED_MESSAGE \u003d \"unspecified\";","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"argadde"},"content":"    /** Maximum number of tasks that can be created */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"argadde"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-08-19T17:46:34","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"argadde"},"content":"    /** Horizontal line that is used when creating boxes during printing */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"argadde"},"content":"    private static final String HORIZONTAL_LINE \u003d \"\\t_____________________________________________________\";","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"argadde"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"argadde"},"content":"        printWelcomeMessage();","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"argadde"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"argadde"},"content":"        Task[] tasks \u003d new Task[MAX_TASKS];","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"argadde"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:21:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"argadde"},"content":"        while (true) {","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"argadde"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"argadde"},"content":"            if (input.toLowerCase().equals(BYE_COMMAND)) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"argadde"},"content":"                executeByeCommand();","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"argadde"},"content":"                break;","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"argadde"},"content":"            } else if (input.toLowerCase().equals(LIST_COMMAND)) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"argadde"},"content":"                executeListCommand(tasks, taskCount);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"argadde"},"content":"            } else if (input.toLowerCase().startsWith(MARK_COMMAND)) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"argadde"},"content":"                executeMarkCommand(tasks, input);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"argadde"},"content":"            } else if (input.toLowerCase().startsWith(UNMARK_COMMAND)) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"argadde"},"content":"                executeUnmarkCommand(tasks, input);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"argadde"},"content":"            } else if (input.toLowerCase().startsWith(TODO_COMMAND)) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"argadde"},"content":"                taskCount \u003d executeToDoCommand(tasks, taskCount, input);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"argadde"},"content":"            } else if (input.toLowerCase().startsWith(DEADLINE_COMMAND)) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"argadde"},"content":"                taskCount \u003d executeDeadlineCommand(tasks, taskCount, input);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"argadde"},"content":"            } else if (input.toLowerCase().startsWith(EVENT_COMMAND)) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"argadde"},"content":"                taskCount \u003d executeEventCommand(tasks, taskCount, input);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"argadde"},"content":"            } else {","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"argadde"},"content":"                printError(\"Bevo does not understand the command.\");","lastModifiedDate":"2025-10-01T22:18:55","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"argadde"},"content":"            }","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"argadde"},"content":"        }","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"argadde"},"content":"        scanner.close();","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"argadde"},"content":"     * Executes the event command by creating an","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"argadde"},"content":"     * Event and setting its description and timeline.","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"argadde"},"content":"     * Then, it adds the Event to the task list.","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"argadde"},"content":"     * @param tasks the array of all tasks","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"argadde"},"content":"     * @param taskCount the current count of the task list","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"argadde"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"argadde"},"content":"     * @return the updated task list\u0027s length","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"argadde"},"content":"    private static int executeEventCommand(Task[] tasks, int taskCount, String input) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"argadde"},"content":"        String[] parts \u003d input.length() \u003e EVENT_COMMAND.length() + 1","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"argadde"},"content":"                ? input.substring(EVENT_COMMAND.length() + 1).split(\"/from|/to\")","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"argadde"},"content":"                : new String[]{\"\"};","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"argadde"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"argadde"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"argadde"},"content":"            printError(\"Bevo says an event must have a description.\");","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"argadde"},"content":"            return taskCount;","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"argadde"},"content":"        }","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"argadde"},"content":"        String from \u003d parts.length \u003e 1 ? parts[1].trim() : UNSPECIFIED_MESSAGE;","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"argadde"},"content":"        String to \u003d parts.length \u003e 2 ? parts[2].trim() : UNSPECIFIED_MESSAGE;","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"argadde"},"content":"        tasks[taskCount] \u003d new Event(description, from, to);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"argadde"},"content":"        printAddCommand(tasks[taskCount], ++taskCount);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"argadde"},"content":"        return taskCount;","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"argadde"},"content":"     * Executes the deadline command by creating a","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"argadde"},"content":"     * Deadline and setting its description and end date.","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"argadde"},"content":"     * Then, it adds the Deadline to the task list.","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"argadde"},"content":"     * @param tasks the array of all tasks","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"argadde"},"content":"     * @param taskCount the current count of the task list","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"argadde"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"argadde"},"content":"     * @return the updated task list\u0027s length","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"argadde"},"content":"    private static int executeDeadlineCommand(Task[] tasks, int taskCount, String input) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"argadde"},"content":"        String[] parts \u003d input.length() \u003e DEADLINE_COMMAND.length() + 1","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"argadde"},"content":"                ? input.substring(DEADLINE_COMMAND.length() + 1).split(\"/by\", 2)","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"argadde"},"content":"                : new String[]{\"\"};","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"argadde"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"argadde"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"argadde"},"content":"            printError(\"Bevo says a deadline must have a description!\");","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"argadde"},"content":"            return taskCount;","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"argadde"},"content":"        }","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"argadde"},"content":"        String by \u003d parts.length \u003e 1 ? parts[1].trim() : UNSPECIFIED_MESSAGE;","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"argadde"},"content":"        tasks[taskCount] \u003d new Deadline(description, by);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"argadde"},"content":"        printAddCommand(tasks[taskCount], ++taskCount);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"argadde"},"content":"        return taskCount;","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"argadde"},"content":"     * Executes the todo command by creating a","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"argadde"},"content":"     * ToDo and setting its description.","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"argadde"},"content":"     * Then, it adds the Deadline to the task list.","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"argadde"},"content":"     * @param tasks the array of all tasks","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"argadde"},"content":"     * @param taskCount the current count of the task list","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"argadde"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"argadde"},"content":"     * @return the updated task list\u0027s length","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"argadde"},"content":"    private static int executeToDoCommand(Task[] tasks, int taskCount, String input) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"argadde"},"content":"        String description \u003d input.length() \u003e TODO_COMMAND.length() + 1","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"argadde"},"content":"                ? input.substring(TODO_COMMAND.length() + 1).trim()","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"argadde"},"content":"                : \"\";","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"argadde"},"content":"        ","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"argadde"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"argadde"},"content":"            printError(\"Bevo says a todo must have a description.\");","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"argadde"},"content":"            return taskCount;","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"argadde"},"content":"        }","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"argadde"},"content":"        ","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"argadde"},"content":"        tasks[taskCount] \u003d new Todo(description);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"argadde"},"content":"        printAddCommand(tasks[taskCount], ++taskCount);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"argadde"},"content":"        return taskCount;","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"argadde"},"content":"     * Prints out the adding confirmation to the user.","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"argadde"},"content":"     * @param task a newly added Task","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"argadde"},"content":"     * @param taskCount the current count of the task list","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"argadde"},"content":"    private static void printAddCommand(Task task, int taskCount) {","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t  \" + task);","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"argadde"},"content":"     * Executes the unmark command by setting the user-requested","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"argadde"},"content":"     * task to incomplete.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"argadde"},"content":"     * @param tasks the array of all tasks","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"argadde"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"argadde"},"content":"    private static void executeUnmarkCommand(Task[] tasks, String input) {","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"argadde"},"content":"        String taskNumber \u003d input.split(\" \")[1];","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"argadde"},"content":"        int index \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"argadde"},"content":"        tasks[index].markAsNotDone();","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t  OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t\\t  \" + tasks[index]);","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"argadde"},"content":"     * Executes the mark command by setting the user-requested","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"argadde"},"content":"     * task to complete.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"argadde"},"content":"     * @param tasks the array of all tasks","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"argadde"},"content":"     * @param input the user\u0027s input","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"argadde"},"content":"    private static void executeMarkCommand(Task[] tasks, String input) {","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"argadde"},"content":"        String taskNumber \u003d input.split(\" \")[1];","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"argadde"},"content":"        int index \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"argadde"},"content":"        tasks[index].markAsDone();","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t  Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t\\t  \" + tasks[index]);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T17:21:42","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:12:37","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"argadde"},"content":"     * Executes the list command by listing all the tasks and","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"argadde"},"content":"     * their statuses.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"argadde"},"content":"     * @param tasks the array of all tasks","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"argadde"},"content":"     * @param taskCount the current count of the task list","lastModifiedDate":"2025-09-01T19:16:45","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"argadde"},"content":"    private static void executeListCommand(Task[] tasks, int taskCount) {","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"argadde"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"argadde"},"content":"            System.out.println(\"\\t  \" + (i + 1) + \". \" + tasks[i]);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"argadde"},"content":"        }","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"argadde"},"content":"     * Executes the bye command by printing out a goodbye","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"argadde"},"content":"     * message.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"argadde"},"content":"    private static void executeByeCommand() {","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t  Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-10-01T22:28:40","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"argadde"},"content":"     * Prints out an error message for invalid inputs.","lastModifiedDate":"2025-10-01T22:28:40","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-10-01T22:28:40","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"argadde"},"content":"     * @param message the error message to be displayed","lastModifiedDate":"2025-10-01T22:28:40","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-10-01T22:28:40","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"argadde"},"content":"    private static void printError(String message) {","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t  Oops! \" + message);","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-10-01T22:13:34","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"argadde"},"content":"     * Prints out a welcome message with the chatbot\u0027s","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"argadde"},"content":"     * name and prompts the user for input.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"argadde"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"argadde"},"content":"        String logo \u003d \"|||||   -----   \\\\     /   -----\\n\"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"argadde"},"content":"                + \"|    |  |        \\\\   /   |     |\\n\"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"argadde"},"content":"                + \"|||||   ----      \\\\ /    |     |\\n\"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"argadde"},"content":"                + \"|    |  |          |     |     |\\n\"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"argadde"},"content":"                + \"|||||   -----      |      ----- \\n\";","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"argadde"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t  Hello! I\u0027m Bevo.\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"argadde"},"content":"        System.out.println(\"\\t  What can I do for you?\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"argadde"},"content":"        System.out.println(HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-08-19T17:46:34","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"argadde"},"content":"}","lastModifiedDate":"2025-08-19T17:46:34","isFullCredit":false}],"authorContributionMap":{"argadde":240}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"argadde"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"argadde"},"content":"    ","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"argadde"},"content":"    /** Deadline time */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"argadde"},"content":"    protected String by;","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"argadde"},"content":"     * Creates a Deadline with a specified","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"argadde"},"content":"     * description and deadline time.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"argadde"},"content":"     * isDone is set to false by default.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"argadde"},"content":"     * @param description Description of task to be completed","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"argadde"},"content":"     * @param by Deadline time","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"argadde"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"argadde"},"content":"        super(description);","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"argadde"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"argadde"},"content":"     * Displays a String that contains the status,","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"argadde"},"content":"     * description, and deadline time of the Deadline.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"argadde"},"content":"    @Override","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"argadde"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"argadde"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"argadde"},"content":"}","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false}],"authorContributionMap":{"argadde":27}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"argadde"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"argadde"},"content":"    ","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"argadde"},"content":"    /** Start time of the timeline */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"argadde"},"content":"    protected String from;","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"argadde"},"content":"    /** End time of the timeline */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"argadde"},"content":"    protected String to;","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"argadde"},"content":"     * Creates an Event with a specified","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"argadde"},"content":"     * description and timeline.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"argadde"},"content":"     * isDone is set to false by default.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"argadde"},"content":"     * @param description Description of task to be completed","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"argadde"},"content":"     * @param from Start time","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"argadde"},"content":"     * @param to End time","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"argadde"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"argadde"},"content":"        super(description);","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"argadde"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"argadde"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"argadde"},"content":"     * Displays a String that contains the status,","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"argadde"},"content":"     * description, and event timeline of the Event.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"argadde"},"content":"    @Override","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"argadde"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"argadde"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"argadde"},"content":"}","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false}],"authorContributionMap":{"argadde":32}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"argadde"},"content":"public class Task {","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"argadde"},"content":"    /** Description of task */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"argadde"},"content":"    protected String description;","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"argadde"},"content":"    /** Completion status of task (done or not done) */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"argadde"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"argadde"},"content":"     * Creates a Task with a specified description.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"argadde"},"content":"     * isDone is set to false by default.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"argadde"},"content":"     * @param description Description of task to be completed","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"argadde"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"argadde"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"argadde"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"argadde"},"content":"     * Determines completion icom based on status","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"argadde"},"content":"     * to be used in the toString() method when displayed.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"argadde"},"content":"     * @return Icon that represents completion status.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"argadde"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"argadde"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"argadde"},"content":"     * Marks the task as complete.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"argadde"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"argadde"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"argadde"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"argadde"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"argadde"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"argadde"},"content":"     * Displays a String that contains the status","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"argadde"},"content":"     * and the description of the Task.","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:12:23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"argadde"},"content":"    @Override","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"argadde"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"argadde"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"argadde"},"content":"}","lastModifiedDate":"2025-09-01T17:38:57","isFullCredit":false}],"authorContributionMap":{"argadde":51}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"argadde"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"argadde"},"content":"     * Creates a Todo with a specified description.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"argadde"},"content":"     * isDone is set to false by default.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"argadde"},"content":"     * ","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"argadde"},"content":"     * @param description Description of task to be completed","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"argadde"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"argadde"},"content":"        super(description);","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"argadde"},"content":"","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"argadde"},"content":"    /**","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"argadde"},"content":"     * Displays a String that contains the status and","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"argadde"},"content":"     * description of the Todo.","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"argadde"},"content":"     */","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"argadde"},"content":"    @Override","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"argadde"},"content":"    public String toString() {","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"argadde"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"argadde"},"content":"    }","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"argadde"},"content":"}","lastModifiedDate":"2025-09-01T18:43:01","isFullCredit":false}],"authorContributionMap":{"argadde":21}}]
