[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"# Paddington User Guide","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"\u003cimg src\u003d\"PaddingtonImage1.png\" width\u003d\"500\"\u003e","lastModifiedDate":"2025-10-05T18:32:01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"\u003cimg src\u003d\"PaddingtonImage2.png\" width\u003d\"500\"\u003e","lastModifiedDate":"2025-10-05T18:32:01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"The Paddington chatbot is a desktop app for managing tasks, optimised for use via a Command Line Interface (CLI).","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"Manage your tasks easily. Add to-dos, deadlines and events, mark completed ones, and searching by keywords.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"\\","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"\\","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"With the Paddington Bear, your tasks are kept safely and organised at Paddington Station in London.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"---","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"## Quick Start","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"1. Ensure you have Java 17 or above installed in your Computer.\\","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"   **Mac users**: Ensure you have the precise JDK version prescribed here. ","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"2. Download the latest .jar file from here.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"3. Copy the file to the folder you want to use as the home folder for your AddressBook.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"4. Open a terminal, cd into the folder with the jar file.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"5. Run: `java -jar Paddington.jar` ","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"6. Type a command and press Enter to execute it.\\","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"   You may refer to the Features below for details of each command.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"## Features","lastModifiedDate":"2025-10-05T18:32:01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"Adds a task with its description.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"todo DESCRIPTION","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"todo Eat marmalade","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"  [T][ ] Eat marmalade","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"Adds a task with its description and deadline.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"deadline DESCRIPTION /by DATE","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"deadline Head to Paddington Gift Shop /by 3pm","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"  [D][ ] Head to Paddington Gift Shop (by: 3pm)","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"### Adding an event: `event`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"Adds a task with its description, start and end times.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"event DESCRIPTION /from START_TIME /to END_TIME","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"event Visit the Tower of London /from Saturday 2pm /to 5pm","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"  [E][ ] Visit the Tower of London (from: Saturday 2pm to: 5pm)","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"Shows all tasks saved.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"list","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BestBearrr"},"content":"list","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BestBearrr"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BestBearrr"},"content":"  1.[T][ ] Eat marmalade","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BestBearrr"},"content":"  2.[D][ ] Head to Paddington Gift Shop (by: 3pm)","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BestBearrr"},"content":"  3.[E][ ] Visit the Tower of London (from: Saturday 2pm to: 5pm)","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BestBearrr"},"content":"### Marking a task: `mark`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BestBearrr"},"content":"Marks a task as completed.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BestBearrr"},"content":"mark TASK_NUMBER","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BestBearrr"},"content":"mark 1","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BestBearrr"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BestBearrr"},"content":"  [T][X] Eat marmalade","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BestBearrr"},"content":"### Unmarking a task: `unmark`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BestBearrr"},"content":"Marks a task as not complete.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BestBearrr"},"content":"unmark TASK_NUMBER","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BestBearrr"},"content":"unmark 1","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BestBearrr"},"content":"OK, I\u0027ve marked this task as not done yet","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BestBearrr"},"content":"  [T][ ] Eat marmalade","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BestBearrr"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BestBearrr"},"content":"Removes a task from the list.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BestBearrr"},"content":"delete TASK_NUMBER","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BestBearrr"},"content":"delete 2","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BestBearrr"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BestBearrr"},"content":"  [D][ ] Head to Paddington Gift Shop (by: 3pm)","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BestBearrr"},"content":"### Finding a task: `find`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BestBearrr"},"content":"Lists all tasks that contains the keyword. The search is case-insensitive.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BestBearrr"},"content":"find KEYWORD","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BestBearrr"},"content":"find marmalade","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BestBearrr"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BestBearrr"},"content":"  1.[T][ ] Eat marmalade","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BestBearrr"},"content":"### Quitting the chatbot: `bye`","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BestBearrr"},"content":"Terminates the session. All tasks are saved.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BestBearrr"},"content":"Format:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BestBearrr"},"content":"bye","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BestBearrr"},"content":"Example:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BestBearrr"},"content":"bye","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BestBearrr"},"content":"Expected output:","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BestBearrr"},"content":"Mind the gap between the train and the platform.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BestBearrr"},"content":"This is Paddington, where this train terminates. All change.","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BestBearrr"},"content":"Here\u0027s some marmalade and see you soon!","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BestBearrr"},"content":"```","lastModifiedDate":"2025-10-05T18:27:08","isFullCredit":false}],"authorContributionMap":{"BestBearrr":176,"-":23}},{"path":"src/main/java/paddington/Paddington.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington;","lastModifiedDate":"2025-10-05T14:58:17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import paddington.parser.Parser;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"import paddington.storage.Storage;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import paddington.task.TaskList;","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"import paddington.ui.PaddingtonException;","lastModifiedDate":"2025-10-05T14:58:17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import paddington.ui.Ui;","lastModifiedDate":"2025-10-05T14:58:17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-01T18:20:01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-01T18:20:01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":" * Main class for the Paddington chatbot.","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":" * Initialises storage, loads tasks and processes user input until bye command is inputted.","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"public class Paddington {","lastModifiedDate":"2025-08-27T14:55:33","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"    static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-14T13:07:24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-09T16:18:51","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"     * Main entry point of the Paddington chatbot.","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"     * Initializes storage, loads tasks, displays a welcome message, and processes user input.","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"     * Saves tasks if modified.","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"     * @param args command-line arguments (unused)","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"     * @throws PaddingtonException if there\u0027s an error loading storage or tasks","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:06:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"    public static void main(String[] args) throws PaddingtonException {","lastModifiedDate":"2025-09-14T14:55:16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"        // Load data from storage","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"        try {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"            Storage.init();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"            Storage.load();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"            throw new PaddingtonException(e.getMessage());","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"        // Start","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"        while (!Parser.getIsQuit()) {","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2025-09-14T13:51:33","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:41:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"            try {","lastModifiedDate":"2025-10-05T18:41:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"                Parser.parseInput(userInput);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"            } catch (PaddingtonException e) {","lastModifiedDate":"2025-10-05T18:41:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"                Ui.printErrorDescription(e.getMessage());","lastModifiedDate":"2025-10-05T18:41:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-10-05T18:41:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T18:41:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"            if (Parser.getIsTaskListChanged()) {","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"                Storage.save(TaskList.getTaskList());","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-01T18:20:01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"        scanner.close();","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-08-27T14:55:33","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-08-27T14:55:33","isFullCredit":false}],"authorContributionMap":{"BestBearrr":58}},{"path":"src/main/java/paddington/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.parser;","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import paddington.task.TaskList;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"import paddington.ui.PaddingtonException;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"import paddington.ui.Ui;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":" * Parses user input commands and interacts with the task list and UI.","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":" * The {@link Parser} class is responsible for interpreting user input, executing corresponding actions","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":" * (such as adding, deleting, or marking tasks), and handling errors related to command processing.","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"public class Parser {","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"    private static boolean isQuit \u003d false;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"    private static boolean isTaskListChanged \u003d false;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"     * Returns whether the program should quit.","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"     * @return true if the program should quit, false otherwise","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"    public static boolean getIsQuit() {","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"        return isQuit;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"     * Sets the quit status of the program.","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"     * @param isQuit true if the program should quit, false otherwise","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"    public static void setIsQuit(boolean isQuit) {","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"        Parser.isQuit \u003d isQuit;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"     * Returns whether the task list has been modified.","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     * @return true if the task list was modified, false otherwise","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"    public static boolean getIsTaskListChanged() {","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"        return isTaskListChanged;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"     * Parses the user input and executes the corresponding action.","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"     * This method identifies the command and calls appropriate methods to handle the task list","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     * or perform other actions, such as quitting the program or displaying tasks.","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"     * @param input the user input containing the command and optional parameters","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"     * @throws PaddingtonException if there is an error with the input processing","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:48:20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"    public static void parseInput(String input) throws PaddingtonException {","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"        isTaskListChanged \u003d false;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"        String[] processedInput \u003d input.split(\" \", 2);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"        String command \u003d processedInput[0].toLowerCase();","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"        String params \u003d (processedInput.length \u003e 1) ? processedInput[1] : \"\";","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"        try {","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"            switch (command) {","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"                case \"bye\":","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"                    Ui.printGoodbye();","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"                    isQuit \u003d true;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"                case \"list\":","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"                    TaskList.listAllTasks();","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"                case \"find\":","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"                    TaskList.findTask(params);","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"                case \"mark\":","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"                    TaskList.markTask(params);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"                    isTaskListChanged \u003d true;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"                case \"unmark\":","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"                    TaskList.unmarkTask(params);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"                    isTaskListChanged \u003d true;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"                case \"delete\":","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"                    TaskList.deleteTask(params);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"                    isTaskListChanged \u003d true;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"                case \"todo\":","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"                    TaskList.addTodo(params);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"                    isTaskListChanged \u003d true;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"                case \"event\":","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"                    TaskList.addEvent(params);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"                    isTaskListChanged \u003d true;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"                case \"deadline\":","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"                    TaskList.addDeadline(params);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"                    isTaskListChanged \u003d true;","lastModifiedDate":"2025-09-25T20:59:23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BestBearrr"},"content":"                    break;","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BestBearrr"},"content":"                default:","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BestBearrr"},"content":"                    Ui.printErrorDescription(\"Invalid Command\");","lastModifiedDate":"2025-09-25T19:56:47","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BestBearrr"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BestBearrr"},"content":"            Ui.printErrorDescription(\"Index must be an integer.\");","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BestBearrr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BestBearrr"},"content":"            Ui.printErrorDescription(\"Invalid Index\");","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false}],"authorContributionMap":{"BestBearrr":103}},{"path":"src/main/java/paddington/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.storage;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import paddington.task.*;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"import paddington.ui.PaddingtonException;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"import java.io.File;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":" * Handles the saving and loading of task data to and from a file.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":" * The {@link Storage} class provides methods for initialising, loading and saving tasks to a persistent file system.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":" * The tasks are stored in a file named {@code PaddingtonData.txt}.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"public class Storage {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/PaddingtonData.txt\";","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"     * Reads a task from a saved string representation.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"     * The line is parsed based on the task type (Todo, Deadline, Event).","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"     * @param line the saved string representation of a task","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"     * @return the corresponding task object","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"     * @throws PaddingtonException if the task format is invalid","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"    private static Task readFromSave(String line) throws PaddingtonException {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"        char taskType \u003d line.charAt(0);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"        return switch (taskType) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"            case \u0027T\u0027 -\u003e Todo.formatFromSave(line);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"            case \u0027D\u0027 -\u003e Deadline.formatFromSave(line);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"            case \u0027E\u0027 -\u003e Event.formatFromSave(line);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"            default -\u003e throw new PaddingtonException(\"Invalid task format.\");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"        };","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"     * Initialises the storage by creating the necessary file and directories if they do not exist.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"     * Creates save file if an existing one is not found.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"     * @throws IOException if an I/O error occurs while creating directories or the file","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"    public static void init() throws IOException {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"        File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"        // Found save file.","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"        if (file.exists()) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"            System.out.println(\"Log: Found save file.\");","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"            return;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"        // Else, create save file.","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"        File parentDir \u003d file.getParentFile();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"        if (parentDir.mkdirs()) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"            System.out.println(\"Log: Created directory at \" + parentDir);","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"            System.out.println(\"Log: Created new save file at \" + file.getPath());","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"     * Loads the saved tasks from the storage file and adds them to the task list.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"     * Each line in the file is parsed to create a task and add it to the task list.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"     * @throws PaddingtonException if there is an error while loading the tasks","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"    public static void load() throws PaddingtonException {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"        File file \u003d new File(DATA_FILE_PATH);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"        try {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"                Task task \u003d readFromSave(line);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"                TaskList.addTaskSilently(task);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"            throw new PaddingtonException(\"Error loading saved data file.\");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"     * Saves the current list of tasks to the storage file.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"     * Each task is converted to its string format and written to the file.","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"     * @throws PaddingtonException if there is an error while saving the tasks","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:39:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BestBearrr"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) throws PaddingtonException {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BestBearrr"},"content":"        FileWriter writer \u003d null;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BestBearrr"},"content":"        try {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BestBearrr"},"content":"            writer \u003d new FileWriter(DATA_FILE_PATH);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BestBearrr"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BestBearrr"},"content":"                writer.write(task.formatToSave() + \"\\n\");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BestBearrr"},"content":"            }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BestBearrr"},"content":"            writer.close();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BestBearrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BestBearrr"},"content":"            throw new PaddingtonException(\"Error saving file. \" + e);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false}],"authorContributionMap":{"BestBearrr":106}},{"path":"src/main/java/paddington/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.task;","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":" * Represents a Deadline task in the Paddington application.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":" * A Deadline task has a description, a status (done or not done), and a deadline date.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":" * Inherits from the abstract {@link Task} class.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"    protected String by;","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new Deadline task with the given description and deadline date.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"     * @param description the description of the Deadline task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"     * @param by the deadline date (when the task is due)","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"        super(description);","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"        setBy(by);","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new Deadline task with the given description, status, and deadline date.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"     * @param description the description of the Deadline task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"     * @param isDone the status of the task (true if done, false if not)","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"     * @param by the deadline date (when the task is due)","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"        super(description, isDone);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"        setBy(by);","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"     * Sets the deadline date for the task.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     * @param by the deadline date (when the task is due)","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"    private void setBy(String by) {","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"     * Returns a string representation of the Deadline task, including its status, description, and deadline.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"     * @return a string representation of the Deadline task with type, status, description and deadline","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"    public String toString() {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"     * Formats the Deadline task into a string suitable for saving to storage.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"     * Example:","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"     * D | 0 | Finish Homework | Monday 4pm","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"     * @return a string representation of the Deadline task with type, status, description, and deadline for saving","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"    public String formatToSave() {","lastModifiedDate":"2025-09-24T23:52:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"        return \"D\" + super.formatToSave() + DELIMITER + by;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"     * Creates a Deadline task from a saved string representation.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"     * The string is split into segments to extract the description, status, and deadline.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"     * Example:","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"     * D | Status | Description | Deadline","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"     * @param saveString the string representation of the Deadline task in storage","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"     * @return a Deadline task object created from the saved string","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"    public static Deadline formatFromSave(String saveString) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"        String[] segments \u003d saveString.split(\" \\\\| \");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"        boolean isDone \u003d segments[1].trim().equals(\"1\");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"        String description \u003d segments[2].trim();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"        String by \u003d segments[3].trim();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"        return new Deadline(description, isDone, by);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false}],"authorContributionMap":{"BestBearrr":82}},{"path":"src/main/java/paddington/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.task;","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":" * Represents an Event task in the Paddington application.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":" * An Event task has a description, a status (done or not done), and a time range (from and to).","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":" * Inherits from the abstract {@link Task} class.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"    protected String from;","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"    protected String to;","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new Event task with the given description, start time, and end time.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"     * @param description the description of the Event task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"     * @param from the start time of the event","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"     * @param to the end time of the event","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"        super(description);","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"        setFrom(from);","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"        setTo(to);","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new Event task with the given description, status, start time, and end time.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"     * @param description the description of the Event task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"     * @param isDone the status of the task (true if done, false if not)","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"     * @param from the start time of the event","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"     * @param to the end time of the event","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"        super(description, isDone);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"        setFrom(from);","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"        setTo(to);","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"     * Sets the start time for the event.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"     * @param from the start time of the event","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"    private void setFrom(String from) {","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"     * Sets the end time for the event.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"     * @param to the end time of the event","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"    private void setTo(String to) {","lastModifiedDate":"2025-09-25T19:24:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"     * Returns a string representation of the Event task, including its status, description, and time range.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"     * @return a string representation of the Event task with type, status, description, and time range","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"    public String toString() {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"     * Formats the Event task into a string suitable for saving to storage.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"     * Example:","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"     * E | 0 | Conference | Monday 2-4pm","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"     * @return a string representation of the Event task with type, status, description, and time range for saving","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"    public String formatToSave() {","lastModifiedDate":"2025-09-24T23:52:10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"        return \"E\" + super.formatToSave() + DELIMITER + from + \"-\" + to;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"     * Creates an Event task from a saved string representation.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"     * The string is split into segments to extract the description, status, and time range (from-to).","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"     * Example:","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"     * E | Status | Description | From-To","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"     * @param saveString the string representation of the Event task in storage","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"     * @return an Event task object created from the saved string","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"    public static Event formatFromSave(String saveString) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"        String[] segments \u003d saveString.split(\" \\\\| \");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"        boolean isDone \u003d segments[1].trim().equals(\"1\");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"        String description \u003d segments[2].trim();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BestBearrr"},"content":"        String[] timings \u003d segments[3].trim().split(\"-\");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BestBearrr"},"content":"        String from \u003d timings[0];","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BestBearrr"},"content":"        String to \u003d timings[1];","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BestBearrr"},"content":"        return new Event(description, isDone, from, to);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false}],"authorContributionMap":{"BestBearrr":98}},{"path":"src/main/java/paddington/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.task;","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":" * Represents an abstract task in the Paddington application.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":" * This class serves as the base class for different types of tasks: Todo, Deadline, Event.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":" * Contains the task\u0027s description and status.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"public abstract class Task {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"    protected final String DELIMITER \u003d \" | \";","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"    protected String description;","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new Task with the given description.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new Task with the given description and status.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"     * @param description the description of the task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"     * @param isDone the status of the task (true if done, false if not)","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     * @return the task\u0027s description","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"    public String getDescription() {","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"        return this.description;","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     * \"X\" indicates the task is done, a space indicates it\u0027s not done.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"     * @return the status icon of the task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"     * Marks the task as done.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-01T19:20:03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T13:07:24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"     * @return a string representing the task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"    public String toString() {","lastModifiedDate":"2025-09-14T13:07:24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2025-09-14T13:07:24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T13:07:24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"     * Formats the task to a string for saving to storage.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"     * @return a string representation of the task for saving","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"    public String formatToSave() {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"        return DELIMITER + (isDone ? \"1\" : \"0\") + DELIMITER + description;","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"    };","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-01T19:14:29","isFullCredit":false}],"authorContributionMap":{"BestBearrr":85}},{"path":"src/main/java/paddington/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.task;","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"import paddington.ui.PaddingtonException;","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"import paddington.ui.Ui;","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":" * Represents a list of tasks in the Paddington application.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":" * The {@link TaskList} class is responsible for managing the collection of tasks, including","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":" * adding, deleting, marking, and unmarking tasks, as well as listing and searching tasks.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"public class TaskList {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"     * Returns the list of all tasks.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"     * @return the list of tasks","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"        return tasks;","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"     * Returns the total number of tasks in the list.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"     * @return the task count","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     * @param index the index of the task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     * @return the task at the specified index","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"    public static Task getTask(int index) {","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     * Adds a task to the list without printing a message.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"     * Used at initialisation load tasks from storage.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"     * @param task the task to add","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"    public static void addTaskSilently(Task task) {","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"     * Adds a task to the list and prints a confirmation message.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"     * @param task the task to add","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"        Ui.printAddTask(task.toString(), getTaskCount());","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"     * Deletes a task from the list based on the given index.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"     * @param input the index of the task to delete","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"    public static void deleteTask(String input) {","lastModifiedDate":"2025-09-25T16:37:34","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"        int taskIndex \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2025-09-25T16:37:34","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"        String taskString \u003d getTask(taskIndex).toString();","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2025-09-25T16:37:34","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"        Ui.printDeleteTask(taskString, getTaskCount());","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:37:34","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:37:34","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"     * Lists all the tasks in the list.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"    public static void listAllTasks() {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"        // Display all saved tasks","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"            System.out.println(\"No saved tasks.\");","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"            return;","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"            System.out.print(\"  \" + (i + 1) + \".\");","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"            System.out.println(getTask(i).toString());","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BestBearrr"},"content":"     * Searches for tasks containing the given input in their description.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BestBearrr"},"content":"     * @param input the string to search for in task descriptions","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BestBearrr"},"content":"    public static void findTask(String input) {","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BestBearrr"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BestBearrr"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(input.toLowerCase()))","lastModifiedDate":"2025-10-05T18:19:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BestBearrr"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BestBearrr"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BestBearrr"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BestBearrr"},"content":"            return;","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BestBearrr"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BestBearrr"},"content":"            System.out.print(\"  \" + (i + 1) + \".\");","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BestBearrr"},"content":"            System.out.println(matchingTasks.get(i).toString());","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T20:39:19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BestBearrr"},"content":"     * Marks a task as done based on the given index.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BestBearrr"},"content":"     * @param input the index of the task to mark as done","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BestBearrr"},"content":"    public static void markTask(String input) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BestBearrr"},"content":"        int taskIndex \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BestBearrr"},"content":"        Task task \u003d getTask(taskIndex);","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BestBearrr"},"content":"        task.markAsDone();","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BestBearrr"},"content":"        Ui.printMarkTask(task.toString());","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BestBearrr"},"content":"     * Unmarks a task as done based on the given index.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BestBearrr"},"content":"     * @param input the index of the task to unmark","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BestBearrr"},"content":"    public static void unmarkTask(String input) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"BestBearrr"},"content":"        int taskIndex \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"BestBearrr"},"content":"        Task task \u003d getTask(taskIndex);","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"BestBearrr"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"BestBearrr"},"content":"        Ui.printUnmarkTask(task.toString());","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"BestBearrr"},"content":"     * Adds a Todo task to the list.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"BestBearrr"},"content":"     * @param input the description of the Todo task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"BestBearrr"},"content":"     * @throws PaddingtonException if the input is empty","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"BestBearrr"},"content":"    public static void addTodo(String input) throws PaddingtonException {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"BestBearrr"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"BestBearrr"},"content":"            throw PaddingtonException.invalidTodo();","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"BestBearrr"},"content":"        Todo todo \u003d new Todo(input);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"BestBearrr"},"content":"        addTask(todo);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"BestBearrr"},"content":"     * Adds an Event task to the list.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"BestBearrr"},"content":"     * @param input the description of the Event task with the start and end times","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"BestBearrr"},"content":"     * @throws PaddingtonException if the input is invalid or missing required parts","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"BestBearrr"},"content":"    public static void addEvent(String input) throws PaddingtonException {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"BestBearrr"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"BestBearrr"},"content":"            throw PaddingtonException.invalidEvent();","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"BestBearrr"},"content":"        String[] processedInput \u003d input.split(\" /from \", 2);","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"BestBearrr"},"content":"        if (processedInput.length !\u003d 2) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"BestBearrr"},"content":"            throw new PaddingtonException(\"Event task should include start and end time!\");","lastModifiedDate":"2025-09-25T19:25:47","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"BestBearrr"},"content":"        String[] timings \u003d processedInput[1].split(\" /to \", 2);","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"BestBearrr"},"content":"        if (timings.length !\u003d 2) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"BestBearrr"},"content":"            throw new PaddingtonException(\"Event task should include end time!\");","lastModifiedDate":"2025-09-25T19:25:47","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"BestBearrr"},"content":"        String description \u003d processedInput[0];","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"BestBearrr"},"content":"        String from \u003d timings[0];","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"BestBearrr"},"content":"        String to \u003d timings[1];","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"BestBearrr"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"BestBearrr"},"content":"        addTask(event);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"BestBearrr"},"content":"     * Adds a Deadline task to the list.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"BestBearrr"},"content":"     * @param input the description of the Deadline task with the due date","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"BestBearrr"},"content":"     * @throws PaddingtonException if the input is invalid or missing required parts","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"BestBearrr"},"content":"    public static void addDeadline(String input) throws PaddingtonException {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"BestBearrr"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"BestBearrr"},"content":"            throw PaddingtonException.invalidDeadline();","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"BestBearrr"},"content":"        String[] processedInput \u003d input.split(\" /by \", 2);","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"BestBearrr"},"content":"        if (processedInput.length !\u003d 2) {","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"BestBearrr"},"content":"            throw new PaddingtonException(\"Deadline task should include due date!\");","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"BestBearrr"},"content":"        }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"BestBearrr"},"content":"        String description \u003d processedInput[0];","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"BestBearrr"},"content":"        String by \u003d processedInput[1];","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"BestBearrr"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"BestBearrr"},"content":"        addTask(deadline);","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false}],"authorContributionMap":{"BestBearrr":206}},{"path":"src/main/java/paddington/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.task;","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":" * Represents a Todo task in the Paddington application.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":" * A Todo task has a description and a status (done or not done).","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":" * Inherits from the abstract {@link Task} class.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"     * The task is initially marked as not done.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"     * @param description the description of the Todo task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"        super(description);","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new Todo task with the given description and status.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"     * @param description the description of the Todo task","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"     * @param isDone the status of the task (true if done, false if not)","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"        super(description, isDone);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"     * Returns a string representation of the Todo task, including its status and description.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"     * @return a string representation of the Todo task with type, status and description.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"    public String toString() {","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"     * Formats the Todo task into a string suitable for saving to storage.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"     * Example:","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"     * T | 0 | Study","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"     * @return a string representation of the Todo task with type, status and description for saving.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"    @Override","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"    public String formatToSave() {","lastModifiedDate":"2025-09-24T23:52:10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"        return \"T\" + super.formatToSave();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"     * Creates a Todo task from a saved string representation.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"     * The string is split into segments to extract the description and status.","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"     * Example:","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"     * T | Status | Description","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"     * @param saveString the string representation of the Todo task in storage","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"     * @return a Todo task object created from the saved string","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:37:10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"    public static Todo formatFromSave(String saveString) {","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"        String[] segments \u003d saveString.split(\" \\\\| \");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"        boolean isDone \u003d segments[1].trim().equals(\"1\");","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"        String description \u003d segments[2].trim();","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2025-09-25T16:18:27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T23:49:35","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-14T13:08:44","isFullCredit":false}],"authorContributionMap":{"BestBearrr":67}},{"path":"src/main/java/paddington/ui/PaddingtonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.ui;","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":" * Custom exception class for handling errors in the Paddington program.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":" * Provides specific exception types for various command and task-related errors.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"public class PaddingtonException extends Exception {","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"     * Constructs a new PaddingtonException with the specified detail message.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"     * @param s the detail message","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"    public PaddingtonException(String s) {","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"        super(s);","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"     * Returns an exception for an invalid command.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"     * @return a PaddingtonException with an \"Invalid command\" message","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"    public static PaddingtonException invalidCommand() {","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"        return new PaddingtonException(\"Invalid command. Try again.\");","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"     * Returns an exception for a missing description in a Todo task.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"     * @return a PaddingtonException with a \"Missing description of Todo task!\" message","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"    public static PaddingtonException invalidTodo() {","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"        return new PaddingtonException(\"Missing description of Todo task!\");","lastModifiedDate":"2025-09-25T19:27:34","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T17:56:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T17:56:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"     * Returns an exception for a missing description in an Event task.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"     * @return a PaddingtonException with a \"Missing description of Event task!\" message","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"    public static PaddingtonException invalidEvent() {","lastModifiedDate":"2025-09-24T17:56:21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"        return new PaddingtonException(\"Missing description of Event task!\");","lastModifiedDate":"2025-09-25T19:27:34","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-24T17:56:21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-24T17:56:21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"     * Returns an exception for a missing description in a Deadline task.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"     * @return a PaddingtonException with a \"Missing description of Deadline task!\" message","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"    public static PaddingtonException invalidDeadline() {","lastModifiedDate":"2025-09-24T17:56:21","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"        return new PaddingtonException(\"Missing description of Deadline task!\");","lastModifiedDate":"2025-09-25T19:27:34","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-14T14:54:55","isFullCredit":false}],"authorContributionMap":{"BestBearrr":53}},{"path":"src/main/java/paddington/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"package paddington.ui;","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"/**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":" * The Ui Class provides user interface methods for the Paddington chatbot.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":" * Handles printing messages such as welcome, error, task operations and goodbye.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":" */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"public class Ui {","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"    static final String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"BestBearrr"},"content":"     * Prints a horizontal line to the console.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"BestBearrr"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"BestBearrr"},"content":"        System.out.print(line);","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"     * Prints a welcome message and the Paddington logo to the console.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"BestBearrr"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2025-10-05T14:58:17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"BestBearrr"},"content":"        final String logo \u003d \"                   _\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"BestBearrr"},"content":"                \"            .--,-\\\"\\\" \\\"\\\"-.\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"BestBearrr"},"content":"                \"           (            )\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"BestBearrr"},"content":"                \"            j-  __.    |\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"BestBearrr"},"content":"                \"            |  \u0027     -\u0027|\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"BestBearrr"},"content":"                \"            |`--._____,+-.\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"BestBearrr"},"content":"                \"          .\u0027;`--.___.\u0027    `.\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"BestBearrr"},"content":"                \"        .\u0027         /    _  |\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"BestBearrr"},"content":"                \"       /        ,-\u0027 _.-\u0027o;__\\\\\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"BestBearrr"},"content":"                \"      (           .\u0027 o.-\u0027  \\\\)`.\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"BestBearrr"},"content":"                \"       `j--..___.\u0027   \u0027     /   )\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"BestBearrr"},"content":"                \"      (/   _    `-._    `-/`--\u0027 ,----.\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"BestBearrr"},"content":"                \"      (.\u0027   `--. `. `-._.\u0027`._,-\u003co \u003d\u003d\u003d|\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"BestBearrr"},"content":"                \"     .\u0027         \\\\  `.  /\\\\`./`.  `----\u0027\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"BestBearrr"},"content":"                \"   .\u0027            |   `\u0027 _\\\\,() \\\\\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"BestBearrr"},"content":"                \" .\u0027          ;_)      ()___/   \\\\\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"BestBearrr"},"content":"                \"/   `._____.\u0027             |     \\\\\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"BestBearrr"},"content":"                \"\\\\       /    \u003d\u003d\u003d\u003d\u003d.       \\\\  _   `.\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"BestBearrr"},"content":"                \" `.____/  /        \\\\     __\\\\/()    \\\\\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"BestBearrr"},"content":"                \"     .\u0027  (          )  ()____/     .\u0027\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"BestBearrr"},"content":"                \"    /     `---    -\u0027        |\\\\   .\u0027\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"BestBearrr"},"content":"                \"    `---.___                | `-\u0027\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"BestBearrr"},"content":"                \"          .-`--.________.---\u0027`.\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"BestBearrr"},"content":"                \"       .-\u0027              /      \\\\\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"BestBearrr"},"content":"                \"      /               .\u0027        \\\\\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"BestBearrr"},"content":"                \"     /            _.-\u0027\\\\          |\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"BestBearrr"},"content":"                \"     |  `-.____.-\u0027     `.        ; .-\\\"\\\"-.\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"BestBearrr"},"content":"                \"     |      |            `.      ,\u0027     |\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"BestBearrr"},"content":"                \"     \\\\      |              \\\\            /\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"BestBearrr"},"content":"                \"      `.___.\u0027               `.         /\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"BestBearrr"},"content":"                \"                              \\\\      .\u0027\\n\" +","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"BestBearrr"},"content":"                \"                               `.__.\u0027\\n\";","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"BestBearrr"},"content":"        printHorizontalLine();","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"BestBearrr"},"content":"        System.out.print(logo);","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Hello! I\u0027m Paddington.\");","lastModifiedDate":"2025-10-05T14:37:54","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"BestBearrr"},"content":"        printHorizontalLine();","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"BestBearrr"},"content":"     * Prints an error description message to the console.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"BestBearrr"},"content":"     * @param errorDescription the error message to display","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"BestBearrr"},"content":"    public static void printErrorDescription(String errorDescription) {","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"(!) Error: \" + errorDescription);","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"BestBearrr"},"content":"     * Prints a goodbye message when the program terminates.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"BestBearrr"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2025-09-25T19:52:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Mind the gap between the train and the platform.\");","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"This is Paddington, where this train terminates. All change.\");","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Here\u0027s some marmalade and see you soon!\");","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"BestBearrr"},"content":"     * Prints a task description to the console.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"BestBearrr"},"content":"     * @param taskString the task to display","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"BestBearrr"},"content":"    public static void printTask(String taskString) {","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"  \" + taskString);","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"BestBearrr"},"content":"     * Prints a message when a task is added to the list.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"BestBearrr"},"content":"     * @param taskString the task that was added","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"BestBearrr"},"content":"     * @param taskCount the current number of tasks in the list","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"BestBearrr"},"content":"    public static void printAddTask(String taskString, int taskCount) {","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"BestBearrr"},"content":"        printTask(taskString);","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"BestBearrr"},"content":"     * Prints a message when a task is deleted from the list.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"BestBearrr"},"content":"     * @param taskString the task that was removed","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"BestBearrr"},"content":"     * @param taskCount the current number of tasks in the list","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"BestBearrr"},"content":"    public static void printDeleteTask(String taskString, int taskCount) {","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"BestBearrr"},"content":"        printTask(taskString);","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"BestBearrr"},"content":"     * Prints a message when a task is marked as done.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"BestBearrr"},"content":"     * @param taskString the task that was marked as done","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"BestBearrr"},"content":"    public static void printMarkTask(String taskString) {","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"BestBearrr"},"content":"        printTask(taskString);","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"BestBearrr"},"content":"    /**","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"BestBearrr"},"content":"     * Prints a message when a task is marked as not done.","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"BestBearrr"},"content":"     *","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"BestBearrr"},"content":"     * @param taskString the task that was unmarked","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"BestBearrr"},"content":"     */","lastModifiedDate":"2025-10-05T15:19:54","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"BestBearrr"},"content":"    public static void printUnmarkTask(String taskString) {","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"BestBearrr"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet\");","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"BestBearrr"},"content":"        printTask(taskString);","lastModifiedDate":"2025-09-25T19:20:18","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"BestBearrr"},"content":"    }","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"BestBearrr"},"content":"","lastModifiedDate":"2025-09-25T19:07:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"BestBearrr"},"content":"}","lastModifiedDate":"2025-09-25T17:19:39","isFullCredit":false}],"authorContributionMap":{"BestBearrr":133}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BestBearrr"},"content":"todo eat marmalade","lastModifiedDate":"2025-09-14T14:05:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"BestBearrr"},"content":"event visit paddington gift store /from Wed 8pm /to 9pm","lastModifiedDate":"2025-09-14T14:05:18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"BestBearrr"},"content":"deadline take piccadilly line to heathrow airport /by Wed 11pm","lastModifiedDate":"2025-09-14T14:05:18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"BestBearrr"},"content":"mark 1","lastModifiedDate":"2025-09-14T14:05:18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"BestBearrr"},"content":"list","lastModifiedDate":"2025-09-14T14:05:18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"BestBearrr"},"content":"mark 2","lastModifiedDate":"2025-09-14T14:05:18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"BestBearrr"},"content":"list","lastModifiedDate":"2025-09-14T14:05:18","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"BestBearrr"},"content":"bye","lastModifiedDate":"2025-09-14T14:05:18","isFullCredit":false}],"authorContributionMap":{"BestBearrr":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"BestBearrr"},"content":"java -classpath ..\\bin paddington.ui.Paddington \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-24T21:41:56","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"BestBearrr":1,"-":20}}]
