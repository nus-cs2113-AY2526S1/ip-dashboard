[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"This is a project template for a greenfield Java project. It\u0027s created and concepted after the Java mascot _Duke_ but this iteration is called _Bruce_. Given below are instructions on how to use it.","lastModifiedDate":"2025-09-17T00:40:35","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":"1. After that, locate the `src/main/java/Bruce.java` file, right-click it, and choose `Run Bruce.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-09-17T00:40:35","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":"   ██████  ██████  ██    ██  ██████ ███████","lastModifiedDate":"2025-09-17T00:40:35","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":"   ██   ██ ██   ██ ██    ██ ██      ██","lastModifiedDate":"2025-09-17T00:40:35","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":"   ██████  ██████  ██    ██ ██      █████","lastModifiedDate":"2025-09-17T00:40:35","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":"   ██   ██ ██   ██ ██    ██ ██      ██","lastModifiedDate":"2025-09-17T00:40:35","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChangIkJoong"},"content":"   ██████  ██   ██  ██████   ██████ ███████","lastModifiedDate":"2025-09-17T00:40:35","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":7,"-":18}},{"path":"src/main/java/Bruce.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"import Bruce.Controller;","lastModifiedDate":"2025-09-17T00:28:27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"import Model.Model;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"import UI.View;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"/**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":" * Entry point for the Bruce application using an MVC architecture.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":" * This class starts the application by obtaining the {@link Model} singleton wise,","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":" * creating the {@link View}, and integrating them together via the {@link Controller},","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":" * starting the program loop.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":" *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":" * @author changikjoong","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":" * @since 1.0","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChangIkJoong"},"content":" * Disclaimer: GPT was partly used to assist with creating the documentation.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":" */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":"public class Bruce {","lastModifiedDate":"2025-08-20T00:25:26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-17T00:28:27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":"        Model model \u003d Model.getInstance();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":"        View view \u003d new View();","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChangIkJoong"},"content":"        Controller controller \u003d new Controller(model, view);","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChangIkJoong"},"content":"        controller.runProgram();","lastModifiedDate":"2025-09-01T18:21:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-08-20T00:25:26","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":25}},{"path":"src/main/java/Bruce/Controller.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Bruce;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"import Exceptions.BruceException;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"import Exceptions.EmptyDescriptionException;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"import Exceptions.UnknownInputException;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-17T00:28:27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Deadline;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Event;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":"import Model.dataHandler;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":"import Model.Model;","lastModifiedDate":"2025-09-17T00:28:27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Task;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Todo;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChangIkJoong"},"content":"import UI.View;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":"/**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":" * Controller for the Bruce task manager (MVC).","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":" * Reads user input, interprets commands, applies changes to the {@link Model},","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":" * and delegates rendering to the {@link View}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChangIkJoong"},"content":" * Tasks goes via {@link dataHandler} after each handled input.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChangIkJoong"},"content":" * Parse/validation errors are mapped.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChangIkJoong"},"content":" */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChangIkJoong"},"content":"public class Controller {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChangIkJoong"},"content":"    private final Model model;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChangIkJoong"},"content":"    private final View view;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChangIkJoong"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChangIkJoong"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChangIkJoong"},"content":"     * Creates a controller that wires a model to a view.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChangIkJoong"},"content":"     * @param model the application model","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChangIkJoong"},"content":"     * @param view  the console view","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChangIkJoong"},"content":"    public Controller(Model model, View view) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChangIkJoong"},"content":"        this.model \u003d model;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChangIkJoong"},"content":"        this.view \u003d view;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChangIkJoong"},"content":"     * Starts the controller loop: reads commands, handles them, and executes after each step.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChangIkJoong"},"content":"     * On each iteration, input is processed through {@link #handleInput(String)}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChangIkJoong"},"content":"     * Tasks are saved via {@link dataHandler#saveTasks(java.util.ArrayList)} in a {@code finally} block","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChangIkJoong"},"content":"     * if it manages to pass all the error handlings safe guards.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChangIkJoong"},"content":"    public void runProgram() {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChangIkJoong"},"content":"        View.greetUser();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChangIkJoong"},"content":"        while (isRunning) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChangIkJoong"},"content":"            String inputPrompt \u003d scanner.nextLine();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChangIkJoong"},"content":"            try {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChangIkJoong"},"content":"                handleInput(inputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChangIkJoong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChangIkJoong"},"content":"                view.viewError(\"Task number must be a whole number. Example: \\\"mark 3\\\"\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChangIkJoong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChangIkJoong"},"content":"                view.viewError(\"Missing task number. Example: \\\"mark 3\\\"\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChangIkJoong"},"content":"            } catch (BruceException e) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChangIkJoong"},"content":"                view.viewError(e.getMessage());","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChangIkJoong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChangIkJoong"},"content":"                view.viewError(\"Unexpected error: \" + e.getMessage());","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChangIkJoong"},"content":"            } finally {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChangIkJoong"},"content":"                dataHandler.getInstance().saveTasks(Model.getInstance().getTasks());","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChangIkJoong"},"content":"                View.printLine();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChangIkJoong"},"content":"            }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChangIkJoong"},"content":"     * Saves tasks, prints exit message, and stops the main loop.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChangIkJoong"},"content":"    private void exitProgram() {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChangIkJoong"},"content":"        dataHandler.getInstance().saveTasks(model.getTasks());","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChangIkJoong"},"content":"        View.viewExit();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChangIkJoong"},"content":"        isRunning \u003d false;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChangIkJoong"},"content":"     * Checks and validates the indexing of the input prompt to ensure index","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChangIkJoong"},"content":"     * exists within bounds. Helper function for marking tasks or unmarking.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt full user input containing a command and a task number (e.g., {@code \"mark 3\"})","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChangIkJoong"},"content":"     * @return zero-based index into the model","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws IndexOutOfBoundsException if the index token is missing or outside valid bounds","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws NumberFormatException     if the index token is not an integer","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChangIkJoong"},"content":"    private int checkIndexing(String inputPrompt) throws IndexOutOfBoundsException {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChangIkJoong"},"content":"        String[] parts \u003d inputPrompt.trim().split(\"\\\\s+\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChangIkJoong"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChangIkJoong"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c model.getTasks().size()) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChangIkJoong"},"content":"            return index;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChangIkJoong"},"content":"        } else {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChangIkJoong"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChangIkJoong"},"content":"     * Marks a task as done by processing the index from {@code inputPrompt}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChangIkJoong"},"content":"     * If the task was already complete, throws a {@link BruceException}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChangIkJoong"},"content":"     * to prompt the user to pick another task.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt command with index, e.g., {@code \"mark 2\"}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws BruceException if the task is already completed or input is invalid","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChangIkJoong"},"content":"    public void markTaskDone(String inputPrompt) throws BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChangIkJoong"},"content":"        int index \u003d checkIndexing(inputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChangIkJoong"},"content":"        Task task \u003d model.getTasks().get(index);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChangIkJoong"},"content":"        boolean previouslyCompleted \u003d task.isCompleted();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChangIkJoong"},"content":"        boolean isCompleted \u003d model.markDone(index);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChangIkJoong"},"content":"        if (previouslyCompleted !\u003d isCompleted) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChangIkJoong"},"content":"            view.viewTaskMarked(model.getTask(index));","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChangIkJoong"},"content":"        } else {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChangIkJoong"},"content":"            throw new BruceException(\"This task has been already completed. \" +","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChangIkJoong"},"content":"                    \"Please select an uncompleted task.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChangIkJoong"},"content":"     * Unmarks a task (sets to not done) by parsing the index from {@code inputPrompt}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChangIkJoong"},"content":"     * If the task was not completed, throws a {@link BruceException}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt command with index, e.g., {@code \"unmark 5\"}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws BruceException if the task was not previously completed or input is invalid","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChangIkJoong"},"content":"    public void unmarkTaskDone(String inputPrompt) throws BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChangIkJoong"},"content":"        int index \u003d checkIndexing(inputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChangIkJoong"},"content":"        Task task \u003d model.getTasks().get(index);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChangIkJoong"},"content":"        boolean previouslyCompleted \u003d task.isCompleted();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChangIkJoong"},"content":"        boolean isCompleted \u003d model.unmarkDone(index);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChangIkJoong"},"content":"        if (previouslyCompleted \u003d\u003d isCompleted) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChangIkJoong"},"content":"            view.viewTaskUnmarked(model.getTask(index));","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChangIkJoong"},"content":"        } else {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChangIkJoong"},"content":"            throw new BruceException(\"This task has not yet been completed. \" +","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChangIkJoong"},"content":"                    \"Please select an uncompleted task.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChangIkJoong"},"content":"     * Adds a ToDoTask based on the user\u0027s input.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt raw user input","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws BruceException if description is missing/empty","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChangIkJoong"},"content":"    private void addTodoTask(String inputPrompt) throws BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChangIkJoong"},"content":"        String revisedInputPrompt \u003d inputPrompt.replaceFirst(\"(?i)todo\", \"\").trim();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChangIkJoong"},"content":"        if (revisedInputPrompt.isEmpty()) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChangIkJoong"},"content":"            throw new EmptyDescriptionException(\"Description cannot be empty. \" +","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChangIkJoong"},"content":"                    \"Type \\\"help\\\" for commands.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChangIkJoong"},"content":"        Task newInput \u003d new Todo(revisedInputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChangIkJoong"},"content":"        model.addTask(newInput);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChangIkJoong"},"content":"        view.viewTaskAdded(newInput, model.getTaskCount());","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChangIkJoong"},"content":"     * Adds a {@link Deadline} task from input of the form:","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChangIkJoong"},"content":"     * {@code \"deadline \u003cdesc\u003e /by \u003cdate\u003e\"}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt raw user input beginning with {@code \"deadline\"}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws BruceException if description or date is missing/empty","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChangIkJoong"},"content":"    private void addDeadlineTask(String inputPrompt) throws BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChangIkJoong"},"content":"        String[] parts \u003d inputPrompt.trim().split(\" /by \");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChangIkJoong"},"content":"        parts[0] \u003d parts[0].replaceFirst(\"(?i)deadline\", \"\").trim();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChangIkJoong"},"content":"        boolean isValid \u003d parts.length !\u003d 2 || parts[0].isEmpty() || parts[1].isEmpty();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChangIkJoong"},"content":"        if (isValid) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChangIkJoong"},"content":"            throw new EmptyDescriptionException(\"Description or deadline date cannot be empty. \" +","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChangIkJoong"},"content":"                    \"Type \\\"help\\\" for commands.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChangIkJoong"},"content":"        } else {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChangIkJoong"},"content":"            Task newInput \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChangIkJoong"},"content":"            model.addTask(newInput);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChangIkJoong"},"content":"            view.viewTaskAdded(newInput, model.getTaskCount());","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChangIkJoong"},"content":"     * Adds an {@link Event} task from input of the form:","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChangIkJoong"},"content":"     * {@code \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\"}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt raw user input beginning with {@code \"event\"}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws BruceException if any of description/start/end is missing/empty","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChangIkJoong"},"content":"    private void addEventTask(String inputPrompt) throws BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChangIkJoong"},"content":"        String[] parts \u003d inputPrompt.trim().split(\" /from | /to \");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChangIkJoong"},"content":"        parts[0] \u003d parts[0].replaceFirst(\"(?i)event\", \"\").trim();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"ChangIkJoong"},"content":"        boolean isValid \u003d parts.length !\u003d 3 || parts[0].isEmpty() || parts[1].isEmpty() || parts[2].isEmpty();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"ChangIkJoong"},"content":"        if (isValid) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"ChangIkJoong"},"content":"            throw new EmptyDescriptionException(\"Description or event to/from date cannot be empty. \" +","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"ChangIkJoong"},"content":"                    \"Type \\\"help\\\" for commands.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"ChangIkJoong"},"content":"        } else {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"ChangIkJoong"},"content":"            Task newInput \u003d new Event(parts[0], parts[1], parts[2]);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"ChangIkJoong"},"content":"            model.addTask(newInput);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"ChangIkJoong"},"content":"            view.viewTaskAdded(newInput, model.getTaskCount());","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"ChangIkJoong"},"content":"     * Deletes a task by index and prints the updated task list.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt command with index, e.g., {@code \"delete 1\"}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws NumberFormatException     if the index token is not an integer","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"ChangIkJoong"},"content":"    private void removeTask(String inputPrompt) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"ChangIkJoong"},"content":"        int index \u003d checkIndexing(inputPrompt);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"ChangIkJoong"},"content":"        Task deletedTask \u003d model.deleteTask(index);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"ChangIkJoong"},"content":"        view.successfullyDeletedTask(deletedTask);","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"ChangIkJoong"},"content":"        view.viewTaskList(model.getTasks());","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"ChangIkJoong"},"content":"     * Finds tasks whose descriptions contain the provided keyword","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"ChangIkJoong"},"content":"     * and displays these via View.","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt command plus keyword","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"ChangIkJoong"},"content":"    private void findTasks(String inputPrompt) {","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"ChangIkJoong"},"content":"        String inputWord \u003d inputPrompt.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"ChangIkJoong"},"content":"        if (inputWord.isEmpty()) {","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"ChangIkJoong"},"content":"            view.viewError(\"Please provide a keyword to search for. Example: \u0027find book\u0027\");","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"ChangIkJoong"},"content":"            return;","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"ChangIkJoong"},"content":"        var matchingTasks \u003d new java.util.ArrayList\u003cTask\u003e();","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"ChangIkJoong"},"content":"        for (Task task : model.getTasks()) {","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"ChangIkJoong"},"content":"            if (task.getTaskDescription().toLowerCase().contains(inputWord.toLowerCase())) {","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"ChangIkJoong"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"ChangIkJoong"},"content":"            }","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"ChangIkJoong"},"content":"        view.viewFoundTasks(matchingTasks);","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:46:23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"ChangIkJoong"},"content":"     * Processes the command word and sends it to the appropriate handler.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputPrompt raw user input","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws BruceException if the command is unknown or a handler reports a domain error","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"ChangIkJoong"},"content":"    private void handleInput(String inputPrompt) throws BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"ChangIkJoong"},"content":"        String command \u003d inputPrompt.trim().split(\" \")[0].toLowerCase();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"ChangIkJoong"},"content":"        switch (command) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"ChangIkJoong"},"content":"        case \"bye.\" -\u003e exitProgram();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"ChangIkJoong"},"content":"        case \"mark\" -\u003e markTaskDone(inputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"ChangIkJoong"},"content":"        case \"unmark\" -\u003e unmarkTaskDone(inputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"ChangIkJoong"},"content":"        case \"deadline\" -\u003e addDeadlineTask(inputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"ChangIkJoong"},"content":"        case \"event\" -\u003e addEventTask(inputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"ChangIkJoong"},"content":"        case \"todo\" -\u003e addTodoTask(inputPrompt);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"ChangIkJoong"},"content":"        case \"delete\" -\u003e removeTask(inputPrompt);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"ChangIkJoong"},"content":"        case \"list\" -\u003e view.viewTaskList(model.getTasks());","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"ChangIkJoong"},"content":"        case \"help\" -\u003e View.showInstructions();","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"ChangIkJoong"},"content":"        case \"find\" -\u003e findTasks(inputPrompt);","lastModifiedDate":"2025-10-03T03:04:40","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"ChangIkJoong"},"content":"        default -\u003e throw new UnknownInputException(command);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":262}},{"path":"src/main/java/Exceptions/BruceException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Exceptions;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"// DukeException.java","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"public class BruceException extends Exception {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"    public BruceException(String message) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"        super(message);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":9}},{"path":"src/main/java/Exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Exceptions;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"public class EmptyDescriptionException extends BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"        super(message);","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":7}},{"path":"src/main/java/Exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Exceptions;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"public class UnknownInputException extends BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"    public UnknownInputException(String inputCommand) {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"        super(\"Input command: \" + inputCommand + \" is invalid. Type \\\"help\\\" for valid input commands.\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":7}},{"path":"src/main/java/Model/CodecConverter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Model;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"import Exceptions.BruceException;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"import Exceptions.UnknownInputException;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-17T00:28:27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Deadline;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Event;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Task;","lastModifiedDate":"2025-09-17T00:28:27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Todo;","lastModifiedDate":"2025-09-17T00:28:27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":"/**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":" * Converts {@link Task} objects to and from a text file format.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChangIkJoong"},"content":" * The on-disk line format is:","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChangIkJoong"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":" *   \u003cli\u003e\u003cstrong\u003eTodo\u003c/strong\u003e: {@code T | \u003ccompleted\u003e | \u003cdescription\u003e}\u003c/li\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":" *   \u003cli\u003e\u003cstrong\u003eDeadline\u003c/strong\u003e: {@code D | \u003ccompleted\u003e | \u003cdescription\u003e | \u003cbyDate\u003e}\u003c/li\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":" *   \u003cli\u003e\u003cstrong\u003eEvent\u003c/strong\u003e: {@code E | \u003ccompleted\u003e | \u003cdescription\u003e | \u003cstart\u003e | \u003cend\u003e}\u003c/li\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChangIkJoong"},"content":" */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChangIkJoong"},"content":"public class CodecConverter {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChangIkJoong"},"content":"     * Encodes {@link Task} to a converted string suitable for text file saving.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the task to encode","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the encoded line","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws BruceException if the task type is unsupported","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChangIkJoong"},"content":"    public static String encodeToFile(Task task) throws BruceException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChangIkJoong"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChangIkJoong"},"content":"            return deadlineCodec((Deadline) task);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChangIkJoong"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChangIkJoong"},"content":"            return eventCodec((Event) task);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChangIkJoong"},"content":"        } else if (task instanceof Todo) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChangIkJoong"},"content":"            return toDoCodec((Todo) task);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChangIkJoong"},"content":"        } else {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChangIkJoong"},"content":"            throw new UnknownInputException(\"Invalid input, please try again.\");","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChangIkJoong"},"content":"     * Encodes a {@link Deadline} task as {@code D | \u003ccompleted\u003e | \u003cdescription\u003e | \u003cbyDate\u003e}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the deadline task","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the encoded string","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChangIkJoong"},"content":"    private static String deadlineCodec(Deadline task) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChangIkJoong"},"content":"        String taskVariant \u003d \"D\";","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChangIkJoong"},"content":"        String completionBoolean \u003d String.valueOf(task.isCompleted());","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChangIkJoong"},"content":"        String taskDescription \u003d task.getTaskDescription();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChangIkJoong"},"content":"        String deadlineDate \u003d String.valueOf(task.getEndDate());","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChangIkJoong"},"content":"        String outputString \u003d taskVariant + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChangIkJoong"},"content":"                completionBoolean + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChangIkJoong"},"content":"                taskDescription + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChangIkJoong"},"content":"                deadlineDate;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChangIkJoong"},"content":"        return outputString;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChangIkJoong"},"content":"     * Encodes an {@link Event} task as","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChangIkJoong"},"content":"     * {@code E | \u003ccompleted\u003e | \u003cdescription\u003e | \u003cstart\u003e | \u003cend\u003e}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the event task","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the encoded string","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChangIkJoong"},"content":"    private static String eventCodec(Event task) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChangIkJoong"},"content":"        String taskVariant \u003d \"E\";","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChangIkJoong"},"content":"        String completionBoolean \u003d String.valueOf(task.isCompleted());","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChangIkJoong"},"content":"        String taskDescription \u003d task.getTaskDescription();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChangIkJoong"},"content":"        String startDate \u003d task.getStartDate();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChangIkJoong"},"content":"        String endDate \u003d task.getEndDate();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChangIkJoong"},"content":"        String outputString \u003d taskVariant + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChangIkJoong"},"content":"                completionBoolean + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChangIkJoong"},"content":"                taskDescription + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChangIkJoong"},"content":"                startDate + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChangIkJoong"},"content":"                endDate;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChangIkJoong"},"content":"        return outputString;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChangIkJoong"},"content":"     * Encodes a to-do task as {@code T | \u003ccompleted\u003e | \u003cdescription\u003e}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the to-do task","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the encoded string","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChangIkJoong"},"content":"    private static String toDoCodec(Todo task) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChangIkJoong"},"content":"        String taskVariant \u003d \"T\";","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChangIkJoong"},"content":"        String completionBoolean \u003d String.valueOf(task.isCompleted());","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChangIkJoong"},"content":"        String taskDescription \u003d task.getTaskDescription();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChangIkJoong"},"content":"        String outputString \u003d taskVariant + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChangIkJoong"},"content":"                completionBoolean + \" | \" +","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChangIkJoong"},"content":"                taskDescription;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChangIkJoong"},"content":"        return outputString;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChangIkJoong"},"content":"     * Decodes a line (inputString) into a {@link Task} that the model can process.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputString the raw line read in","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChangIkJoong"},"content":"     * @return a new {@link Task} reconstructed from the line","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws UnknownInputException if the line is malformed or the variant is unknown","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChangIkJoong"},"content":"    public static Task decodeFromFile(String inputString) throws UnknownInputException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChangIkJoong"},"content":"        String[] dataInput \u003d inputString.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChangIkJoong"},"content":"        if (dataInput.length \u003c 3) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChangIkJoong"},"content":"            throw new UnknownInputException(\"Bad input line: \" + inputString);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChangIkJoong"},"content":"        for (int i \u003d 0; i \u003c dataInput.length; i++) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChangIkJoong"},"content":"            dataInput[i] \u003d dataInput[i].trim();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChangIkJoong"},"content":"        char taskVariant \u003d dataInput[0].charAt(0);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChangIkJoong"},"content":"        boolean isCompleted \u003d \"true\".equals(dataInput[1]);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChangIkJoong"},"content":"        Task newTask \u003d getInputTask(inputString, dataInput, taskVariant);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChangIkJoong"},"content":"        if (isCompleted) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChangIkJoong"},"content":"            newTask.markDone();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChangIkJoong"},"content":"        return newTask;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChangIkJoong"},"content":"     * Creates a {@link Task} from the input tokens and variants.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputString original line","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChangIkJoong"},"content":"     * @param dataInput   tokenized fields","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChangIkJoong"},"content":"     * @param taskVariant variant code ({@code \u0027T\u0027}, {@code \u0027D\u0027}, {@code \u0027E\u0027})","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the constructed task","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws UnknownInputException if the variant code is not recognized","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChangIkJoong"},"content":"    private static Task getInputTask(String inputString, String[] dataInput, char taskVariant) throws UnknownInputException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChangIkJoong"},"content":"        String taskDescription \u003d dataInput[2];","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChangIkJoong"},"content":"        Task newTask \u003d switch (taskVariant) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChangIkJoong"},"content":"            case \u0027T\u0027 -\u003e new Todo(taskDescription);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChangIkJoong"},"content":"            case \u0027D\u0027 -\u003e decodeDeadline(inputString, dataInput, taskDescription);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChangIkJoong"},"content":"            case \u0027E\u0027 -\u003e decodeEvent(inputString, dataInput, taskDescription);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChangIkJoong"},"content":"            default -\u003e throw new UnknownInputException(\"Unknown task variant: \" + taskVariant);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChangIkJoong"},"content":"        };","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChangIkJoong"},"content":"        return newTask;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChangIkJoong"},"content":"     * Validates and constructs an {@link Event} from tokens:","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChangIkJoong"},"content":"     * {@code E | \u003ccompleted\u003e | \u003cdescription\u003e | \u003cstart\u003e | \u003cend\u003e}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputString     original line","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChangIkJoong"},"content":"     * @param dataInput       tokenized fields","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChangIkJoong"},"content":"     * @param taskDescription description field from the input","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChangIkJoong"},"content":"     * @return a new {@link Event}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws UnknownInputException if the token count is not exactly 5 (length of an Event)","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChangIkJoong"},"content":"    private static Event decodeEvent(String inputString, String[] dataInput, String taskDescription) throws UnknownInputException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChangIkJoong"},"content":"        if (dataInput.length !\u003d 5) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChangIkJoong"},"content":"            throw new UnknownInputException(\"Bad input line: \" + inputString);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChangIkJoong"},"content":"        return new Event(taskDescription, dataInput[3], dataInput[4]);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChangIkJoong"},"content":"     * Validates and constructs a {@link Deadline} from tokens:","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChangIkJoong"},"content":"     * {@code D | \u003ccompleted\u003e | \u003cdescription\u003e | \u003cbyDate\u003e}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChangIkJoong"},"content":"     * @param inputString     original line","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChangIkJoong"},"content":"     * @param dataInput       tokenized fields","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChangIkJoong"},"content":"     * @param taskDescription description field from the input","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChangIkJoong"},"content":"     * @return a new {@link Deadline}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws UnknownInputException if the token count is not exactly 4 (length of a Deadline)","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChangIkJoong"},"content":"    private static Deadline decodeDeadline(String inputString, String[] dataInput, String taskDescription) throws UnknownInputException {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChangIkJoong"},"content":"        if (dataInput.length !\u003d 4) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChangIkJoong"},"content":"            throw new UnknownInputException(\"Bad input line: \" + inputString);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChangIkJoong"},"content":"        return new Deadline(taskDescription, dataInput[3]);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":185}},{"path":"src/main/java/Model/Model.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Model;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Task;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"/**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":" * The model for managing {@link Task} items (MVC).","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":" * Provides a simple singleton-backed store with operations:","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":" * add, read, mark/unmark completion, delete, and count. Task indices","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":" * are zero-based internally, while {@code Task.taskId} is maintained","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":" * as in model stored via {@link #updateCounter(int)}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChangIkJoong"},"content":" */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChangIkJoong"},"content":"public class Model {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":"     * The program\u0027s main list for all tasks (in insertion order).","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChangIkJoong"},"content":"     * Initializes the model, then loading tasks from persistence via {@code dataHandler}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChangIkJoong"},"content":"    private static Model INSTANCE \u003d new Model();","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChangIkJoong"},"content":"    private Model() {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChangIkJoong"},"content":"        dataHandler.getInstance();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChangIkJoong"},"content":"        tasks \u003d dataHandler.getInstance().loadTasks();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChangIkJoong"},"content":"     * Returns the singleton instance of the {@code Model}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChangIkJoong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChangIkJoong"},"content":"     * Lazily re-initializes if the instance was cleared (defensive).","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChangIkJoong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the global {@code Model} instance","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChangIkJoong"},"content":"    public static Model getInstance() {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChangIkJoong"},"content":"        if (INSTANCE \u003d\u003d null) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChangIkJoong"},"content":"            INSTANCE \u003d new Model();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChangIkJoong"},"content":"        return INSTANCE;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChangIkJoong"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the task to add.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChangIkJoong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChangIkJoong"},"content":"        tasks.add(task);","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChangIkJoong"},"content":"     * Retrieves the task at a given zero-based index.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChangIkJoong"},"content":"     * @param index the index to fetch from the task list.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the task at {@code index}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChangIkJoong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChangIkJoong"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChangIkJoong"},"content":"     * Returns the instance in model with the list of tasks.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChangIkJoong"},"content":"     * Mutations of the returned list will affect the model directly.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the backing {@link ArrayList} of tasks","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChangIkJoong"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChangIkJoong"},"content":"        return tasks;","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChangIkJoong"},"content":"     * Marks the task at {@code index} as complete, if within range.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChangIkJoong"},"content":"     * @param index zero-based index of the task to mark","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChangIkJoong"},"content":"     * @return {@code true} if the task was succesfully marked, {@code false} if {@code index} is not within range.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChangIkJoong"},"content":"    public boolean markDone(int index) {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChangIkJoong"},"content":"        if (rangeCheck(index)) {","lastModifiedDate":"2025-09-08T17:17:51","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChangIkJoong"},"content":"            tasks.get(index).markDone();","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChangIkJoong"},"content":"            return true;","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChangIkJoong"},"content":"        return false;","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChangIkJoong"},"content":"     * Marks the task at {@code index} as not complete, if within range.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChangIkJoong"},"content":"     * @param index zero-based index of the task to unmark","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChangIkJoong"},"content":"     * @return {@code true} if the task was succesfully unmarked, {@code false} if {@code index} was invalid.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChangIkJoong"},"content":"    public boolean unmarkDone(int index) {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChangIkJoong"},"content":"        if (rangeCheck(index)) {","lastModifiedDate":"2025-09-08T17:17:51","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChangIkJoong"},"content":"            tasks.get(index).unmarkDone();","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChangIkJoong"},"content":"            return true;","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChangIkJoong"},"content":"        return false;","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChangIkJoong"},"content":"     * Returns the number of tasks currently in the model.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChangIkJoong"},"content":"     * @return task count","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChangIkJoong"},"content":"    public int getTaskCount() {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChangIkJoong"},"content":"        return tasks.size();","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChangIkJoong"},"content":"     * Deletes the task at {@code taskIndex} and updates the task IDs afterward.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChangIkJoong"},"content":"     * @param taskIndex zero-based index of the task to remove","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the removed task","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws IndexOutOfBoundsException if {@code taskIndex} is out of range","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChangIkJoong"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChangIkJoong"},"content":"        Task task \u003d tasks.remove(taskIndex);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChangIkJoong"},"content":"        updateCounter(taskIndex);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChangIkJoong"},"content":"        return task;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChangIkJoong"},"content":"     * Reassigns one-based {@code taskId}s after a deletion and decrements the global counter.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChangIkJoong"},"content":"     * After removing the task at {@code taskIndex}, it updates each remaining task\u0027s {@code taskId}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChangIkJoong"},"content":"     * @param taskIndex the index from which to start re-numbering.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChangIkJoong"},"content":"    private void updateCounter(int taskIndex) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChangIkJoong"},"content":"        for (int i \u003d taskIndex; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChangIkJoong"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChangIkJoong"},"content":"            task.setTaskId(i + 1);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChangIkJoong"},"content":"        Task.decrementCounter();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChangIkJoong"},"content":"    private boolean rangeCheck(int index) {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChangIkJoong"},"content":"        return (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size());","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":145}},{"path":"src/main/java/Model/TaskVariants/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Model.TaskVariants;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"    private final String stringDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"    public Deadline(String taskDescription, String inputDate) {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"        super(taskDescription);","lastModifiedDate":"2025-09-08T17:17:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":"        this.stringDate \u003d inputDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-08T17:17:51","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-08T17:17:51","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":"    public String getEndDate() {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":"        return stringDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":14}},{"path":"src/main/java/Model/TaskVariants/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Model.TaskVariants;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"public class Event extends Task {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"    protected String startStringDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"    protected String endStringDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"    public Event(String taskDescription, String inputStartDate, String inputEndDate) {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":"        super(taskDescription);","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":"        this.startStringDate \u003d inputStartDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":"        this.endStringDate \u003d inputEndDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":"    public String getStartDate() {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":"        return startStringDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChangIkJoong"},"content":"    public String getEndDate() {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":"        return endStringDate;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":21}},{"path":"src/main/java/Model/TaskVariants/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Model.TaskVariants;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"public abstract class Task {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"    private final String taskDescription;","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"    private boolean isDone;","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"    private int taskId;","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"    private static int taskCounter \u003d 1;","lastModifiedDate":"2025-09-08T17:17:51","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":"        this.taskId \u003d taskCounter++;","lastModifiedDate":"2025-09-08T17:17:51","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":"    public int getTaskId() {","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChangIkJoong"},"content":"        return taskId;","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":"        return taskDescription;","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChangIkJoong"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChangIkJoong"},"content":"        return isDone;","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChangIkJoong"},"content":"    public void markDone() {","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChangIkJoong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChangIkJoong"},"content":"    public void unmarkDone() {","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChangIkJoong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChangIkJoong"},"content":"    public void setTaskId(int taskId) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChangIkJoong"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChangIkJoong"},"content":"    public static void decrementCounter() {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChangIkJoong"},"content":"        taskCounter--;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-08-29T13:57:36","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":43}},{"path":"src/main/java/Model/TaskVariants/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Model.TaskVariants;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"    public Todo(String taskDescription) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"        super(taskDescription);","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":7}},{"path":"src/main/java/Model/dataHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package Model;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"import Exceptions.BruceException;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"import Exceptions.UnknownInputException;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Task;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":"import java.util.List;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChangIkJoong"},"content":"/**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":" * Simple file-backed process layer for Bruce tasks.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":" * Stores tasks in a UTF-8 text file using {@link CodecConverter}\u0027s","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":" * codec format. The file is created under the user\u0027s home directory:","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":" * \u003cpre\u003e{@code ${user.home}/bruceData/bruce.txt}\u003c/pre\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChangIkJoong"},"content":" */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChangIkJoong"},"content":"public class dataHandler {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChangIkJoong"},"content":"     * Singleton instance.","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChangIkJoong"},"content":"    private static dataHandler INSTANCE \u003d null;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChangIkJoong"},"content":"     * Directory used for storing Bruce data (e.g., {@code ~/bruceData}).","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChangIkJoong"},"content":"    private static final Path DIRECTORY \u003d Paths.get(System.getProperty(\"user.home\"), \"bruceData\");","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChangIkJoong"},"content":"     * Main data file (e.g., {@code ~/bruceData/bruce.txt}).","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChangIkJoong"},"content":"    private static final Path FILE \u003d DIRECTORY.resolve(\"bruce.txt\");","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChangIkJoong"},"content":"     * Initializes and ensures the data directory and file exist.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws RuntimeException if the directory or file cannot be created","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChangIkJoong"},"content":"    private dataHandler() {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChangIkJoong"},"content":"        try {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChangIkJoong"},"content":"            if (!Files.exists(DIRECTORY)) {","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChangIkJoong"},"content":"                Files.createDirectories(DIRECTORY);","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChangIkJoong"},"content":"            }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChangIkJoong"},"content":"            if (!Files.exists(FILE)) {","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChangIkJoong"},"content":"                Files.createFile(FILE);","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChangIkJoong"},"content":"            }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChangIkJoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChangIkJoong"},"content":"            throw new RuntimeException(\"Failed to initialize directory, check directory and file: \", e);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChangIkJoong"},"content":"     * Returns the singleton instance of the data handler.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChangIkJoong"},"content":"     * @return global {@code dataHandler} instance","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChangIkJoong"},"content":"    public static dataHandler getInstance() {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChangIkJoong"},"content":"        if (INSTANCE \u003d\u003d null) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChangIkJoong"},"content":"            INSTANCE \u003d new dataHandler();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChangIkJoong"},"content":"        return INSTANCE;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChangIkJoong"},"content":"     * Loads all tasks from disk.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChangIkJoong"},"content":"     * If the data file does not exist yet, returns an empty list.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChangIkJoong"},"content":"     * Lines that cannot be decoded will throw a {@link RuntimeException}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChangIkJoong"},"content":"     * from {@link #convertInput(ArrayList, String)}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChangIkJoong"},"content":"     * @return {@link ArrayList} containing the loaded tasks","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChangIkJoong"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChangIkJoong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChangIkJoong"},"content":"        if (!Files.exists(FILE)) {","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChangIkJoong"},"content":"            return tasks;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChangIkJoong"},"content":"        loadInput(tasks);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChangIkJoong"},"content":"        return tasks;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChangIkJoong"},"content":"     * Reads all lines from the data file and converts each to a {@link Task}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChangIkJoong"},"content":"     * I/O errors are logged to command.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChangIkJoong"},"content":"     * @param tasks list to append decoded tasks into","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChangIkJoong"},"content":"    private static void loadInput(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChangIkJoong"},"content":"        try {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChangIkJoong"},"content":"            List\u003cString\u003e inputList \u003d Files.readAllLines(FILE);","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChangIkJoong"},"content":"            for (String input : inputList) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChangIkJoong"},"content":"                convertInput(tasks, input);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChangIkJoong"},"content":"            }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChangIkJoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChangIkJoong"},"content":"            System.err.println(\"Error while loading tasks from I/O: \" + e.getMessage());","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChangIkJoong"},"content":"     * Converts a single file line into a {@link Task} and appends it to {@code tasks}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChangIkJoong"},"content":"     * Error lines throw a {@link RuntimeException}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChangIkJoong"},"content":"     * @param tasks list to receive the decoded task","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChangIkJoong"},"content":"     * @param input raw line from the data file","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChangIkJoong"},"content":"    private static void convertInput(ArrayList\u003cTask\u003e tasks, String input) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChangIkJoong"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChangIkJoong"},"content":"            return;","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChangIkJoong"},"content":"        try {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChangIkJoong"},"content":"            Task task \u003d CodecConverter.decodeFromFile(input);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChangIkJoong"},"content":"            tasks.add(task);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChangIkJoong"},"content":"        } catch (UnknownInputException e) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChangIkJoong"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChangIkJoong"},"content":"     * Process all tasks to disk, overwriting the existing file.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChangIkJoong"},"content":"     * Each task is written on its own line using {@link CodecConverter#encodeToFile(Task)}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChangIkJoong"},"content":"     * I/O errors are logged to command.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChangIkJoong"},"content":"     * @param tasks the tasks to save","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChangIkJoong"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChangIkJoong"},"content":"        try (FileWriter fw \u003d new FileWriter(FILE.toString())) {","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChangIkJoong"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChangIkJoong"},"content":"                encodeTask(task, fw);","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChangIkJoong"},"content":"            }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChangIkJoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChangIkJoong"},"content":"            System.err.println(\"Error while saving tasks in I/O: \" + e.getMessage());","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChangIkJoong"},"content":"     * Encodes a task and writes it to the provided {@link FileWriter}, followed by a newline.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the task to encode and write","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChangIkJoong"},"content":"     * @param fw   open file writer positioned for writing","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChangIkJoong"},"content":"     * @throws IOException if the write operation fails","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChangIkJoong"},"content":"    private static void encodeTask(Task task, FileWriter fw) throws IOException {","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChangIkJoong"},"content":"        String encodedTask;","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChangIkJoong"},"content":"        try {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChangIkJoong"},"content":"            encodedTask \u003d CodecConverter.encodeToFile(task);","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChangIkJoong"},"content":"        } catch (BruceException e) {","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChangIkJoong"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChangIkJoong"},"content":"        fw.write(encodedTask + System.lineSeparator());","lastModifiedDate":"2025-09-17T00:22:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":154}},{"path":"src/main/java/UI/View.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangIkJoong"},"content":"package UI;","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Deadline;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Event;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Task;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"ChangIkJoong"},"content":"import Model.TaskVariants.Todo;","lastModifiedDate":"2025-09-09T02:57:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"ChangIkJoong"},"content":"/**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"ChangIkJoong"},"content":" * Console-facing view for the Bruce task manager (MVC).","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"ChangIkJoong"},"content":" * Responsible for rendering strings to standard output: greetings, lists,","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"ChangIkJoong"},"content":" * status updates, error messages, and command instructions. It formats","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"ChangIkJoong"},"content":" * {@link Task} variants ({@link Todo}, {@link Deadline}, {@link Event})","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"ChangIkJoong"},"content":" * into natural and readable lines.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"ChangIkJoong"},"content":" */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"ChangIkJoong"},"content":"public class View {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"ChangIkJoong"},"content":"     * Horizontal text separator for the different sections in console output.","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"ChangIkJoong"},"content":"    public static final String INLINE_TEXT_LINES \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-09-01T18:24:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"ChangIkJoong"},"content":"     * The bot\u0027s name shown in the output when called.","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"ChangIkJoong"},"content":"    public static final String BOT_NAME \u003d \"Bruce\";","lastModifiedDate":"2025-09-01T18:24:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"ChangIkJoong"},"content":"     * ASCII render of logo.","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T03:27:46","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"ChangIkJoong"},"content":"    public static final String BOT_LOGO \u003d","lastModifiedDate":"2025-09-01T18:24:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"ChangIkJoong"},"content":"            \"██████  ██████  ██    ██  ██████ ███████\\n\" +","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"ChangIkJoong"},"content":"                    \"██   ██ ██   ██ ██    ██ ██      ██\\n\" +","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"ChangIkJoong"},"content":"                    \"██████  ██████  ██    ██ ██      █████\\n\" +","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"ChangIkJoong"},"content":"                    \"██   ██ ██   ██ ██    ██ ██      ██\\n\" +","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"ChangIkJoong"},"content":"                    \"██████  ██   ██  ██████   ██████ ███████\";","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"ChangIkJoong"},"content":"     * Prints the horizontal text separator to the console.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"ChangIkJoong"},"content":"    public static void printLine() {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(INLINE_TEXT_LINES);","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"ChangIkJoong"},"content":"     * Greets the user with the bot logo, name, and a short prompt.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"ChangIkJoong"},"content":"    public static void greetUser() {","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"ChangIkJoong"},"content":"        View.printLine();","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(BOT_LOGO + \"\\n\" + INLINE_TEXT_LINES);","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"Hello! I\u0027m \" + BOT_NAME + \"!\");","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"For full list of instructions, type: help\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"What can I do for you?\\n\" + INLINE_TEXT_LINES);","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T05:20:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"ChangIkJoong"},"content":"     * Renders the confirmation when a new task was added and shows the new total count.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task  the new added task","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"ChangIkJoong"},"content":"     * @param total the total number of tasks now in the list","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"ChangIkJoong"},"content":"    public void viewTaskAdded(Task task, int total) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"   \" + viewTask(task));","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\" Now you have \" + total + \" tasks in the list.\");","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"ChangIkJoong"},"content":"     * Prints exit message.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"ChangIkJoong"},"content":"    public static void viewExit() {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"Bye.\");","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"ChangIkJoong"},"content":"     * Renders error message.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"ChangIkJoong"},"content":"    public void viewError(String message) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(message);","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"ChangIkJoong"},"content":"     * Renders the full list of tasks with their IDs.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"ChangIkJoong"},"content":"     * @param tasks is the list of the tasks to display","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"ChangIkJoong"},"content":"    public void viewTaskList(java.util.List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"ChangIkJoong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"ChangIkJoong"},"content":"            System.out.println(\" \" + task.getTaskId() + \".\" + viewTask(task));","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"ChangIkJoong"},"content":"     * Renders confirmation when a task was marked as complete.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the task that was marked complete","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"ChangIkJoong"},"content":"    public void viewTaskMarked(Task task) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  \" + viewTask(task));","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"ChangIkJoong"},"content":"     * Renders a confirmation when a task was unmarked (set to incomplete).","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the task that was unmarked","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"ChangIkJoong"},"content":"    public void viewTaskUnmarked(Task task) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  \" + viewTask(task));","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"ChangIkJoong"},"content":"     * Formats and renders a {@link Task} into a string, including type,","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"ChangIkJoong"},"content":"     * completion status, description, and relevant dates for {@link Deadline}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"ChangIkJoong"},"content":"     * and {@link Event}.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the task to format to string","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"ChangIkJoong"},"content":"     * @return the re-formatted string render of the task","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"ChangIkJoong"},"content":"    private String viewTask(Task task) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"ChangIkJoong"},"content":"        String resultString;","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"ChangIkJoong"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"ChangIkJoong"},"content":"            resultString \u003d \"[T]\" + isCompleteStatus(task) + task.getTaskDescription();","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"ChangIkJoong"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"ChangIkJoong"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"ChangIkJoong"},"content":"            resultString \u003d \"[D]\" + isCompleteStatus(task) + deadline.getTaskDescription() + \" (by: \" + deadline.getEndDate() + \")\";","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"ChangIkJoong"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"ChangIkJoong"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"ChangIkJoong"},"content":"            resultString \u003d \"[E]\" + isCompleteStatus(task) + event.getTaskDescription() + \" (from: \" + event.getStartDate() + \" to: \" + event.getEndDate() + \")\";","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"ChangIkJoong"},"content":"        } else {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"ChangIkJoong"},"content":"            resultString \u003d isCompleteStatus(task) + task.getTaskDescription();","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"ChangIkJoong"},"content":"        return resultString;","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"ChangIkJoong"},"content":"     * Returns the bracketed completion indicating status for a task.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"ChangIkJoong"},"content":"     * @param task the task whose status is to be checked","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"ChangIkJoong"},"content":"     * @return {@code \"[X] \"} if complete; otherwise {@code \"[ ] \"}","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"ChangIkJoong"},"content":"    public String isCompleteStatus(Task task) {","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"ChangIkJoong"},"content":"        return task.isCompleted() ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"ChangIkJoong"},"content":"     * Renders a confirmation that a task was successfully deleted.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"ChangIkJoong"},"content":"     * @param deletedTask the task that was deleted","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"ChangIkJoong"},"content":"    public void successfullyDeletedTask(Task deletedTask) {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"the Task: \" + deletedTask.getTaskDescription() + \" has successfully been deleted.\");","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-09-16T23:28:45","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"ChangIkJoong"},"content":"     * Renders a list of tasks returned from a search/filter operation.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"ChangIkJoong"},"content":"     *","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"ChangIkJoong"},"content":"     * @param tasks the tasks that matched the search","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"ChangIkJoong"},"content":"    public void viewFoundTasks(java.util.List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"ChangIkJoong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"ChangIkJoong"},"content":"            System.out.println(\" \" + task.getTaskId() + \".\" + viewTask(task));","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"ChangIkJoong"},"content":"        }","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"ChangIkJoong"},"content":"","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"ChangIkJoong"},"content":"    /**","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"ChangIkJoong"},"content":"     * Prints the supported command list and usage hints for this chatbot.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"ChangIkJoong"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"ChangIkJoong"},"content":"     * DISCLAIMER: GPT was used partly to generate this list of commands.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"ChangIkJoong"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"ChangIkJoong"},"content":"     */","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"ChangIkJoong"},"content":"    public static void showInstructions() {","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"ChangIkJoong"},"content":"        //DISCLAIMER: GPT was used partly to generate this list of commands.","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"List of commands:\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  help                                  : Shows this instruction list.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  todo \u003cdescription\u003e                    : Adds a Todo task.\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  deadline \u003cdesc\u003e /by \u003cdate\u003e            : Adds a Deadline task with a due date.\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e  : Adds an Event task with start and end times.\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  list                                  : Shows all tasks.\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  find \u003ckeyword\u003e                        : Show list with tasks including the keyword.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  mark \u003ctask number\u003e                    : Marks a task as done.\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  unmark \u003ctask number\u003e                  : Marks a task as not done.\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  delete \u003ctask number\u003e                  : Marks a task as not done.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  find \u003ckey word\u003e                       : Marks a task as not done.\");","lastModifiedDate":"2025-10-03T02:44:48","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"ChangIkJoong"},"content":"        System.out.println(\"  bye.                                  : Exits the chatbot.\");","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"ChangIkJoong"},"content":"    }","lastModifiedDate":"2025-09-09T02:32:05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"ChangIkJoong"},"content":"}","lastModifiedDate":"2025-09-01T03:41:42","isFullCredit":false}],"authorContributionMap":{"ChangIkJoong":188}}]
