[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"# Anna project template","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"1. After that, locate the `src/main/java/Anna.java` file, right-click it, and choose `Run Anna.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"samika2005":2,"-":24}},{"path":"data/anna.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"D | 0 | task | today","lastModifiedDate":"2025-10-03T22:15:18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"T | 0 | task","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false}],"authorContributionMap":{"samika2005":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"# Anna User Guide","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"Anna is a simple chatbot that helps you manage your tasks.  ","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":"You can add todos, deadlines, and events, list them, mark/unmark them as done, delete tasks, and find tasks by keyword.  ","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":"All tasks are saved automatically in `data/anna.txt`.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":"Adds a task with a description and a due date.  ","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":"Useful for keeping track of tasks that need to be completed before a specific date/time.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"deadline return book /by Sunday","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"expected output","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":"Got it. I’ve added this task:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"## Adding Todos","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"Adds a task without any date/time attached.  ","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"Use this when you just want to record a simple task to do.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":"todo read book","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"Got it. I’ve added this task:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"[T][ ] read book","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"## Adding events","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"Adds a task that has both a start and end time.  ","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"Useful for scheduling events with a duration.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"event project meeting /from Monday 2pm /to Monday 4pm","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"expected output","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"Got it. I’ve added this task:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"[E][ ] project meeting (from: Monday 2pm to: Monday 4pm)","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samika2005"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samika2005"},"content":"---","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samika2005"},"content":"## Listing all tasks","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samika2005"},"content":"Displays all tasks currently stored in the list, numbered for reference.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samika2005"},"content":"list","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samika2005"},"content":"expected output","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samika2005"},"content":"1.[D][ ] return book (by: Sunday)","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samika2005"},"content":"2.[T][ ] read book","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samika2005"},"content":"3.[E][ ] project meeting (from: Monday 2pm to: Monday 4pm)","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samika2005"},"content":"---","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samika2005"},"content":"## Marking a task as done","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samika2005"},"content":"Marks a task at the given index as completed.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samika2005"},"content":"mark 2","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samika2005"},"content":"Nice! I’ve marked this task as done:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samika2005"},"content":"[T][X] read book","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samika2005"},"content":"---","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samika2005"},"content":"## Unmarking a task","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samika2005"},"content":"Marks a task at the given index as not completed yet.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samika2005"},"content":"unmark 2","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samika2005"},"content":"expected output","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samika2005"},"content":"Nice! I’ve marked this task as not done yet:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samika2005"},"content":"[T][ ] read book","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samika2005"},"content":"---","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samika2005"},"content":"## Deleting a task","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samika2005"},"content":"Removes a task at the given index from the list.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samika2005"},"content":"delete 2","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samika2005"},"content":"expected output","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samika2005"},"content":"Noted. I’ve removed this task:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samika2005"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samika2005"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samika2005"},"content":"---","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samika2005"},"content":"## Finding tasks by keyword","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samika2005"},"content":"Searches all tasks for a given keyword and shows matching tasks.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samika2005"},"content":"find book","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samika2005"},"content":"expected output","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samika2005"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samika2005"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samika2005"},"content":"---","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samika2005"},"content":"## Exiting Anna","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samika2005"},"content":"Ends the program. Tasks are saved automatically before exit.","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samika2005"},"content":"Example:","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samika2005"},"content":"bye","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samika2005"},"content":"expected output","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samika2005"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samika2005"},"content":"```","lastModifiedDate":"2025-10-03T09:10:57","isFullCredit":false}],"authorContributionMap":{"samika2005":114,"-":29}},{"path":"src/main/java/Anna.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"import duke.*;","lastModifiedDate":"2025-09-10T12:05:53","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"import java.lang.*;","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":" * The central and entry point of the Anna chatbot program.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":" * Anna is a task manager that supports commands such as","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":" * {@code list}, {@code todo}, {@code deadline}, {@code event},","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":" * {@code mark}, {@code unmark}, {@code delete}, {@code find}, and {@code bye}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":" * Tasks are saved to a file through {@link Storage} so they","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":" * are persistant across runs.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"public class Anna {","lastModifiedDate":"2025-08-30T06:26:56","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"     * Starts the Anna chatbot.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"     * Loads tasks from storage (if available) and then waits","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"     * for user input in a loop until {@code bye} is entered.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-08-30T06:26:56","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-08-30T06:26:56","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-08-30T06:26:56","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":"        TaskList list;","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"        Storage storage \u003d new Storage(\"data/anna.txt\");","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"        try {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"            list \u003d new TaskList(storage.load());","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"            // start empty if file is missing/corrupted/unparseable","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"            System.out.println(\"Load failed: \" + e.getMessage());","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samika2005"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"        }","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"        while (true) {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"            String word \u003d in.nextLine();","lastModifiedDate":"2025-08-30T08:53:54","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samika2005"},"content":"            if (word.equals(\"bye\")) {","lastModifiedDate":"2025-08-30T08:53:54","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samika2005"},"content":"                try { storage.save(list.asList()); } catch (IOException ignore) {}","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samika2005"},"content":"                break;","lastModifiedDate":"2025-08-30T07:33:12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samika2005"},"content":"            } else {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samika2005"},"content":"                ui.showLine();","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samika2005"},"content":"                try {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samika2005"},"content":"                    if (word.equals(\"list\")) {","lastModifiedDate":"2025-08-30T08:53:54","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samika2005"},"content":"                        ui.showList(list);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samika2005"},"content":"                        continue;","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samika2005"},"content":"                    } else if (word.startsWith(\"mark\")) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samika2005"},"content":"                        Scanner skip \u003d new Scanner(word);","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samika2005"},"content":"                        if (!skip.hasNext()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Finish the sentence!!\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samika2005"},"content":"                        skip.next();","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samika2005"},"content":"                        if (!skip.hasNextInt()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"You know of numbers don\u0027t you? Use them.\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samika2005"},"content":"                        int index \u003d skip.nextInt() - 1; // 1-based input","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samika2005"},"content":"                        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Did you even come up with that many tasks in the first place?\" + (index + 1));","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samika2005"},"content":"                        list.get(index).mark(true);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samika2005"},"content":"                        System.out.println(list.get(index).toString());","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samika2005"},"content":"                        // save after change","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samika2005"},"content":"                        try { storage.save(list.asList()); } catch (IOException ignored) {}","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samika2005"},"content":"                        continue;","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samika2005"},"content":"                    } else if (word.startsWith(\"unmark\")) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samika2005"},"content":"                        Scanner skip \u003d new Scanner(word);","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samika2005"},"content":"                        if (!skip.hasNext()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Finish the sentence!!\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"samika2005"},"content":"                        skip.next();","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"samika2005"},"content":"                        if (!skip.hasNextInt()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"You know of numbers don\u0027t you? Use them.\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"samika2005"},"content":"                        int index \u003d skip.nextInt() - 1;","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"samika2005"},"content":"                        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Did you even come up with that many tasks in the first place?\" + (index + 1));","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"samika2005"},"content":"                        list.get(index).mark(false);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"samika2005"},"content":"                        System.out.println(list.get(index).toString());","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"samika2005"},"content":"                        try { storage.save(list.asList()); } catch (IOException ignored) {}","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"samika2005"},"content":"                        continue;","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"samika2005"},"content":"                    } else if (word.startsWith(\"delete\")) {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"samika2005"},"content":"                        Scanner skip \u003d new Scanner(word);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"samika2005"},"content":"                        if (!skip.hasNext()) {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Finish the sentence!!\");","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"samika2005"},"content":"                        skip.next(); // \"delete\"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"samika2005"},"content":"                        if (!skip.hasNextInt()) {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"You know of numbers don\u0027t you? Use them.\");","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"samika2005"},"content":"                        int index \u003d skip.nextInt() - 1;","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"samika2005"},"content":"                        if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Did you even come up with that many tasks in the first place?\" + (index + 1));","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"samika2005"},"content":"                        Task removed \u003d list.remove(index);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"samika2005"},"content":"                        ui.showDeleted(removed, list.size());","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"samika2005"},"content":"                        try { storage.save(list.asList()); } catch (IOException ignored) {}","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"samika2005"},"content":"                        continue;","lastModifiedDate":"2025-08-30T11:34:21","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"samika2005"},"content":"                    } else if (word.startsWith(\"todo\")) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"samika2005"},"content":"                        String description \u003d word.substring(4).trim();","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"samika2005"},"content":"                        if (description.isEmpty()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"I am in fact not capable of making up tasks\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-08-30T08:53:54","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"samika2005"},"content":"                        Task t \u003d new Todo(description);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"samika2005"},"content":"                        list.add(t);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-02T06:37:40","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"samika2005"},"content":"                        System.out.println(t.toString());","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"samika2005"},"content":"                        try { storage.save(list.asList()); } catch (IOException ignored) {}","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"samika2005"},"content":"                    } else if (word.startsWith(\"deadline\")) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"samika2005"},"content":"                        if (!word.contains(\"/by\")) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"You\u0027re smart enough to use the right format aren\u0027t you?\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-02T06:37:40","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"samika2005"},"content":"                        String description \u003d word.substring(9, word.indexOf(\u0027/\u0027)).trim();","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"samika2005"},"content":"                        if (description.isEmpty()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Existential dread doesn\u0027t count, type in something adequate and preferably visible!\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"samika2005"},"content":"                        String by \u003d word.substring(word.indexOf(\u0027/\u0027) + 3).trim();","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"samika2005"},"content":"                        if (by.isEmpty()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Planning to procrastinate huh?\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"samika2005"},"content":"                        Task t \u003d new Deadline(description, by);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"samika2005"},"content":"                        list.add(t);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"samika2005"},"content":"                        System.out.println(t.toString());","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"samika2005"},"content":"                        try { storage.save(list.asList()); } catch (IOException ignored) {}","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"samika2005"},"content":"                    } else if (word.startsWith(\"event\")) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"samika2005"},"content":"                        if (!word.contains(\"/from\") || !word.contains(\"/to\")) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"ain\u0027t got a timeframe?\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-02T06:37:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"samika2005"},"content":"                        String description \u003d word.substring(5 + 1, word.indexOf(\u0027/\u0027)).trim(); // after \"event\"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"samika2005"},"content":"                        if (description.isEmpty()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"No event in mind at all?\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"samika2005"},"content":"                        String from \u003d word.substring(word.indexOf(\"/from\") + 6, word.lastIndexOf(\u0027/\u0027)).trim();","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"samika2005"},"content":"                        String to \u003d word.substring(word.lastIndexOf(\"/to\") + 4).trim();","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"samika2005"},"content":"                        if (from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"Forever ain\u0027t a timeframe, use the typical hours like a normal person!\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"samika2005"},"content":"                        Task t \u003d new Event(description, from, to);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"samika2005"},"content":"                        list.add(t);","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"samika2005"},"content":"                        System.out.println(t.toString());","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"samika2005"},"content":"                        try { storage.save(list.asList()); } catch (IOException ignored) {}","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-30T23:50:50","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"samika2005"},"content":"                    } else if (word.startsWith(\"find\")) {","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"samika2005"},"content":"                        String keyword \u003d word.substring(4).trim();","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"samika2005"},"content":"                        if (keyword.isEmpty()) {","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"samika2005"},"content":"                            throw new DukeException(\"What exactly are you asking me to find?\");","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"samika2005"},"content":"                        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"samika2005"},"content":"                        for (int j \u003d 0; j \u003c list.size(); j++) {","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"samika2005"},"content":"                            Task t \u003d list.get(j);","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"samika2005"},"content":"                            if (t.toString().contains(keyword)) {","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"samika2005"},"content":"                                System.out.println((j + 1) + \". \" + t);","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"samika2005"},"content":"                            }","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"samika2005"},"content":"                        }","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"samika2005"},"content":"                        continue;","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"samika2005"},"content":"                    }","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"samika2005"},"content":"                    else {","lastModifiedDate":"2025-10-02T20:04:13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"samika2005"},"content":"                        throw new DukeException(\"I\u0027ve got no clue what you\u0027re possibly tryna do\");","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"samika2005"},"content":"                    }","lastModifiedDate":"2025-09-02T06:37:40","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"samika2005"},"content":"                    ui.showLine();","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"samika2005"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2025-09-09T21:33:01","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"samika2005"},"content":"                    ui.showError(e.getMessage());","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"samika2005"},"content":"                }","lastModifiedDate":"2025-08-30T08:53:54","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"samika2005"},"content":"            }","lastModifiedDate":"2025-08-30T07:33:12","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"samika2005"},"content":"        }","lastModifiedDate":"2025-08-30T07:33:12","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"samika2005"},"content":"        ui.showBye();","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-08-30T06:26:56","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-08-30T06:26:56","isFullCredit":false}],"authorContributionMap":{"samika2005":198}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-09-10T12:21:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-10T12:21:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":" * A {@code Deadline} is a {@link Task} that includes a description and a \"by\" time","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":" * indicating the deadline. It overrides {@code toSaveFormat()} to provide a string","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":" * suitable for saving to file, and {@code toString()} for display to the user.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"    protected String by;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"     * Creates a new Deadline task with the given description and deadline.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":"     * @param by The time or date by which the task should be completed.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"        super(description);","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":" * Returns the string representation of this deadline task","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":" * in a format suitable for saving to storage.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":" *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":" * @return A string in the format: {@code D | 0/1 | description | by}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"    @Override","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":"        return \"D | \" + statusBit() + \" | \" + word + \" | \" + by;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"     * Returns the string representation of this deadline task","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"     * for displaying to the user.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"     * @return A string in the format: {@code [D][ ] description (by: time)}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samika2005"},"content":"    @Override","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false}],"authorContributionMap":{"samika2005":48}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-09-10T12:19:19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-10T12:19:19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":" * Represents an exception specific to the Anna chatbot.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":" * This exception is thrown when the user provides invalid commands,","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":" * malformed input, or when storage/parsing fails in a way that Anna","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":" * cannot recover from gracefully.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-09-10T12:19:19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"     * Creates a new {@code DukeException} with the specified detail message.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"     * @param message the error message that explains the cause of the exception","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":"        super(message);","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-09-10T12:19:19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-10T12:19:19","isFullCredit":false}],"authorContributionMap":{"samika2005":22}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-09-10T12:21:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-10T12:21:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":" * Represents an {@link Task} with a start and end time.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":" * An {@code Event} has a description, a start time, and an end time","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":" * to indicate when the event occurs.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":"    protected String from;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":"    protected String to;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":" * Creates a new {@code Event}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":" *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":" * @param description description of the event","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":" * @param from        the start time of the event","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":" * @param to          the end time of the event","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"        super(description);","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":"     * Returns the string representation of this event in the format","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":"     * used for saving to file.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"     * @return formatted string for saving","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"    @Override","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":"        return \"E | \" + statusBit() + \" | \" + word + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"     * Returns a user-friendly string representation of this event.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"     * @return formatted string for display","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"    @Override","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to +  \")\";","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false}],"authorContributionMap":{"samika2005":50}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":" * Utility class that handles parsing of stored task data","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":" * back into {@link Task} objects.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":"public class Parser {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":"     * Parses a line from the save file and reconstructs the","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":"     * appropriate {@link Task} object (Todo, Deadline, or Event).","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"     * Each line is expected to follow the format:","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"     *     \u003cli\u003e{@code T | 0/1 | description}\u003c/li\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":"     *     \u003cli\u003e{@code D | 0/1 | description | by}\u003c/li\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"     *     \u003cli\u003e{@code E | 0/1 | description | from | to}\u003c/li\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":"     * where:","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"     * \u003cul\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"     *     \u003cli\u003eThe first token is the task type ({@code T}, {@code D}, or {@code E}).\u003c/li\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"     *     \u003cli\u003eThe second token is {@code 1} if the task is done, {@code 0} otherwise.\u003c/li\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"     *     \u003cli\u003eThe rest are task-specific details.\u003c/li\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":"     * @param line A single line from the save file.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":"     * @return A reconstructed {@link Task}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":"     * @throws DukeException If the line is invalid or cannot be parsed.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"    public static Task parseTaskFromSave(String line) throws DukeException {","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"        String cleaned \u003d line.replace(\"\\uFEFF\", \"\").trim();","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"        String[] parts \u003d cleaned.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":"        if (parts.length \u003c 3) throw new DukeException(\"Bad save line: \" + line);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"        String type \u003d parts[0].trim();","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"        boolean done \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"        String desc \u003d parts[2];","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"        switch (type) {","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"            case \"T\":","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samika2005"},"content":"                Todo t \u003d new Todo(desc);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"                t.mark(done);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"                return t;","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"            case \"D\":","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"                if (parts.length \u003c 4) throw new DukeException(\"Bad deadline line: \" + line);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samika2005"},"content":"                Deadline d \u003d new Deadline(desc, parts[3]);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samika2005"},"content":"                d.mark(done);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samika2005"},"content":"                return d;","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samika2005"},"content":"            case \"E\":","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samika2005"},"content":"                if (parts.length \u003c 5) throw new DukeException(\"Bad event line: \" + line);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samika2005"},"content":"                Event e \u003d new Event(desc, parts[3], parts[4]);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samika2005"},"content":"                e.mark(done);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samika2005"},"content":"                return e;","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samika2005"},"content":"            default:","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samika2005"},"content":"                throw new DukeException(\"Unknown task type: \u0027\" + type + \"\u0027\");","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samika2005"},"content":"        }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false}],"authorContributionMap":{"samika2005":63}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"import java.io.File;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":"import java.util.List;","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":" * Handles loading and saving of tasks from/to a file.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":" * The {@code Storage} class is responsible for:","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":" *   \u003cli\u003eReading tasks from a specified file when the chatbot starts.\u003c/li\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":" *   \u003cli\u003eWriting tasks back into the file whenever the list is updated.\u003c/li\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":" * This ensures that tasks persist between different runs of the chatbot.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"public class Storage {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"    private final String filePath;","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"     * Creates a new {@code Storage} object with the given file path.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"     * @param filePath the path of the file used to load and save tasks","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":"     * If the file does not exist, it creates a new file (and the parent","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"     * directory if missing). Each line in the file is parsed into a","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"     * {@link Task} using {@link Parser#parseTaskFromSave(String)}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"     * @return a {@code List\u003cTask\u003e} containing all tasks from the file","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"     * @throws IOException    if there is an error reading from the file","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"     * @throws DukeException  if the file contents cannot be parsed properly","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"    public List\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samika2005"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samika2005"},"content":"            File parent \u003d file.getParentFile();","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samika2005"},"content":"            if (parent !\u003d null) parent.mkdirs();  // create \"data\" folder if missing","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samika2005"},"content":"            file.createNewFile();","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samika2005"},"content":"        }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samika2005"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samika2005"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samika2005"},"content":"                String line \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samika2005"},"content":"                if (line.isEmpty()) continue;","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samika2005"},"content":"                Task t \u003d Parser.parseTaskFromSave(line);","lastModifiedDate":"2025-10-03T06:20:52","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samika2005"},"content":"                tasks.add(t);","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samika2005"},"content":"            }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samika2005"},"content":"        }","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samika2005"},"content":"        return tasks;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samika2005"},"content":"     * Saves the given list of tasks into the file.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samika2005"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samika2005"},"content":"     * Each task is written in the format returned by","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samika2005"},"content":"     * {@link Task#toSaveFormat()}, followed by a newline.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samika2005"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samika2005"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samika2005"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samika2005"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"samika2005"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"samika2005"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"samika2005"},"content":"                writer.write(task.toSaveFormat());","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"samika2005"},"content":"                writer.write(System.lineSeparator());","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"samika2005"},"content":"            }","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"samika2005"},"content":"        }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false}],"authorContributionMap":{"samika2005":84}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-09-10T12:21:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-10T12:21:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":" * Represents a generic task with a description and a completion status.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":" * This is the superclass for more specific task types such as","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":" * {@link Todo}, {@link Deadline}, and {@link Event}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":"public class Task {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":"    protected String word;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":"    /** Whether the task is marked as done. */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"     * Creates a new task with the given description.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":"     * By default, the task is not marked as done.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":"     * @param word Description of the task.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":"    public Task(String word) {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":"        this.word \u003d word;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"     * Marks or unmarks this task as done.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"     * @param done {@code true} to mark the task as done, {@code false} otherwise.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":"    public void mark(boolean done) {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":" * Returns the task\u0027s completion status in save format.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":" *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":" * @return \"1\" if the task is done, \"0\" otherwise.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"    public String statusBit() {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"     * Returns the string format used for saving this task to file.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"     * @return Save format string containing the completion status and description.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"        return (isDone ? \"1 | \" : \"0 | \") + word;","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samika2005"},"content":"     * Returns a string representation of the task, including its status.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samika2005"},"content":"     * @return A string in the format \"[X] description\" if done,","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samika2005"},"content":"     *         or \"[ ] description\" if not done.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samika2005"},"content":"    @Override","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samika2005"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samika2005"},"content":"        if (isDone) {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samika2005"},"content":"            return \"[X] \" + word;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samika2005"},"content":"        } else {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samika2005"},"content":"            return \"[ ] \" + word;","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samika2005"},"content":"        }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false}],"authorContributionMap":{"samika2005":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":"import java.util.List;","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":" * Represents a list of {@link Task} objects.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":" * Provides methods to add, remove, retrieve, and get the size of the task list.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":" * Used as the main data structure to store tasks during program execution.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"public class TaskList {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-03T05:17:43","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"    public TaskList() { }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":" * Creates a task list with the given initial tasks.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":" *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":" * @param initial A list of tasks to populate the task list with.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"    public TaskList(List\u003cTask\u003e initial) {","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"        tasks.addAll(initial);","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":"     * @return The size of the task list.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"    public int size() {","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"        return tasks.size();","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"     * @param i The index of the task to retrieve (0-based).","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"    public Task get(int i) {","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"        return tasks.get(i);","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"     * Adds a task to the list.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samika2005"},"content":"     * @param t The task to add.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samika2005"},"content":"    public void add(Task t) {","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samika2005"},"content":"        tasks.add(t);","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samika2005"},"content":" * Removes the task at the specified index.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samika2005"},"content":" *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samika2005"},"content":" * @param i The index of the task to remove (0-based).","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samika2005"},"content":" * @return The removed task.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samika2005"},"content":"   public Task remove(int i) {","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samika2005"},"content":"      return tasks.remove(i);","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samika2005"},"content":"   }","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samika2005"},"content":"     * Returns the list of tasks in raw list form.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samika2005"},"content":"     * Used for saving the tasks to storage.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samika2005"},"content":"     * @return A list of tasks.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"samika2005"},"content":"    public List\u003cTask\u003e asList() {","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"samika2005"},"content":"        return tasks;","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false}],"authorContributionMap":{"samika2005":76}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-09-10T12:21:22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-10T12:21:22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":" * Represents a simple task without any time constraint.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":" * A {@code Todo} is a {@link Task} that only has a description.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":" * It overrides {@code toSaveFormat()} to provide a string suitable","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":" * for saving to file, and {@code toString()} for displaying to the user.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"     * Creates a new Todo task with the given description.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":"        super(description);","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"     * Returns the string representation of this todo task","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"     * in a format suitable for saving to storage.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"     * @return A string in the format: {@code T | 0/1 | description}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":"    @Override","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":"        return \"T | \" + statusBit() + \" | \" + word;","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-09-19T05:17:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"     * Returns the string representation of this todo task","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":"     * for displaying to the user.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"     * @return A string in the format: {@code [T][ ] description}.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"    @Override","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false}],"authorContributionMap":{"samika2005":43}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samika2005"},"content":"package duke;","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"samika2005"},"content":" * Handles all interactions with the user by displaying messages and formatting output.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"samika2005"},"content":"public class Ui {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"samika2005"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"samika2005"},"content":"     * Prints the welcome message when the chatbot starts.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"samika2005"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"samika2005"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"samika2005"},"content":"        System.out.println(\"Hello! I\u0027m Anna!\");","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"samika2005"},"content":"        System.out.println(\"What can i do for you?\");","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"samika2005"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"samika2005"},"content":"     * Prints a horizontal line separator.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"samika2005"},"content":"    public void showLine() { System.out.println(LINE); }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"samika2005"},"content":"/**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"samika2005"},"content":" * Prints an error message surrounded by separator lines.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"samika2005"},"content":" *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"samika2005"},"content":" * @param msg The error message to display.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"samika2005"},"content":" */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"samika2005"},"content":"    public void showError(String msg) {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"samika2005"},"content":"        showLine();","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"samika2005"},"content":"        System.out.println(\" \" + msg);","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"samika2005"},"content":"        showLine();","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"samika2005"},"content":"     * Prints the goodbye message when the chatbot exits.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"samika2005"},"content":"    public void showBye() {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"samika2005"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"samika2005"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"samika2005"},"content":"        System.out.println(LINE);","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"samika2005"},"content":"     * Prints all the tasks currently in the task list.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"samika2005"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"samika2005"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"samika2005"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"samika2005"},"content":"        for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"samika2005"},"content":"            System.out.println((j + 1) + \". \" + tasks.get(j));","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"samika2005"},"content":"        }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"samika2005"},"content":"","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"samika2005"},"content":"    /**","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"samika2005"},"content":"     * Prints a confirmation message when a task is deleted.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"samika2005"},"content":"     *","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"samika2005"},"content":"     * @param t    The task that was removed.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"samika2005"},"content":"     * @param size The number of tasks remaining in the list.","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"samika2005"},"content":"     */","lastModifiedDate":"2025-10-03T07:48:05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"samika2005"},"content":"    public void showDeleted(Task t, int size) {","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"samika2005"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"samika2005"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"samika2005"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"samika2005"},"content":"    }","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"samika2005"},"content":"}","lastModifiedDate":"2025-10-02T21:42:32","isFullCredit":false}],"authorContributionMap":{"samika2005":70}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"samika2005"},"content":"java -classpath ..\\bin Anna \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"samika2005":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"samika2005"},"content":"java -classpath ../bin Anna \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-09-04T23:16:07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"samika2005":1,"-":37}}]
