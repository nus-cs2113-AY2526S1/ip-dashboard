[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"# Michael project template","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17T12:25:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11T16:50:14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29T20:29:39","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"1. After that, locate the `src/main/java/Michael.java` file, right-click it, and choose `Run Michael.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false}],"authorContributionMap":{"darshhs":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"# Michael User Guide","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"## Introduction","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"Michael is a simple command-line task manager that helps you keep track of your todos, deadlines, and events. You can add, list, mark, unmark, delete, and find tasks easily.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"\u003cimg src\u003d \"https://github.com/darshhs/ip/blob/master/docs/img.png?raw\u003dtrue\"\u003e","lastModifiedDate":"2025-10-03T21:37:02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"## Quick Start","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"1. Download and run Michael.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"2. Type your commands in the command line and press Enter.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"3. Type `bye` to exit the application.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"## Features","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"### 1. Add Task","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"Add a new task to your list. Supported types: todo, deadline, event.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"#### Usage","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"- **Todo:** `todo \u003cdescription\u003e`","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"- **Deadline:** `deadline \u003cdescription\u003e /by \u003cdate/time\u003e`","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"- **Event:** `event \u003cdescription\u003e /from \u003c start date/time\u003e /to \u003cend date/time\u003e`","lastModifiedDate":"2025-10-04T02:12:50","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"#### Example","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"todo read book","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"deadline submit report /by Sunday","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"event team meeting /from Monday 2pm /to Monday 4pm","lastModifiedDate":"2025-10-04T02:12:50","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"#### Expected Output","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"Boom! Instant classic task, added:","lastModifiedDate":"2025-10-04T02:12:50","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"  [T][ ] read book","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"### 2. List Tasks","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"Show all tasks in your list.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darshhs"},"content":"#### Usage","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darshhs"},"content":"- `list`","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darshhs"},"content":"#### Example","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darshhs"},"content":"list","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darshhs"},"content":"#### Expected Output","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darshhs"},"content":"Hello there! Certainly, here are the tasks in your list:","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darshhs"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darshhs"},"content":"2.[D][ ] submit report (by: Sunday)","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darshhs"},"content":"3.[E][ ] team meeting (from: Monday 2pm to: Monday 4pm)","lastModifiedDate":"2025-10-04T02:12:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darshhs"},"content":"You currently have 3 task(s)","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darshhs"},"content":"### 3. Mark Task as Done","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darshhs"},"content":"Mark a task as completed.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darshhs"},"content":"#### Usage","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darshhs"},"content":"- `mark \u003ctask_number\u003e`","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darshhs"},"content":"#### Example","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darshhs"},"content":"mark 2","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darshhs"},"content":"#### Expected Output","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darshhs"},"content":"Yes! Task is done. I am very proud of you. Like, manager-of-the-year proud:","lastModifiedDate":"2025-10-04T02:12:50","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darshhs"},"content":"[D][X] submit report (by: Sunday)","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darshhs"},"content":"### 4. Unmark Task","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darshhs"},"content":"Mark a task as not completed.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darshhs"},"content":"#### Usage","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darshhs"},"content":"- `unmark \u003ctask_number\u003e`","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darshhs"},"content":"#### Example","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darshhs"},"content":"unmark 2","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darshhs"},"content":"#### Expected Output","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darshhs"},"content":"I’m not superstitious, but I am a little ’stitious… Let’s unmark that task:","lastModifiedDate":"2025-10-04T02:12:50","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darshhs"},"content":"[D][ ] submit report (by: Sunday)","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darshhs"},"content":"### 5. Delete Task","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darshhs"},"content":"Remove a task from your list.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darshhs"},"content":"#### Usage","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darshhs"},"content":"- `delete \u003ctask_number\u003e`","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darshhs"},"content":"#### Example","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darshhs"},"content":"delete 1","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darshhs"},"content":"#### Expected Output","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darshhs"},"content":"Goodbye, task. The worst thing about tasks was the dementors. Just kidding. Deleted:","lastModifiedDate":"2025-10-04T02:12:50","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darshhs"},"content":"[T][ ] read book","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darshhs"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darshhs"},"content":"### 6. Find Task","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darshhs"},"content":"Find tasks containing a specific keyword.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darshhs"},"content":"#### Usage","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darshhs"},"content":"- `find \u003ckeyword\u003e`","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darshhs"},"content":"#### Example","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darshhs"},"content":"find report","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darshhs"},"content":"#### Expected Output","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darshhs"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darshhs"},"content":"2.[D][ ] submit report (by: Sunday)","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"darshhs"},"content":"### 7. Exit","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"darshhs"},"content":"Exit the application.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"darshhs"},"content":"#### Usage","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"darshhs"},"content":"- `bye`","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"darshhs"},"content":"#### Example","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"darshhs"},"content":"bye","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"darshhs"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"darshhs"},"content":"#### Expected Output","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"darshhs"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"darshhs"},"content":"## FAQ","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"darshhs"},"content":"- **Where are my tasks saved?**","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"darshhs"},"content":"    - Tasks are saved in the `data/data.txt` file.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"darshhs"},"content":"- **Can I edit a task?**","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"darshhs"},"content":"    - No, you must delete and re-add the task.","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"darshhs"},"content":"---","lastModifiedDate":"2025-10-03T17:37:13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"darshhs":149,"-":19}},{"path":"src/main/java/michael/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import static michael.Michael.numberTasks;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" * Represents a command to add a new task to the task list.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":" * Handles both new tasks and tasks loaded from storage.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"    private final Task task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"    private final boolean isDataNew;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     * Constructs an AddCommand with the specified task and data source flag.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"     * @param task      The task to add","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"     * @param isDataNew True if the task is new, false if loaded from file","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"    public AddCommand(Task task, boolean isDataNew) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"        this.task \u003d task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"        this.isDataNew \u003d isDataNew;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"     * Executes the add command, adding the task to the list and displaying a message if new.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"    public void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"        tasks.add(task);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"        numberTasks++;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"        if (isDataNew) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"            ui.addTaskMessage(task, tasks.size());","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":45}},{"path":"src/main/java/michael/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":" * Abstract base class for all command types.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":" * Defines the interface for executing commands on the task list.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"public abstract class Command {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"     * Executes the command, performing its specific action on the task list.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"    public abstract void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":22}},{"path":"src/main/java/michael/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"import static michael.Michael.numberTasks;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":" * Handles removal of the task and updates storage and UI.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"    private final int currentTaskIndex;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     * Constructs a DeleteCommand for the specified task index.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"     * @param currentTask The index of the task to delete","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"    public DeleteCommand(int currentTask) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"        this.currentTaskIndex \u003d currentTask;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"     * Executes the delete command, removing the task and updating storage and to print message to users.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"    public void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"        Task removedTask \u003d tasks.get(currentTaskIndex);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"        tasks.remove(removedTask);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"        numberTasks--;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"        storage.deleteTask(currentTaskIndex);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"        ui.deleteTaskMessage(removedTask, numberTasks);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":43}},{"path":"src/main/java/michael/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":" * Displays an exit message to the user.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"     * Constructs an ExitCommand.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"    public ExitCommand() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"     * Executes the exit command, displaying an exit message.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"    public void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"        ui.exitMessage();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":32}},{"path":"src/main/java/michael/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":" * Represents a command to find tasks containing a specific query string.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":" * Displays matching tasks to the user.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"    private final String query;","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"     * Constructs a FindCommand with the specified query.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"     * @param query The string to search for in task descriptions","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"        this.query \u003d query;","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"     * Executes the find command, displaying tasks that match the query.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"    public void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"        ui.findTasksMessage();","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"        int index;","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"                index \u003d task.getTaskIndex();","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"                System.out.println(index + \". \" + task);","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"            }","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"        ui.border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false}],"authorContributionMap":{"darshhs":45}},{"path":"src/main/java/michael/Command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":" * Represents a command to mark a task as done.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":" * Updates the task status and storage, and displays a message.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"    private final int currentTaskIndex;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"     * Constructs a MarkTaskCommand for the specified task index.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     * @param currentTask The index of the task to mark","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"    public MarkTaskCommand(int currentTask) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"        this.currentTaskIndex \u003d currentTask;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"     * Executes the mark command, updating the task status and storage, and displaying a message.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"    public void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"        Task currentTask \u003d tasks.get(currentTaskIndex);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"        currentTask.markAsDone();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"        storage.writeToPosition(currentTaskIndex, \"0\", \"1\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"        ui.markTaskMessage(currentTask);","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":40}},{"path":"src/main/java/michael/Command/ShowListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"import static michael.Michael.numberTasks;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" * Represents a command to display the current list of tasks.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":" * Shows all tasks and the total count to the user.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"public class ShowListCommand extends Command {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"     * Constructs a ShowListCommand.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"    public ShowListCommand() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"     * Executes the show list command, which contains method to printing all tasks and the count.","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"    public void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"        ui.showListMessage(tasks, numberTasks);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":33}},{"path":"src/main/java/michael/Command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":" * Represents a command to unmark a task as done (mark as not completed).","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":" * Updates the task status and storage, and displays a message.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"    private final int currentTaskIndex;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"     * Constructs an UnmarkTaskCommand for the specified task index.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"     * @param currentTask The index of the task to unmark","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"    public UnmarkTaskCommand(int currentTask) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"        this.currentTaskIndex \u003d currentTask;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"     * Executes the unmark command, updating the task status and storage, and displaying a message.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"    public void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"        Task currentTask \u003d tasks.get(currentTaskIndex);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"        currentTask.markAsUndone();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"        storage.writeToPosition(currentTaskIndex, \"0\", \"1\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"        ui.unmarkTaskMessage(currentTask);","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":39}},{"path":"src/main/java/michael/Exception/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Exception;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"import michael.Command.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":" * Represents a command for invalid user instructions.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" * Displays an error message to the user when executed.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"    private final String errorMsg;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"     * Constructs an InvalidCommand with the specified error message.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"     * @param errorMsg The error message to display","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"    public InvalidCommand(String errorMsg) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"     * Executes the invalid command, displaying the error message.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"     * @param tasks   The list of tasks","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"     * @param ui      The user interface for messages","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"     * @param storage The storage handler","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"    public void executeCommand(ArrayList\u003cTask\u003e tasks, UserMessages ui, Storage storage) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"        System.out.println(errorMsg);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":38}},{"path":"src/main/java/michael/Exception/NumberRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Exception;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":" * Exception thrown when a number provided by the user is out of the valid range.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":" * Used to signal invalid task indices or similar errors.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"public class NumberRangeException extends Exception {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"     * Returns a message indicating the number is not within the valid range.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"     * @return The error message for out-of-range numbers","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"    public String notInRangeMessage() {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"        return \"Oh no! the number you have given is not within range, please try again\";","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":16}},{"path":"src/main/java/michael/Exception/UnknownInstructionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Exception;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":" * Exception thrown when the user provides an unknown instruction.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":" * Used to signal unrecognized commands in user input.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"public class UnknownInstructionException extends Exception {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"     * Returns a message indicating the instruction is unknown.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"     * @return The error message for unknown instructions","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"    public String unknownInstructionMessage() {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"        return \"I don\u0027t understand your instruction :{ Please try again\";","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":16}},{"path":"src/main/java/michael/Michael.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael;","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Command.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.Parser.ParseInput;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"import michael.Storage.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":" * Main entry point for the Michael task manager application.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":" * Handles user interaction, command parsing, and task management loop.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"public class Michael {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"    public static int numberTasks \u003d 0;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"    public static String endingLine \u003d \"bye\";","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"    public static String dataFile \u003d \"./data/data.txt\";","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"     * Main method to start the Michael application.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"     * Initializes UI, loads tasks from storage, and enters the command loop.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"     * @param args Command-line arguments","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"        UserMessages messages \u003d new UserMessages();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"        messages.welcomeMessage();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"        String line \u003d \"\";","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"        Storage storageFile \u003d new Storage(dataFile);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"        storageFile.getFileData();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"        // Main loop: reads user input, parses commands, and executes them until \u0027bye\u0027 is entered","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"        while (!(line.equals(endingLine))) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"            ParseInput parser \u003d new ParseInput(line);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"            Command command \u003d parser.parse();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darshhs"},"content":"            command.executeCommand(tasks, messages, storageFile);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-09-23T10:14:21","isFullCredit":false}],"authorContributionMap":{"darshhs":50}},{"path":"src/main/java/michael/Parser/ParseInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Parser;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Exception.InvalidCommand;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.Exception.NumberRangeException;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.Exception.UnknownInstructionException;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.*;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import michael.Command.*;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"import static michael.Michael.dataFile;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"import static michael.Michael.numberTasks;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":" * This class parses user input instructions into actionable commands","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":" * and extracts relevant information for task creation and management.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":" * It handles input formatting, splitting, indexing, and generates","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":" * Command objects based on instructions.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"public class ParseInput {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"    private final String givenInstruction;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"    private String[] instructionListCreated;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"    private int currentTaskIndex;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"     * Constructor for ParseInput.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"     * Initializes with a user instruction and parses it into its components.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"     * @param instruction The raw string received from user input","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"    public ParseInput(String instruction) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"        this.givenInstruction \u003d instruction;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"        parseInstruction();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"        parseIndex();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"     * Splits the given instruction into two parts:","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"     * the command keyword and the instruction details.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"    public void parseInstruction() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"        this.instructionListCreated \u003d givenInstruction.split(\" \", 2);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"     * Determines and sets the task index based on the instruction type.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"     * For commands like mark, unmark, and delete,","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darshhs"},"content":"     * it converts the supplied number to a zero-based index.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darshhs"},"content":"    public void parseIndex() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darshhs"},"content":"        int index;","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darshhs"},"content":"        if (instructionListCreated[0].equals(\"mark\") || instructionListCreated[0].equals(\"unmark\") || instructionListCreated[0].equals(\"delete\")) {","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darshhs"},"content":"            try {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darshhs"},"content":"                index \u003d Integer.parseInt(instructionListCreated[1]) - 1;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darshhs"},"content":"                this.currentTaskIndex \u003d index;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darshhs"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darshhs"},"content":"                this.currentTaskIndex \u003d -1;","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darshhs"},"content":"            }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darshhs"},"content":"     * Parses details from a deadline instruction.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darshhs"},"content":"     * Splits the task description and deadline time by delimiter \"/by\".","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darshhs"},"content":"     * @return An array containing [description, by time]","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darshhs"},"content":"    public String[] parseDeadline() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darshhs"},"content":"        return instructionListCreated[1].split(\" /by \", 2);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darshhs"},"content":"     * Parses details from an event instruction.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darshhs"},"content":"     * Splits the description, start, and end times using \"/from\" and \"/to\" delimiters.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darshhs"},"content":"     * @return An array containing [description, start time, end time]","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darshhs"},"content":"    public String[] parseEvent() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darshhs"},"content":"        String[] mainEvent \u003d instructionListCreated[1].split(\" /from \", 2);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darshhs"},"content":"        String[] eventDuration \u003d mainEvent[1].split(\" /to \", 2);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darshhs"},"content":"        return new String[]{mainEvent[0], eventDuration[0], eventDuration[1]};","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darshhs"},"content":"     * Interprets the parsed instruction and returns the corresponding Command.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darshhs"},"content":"     * Handles various user commands, throws appropriate exceptions for","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darshhs"},"content":"     * unknown instructions or out-of-range indexes, and passes data to task constructors.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darshhs"},"content":"     * @return Command object as identified from the instruction","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darshhs"},"content":"    public Command parse() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darshhs"},"content":"        Task task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darshhs"},"content":"        try {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darshhs"},"content":"            switch (instructionListCreated[0]) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darshhs"},"content":"            case \"bye\":","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darshhs"},"content":"                return new ExitCommand();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darshhs"},"content":"            case \"list\":","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darshhs"},"content":"                return new ShowListCommand();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darshhs"},"content":"            case \"mark\":","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darshhs"},"content":"                if (currentTaskIndex \u003e\u003d 0 \u0026\u0026 currentTaskIndex \u003c numberTasks) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darshhs"},"content":"                    return new MarkTaskCommand(currentTaskIndex);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darshhs"},"content":"                } else {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darshhs"},"content":"                    throw new NumberRangeException();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darshhs"},"content":"                }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darshhs"},"content":"            case \"unmark\":","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darshhs"},"content":"                if (currentTaskIndex \u003e\u003d 0 \u0026\u0026 currentTaskIndex \u003c numberTasks) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darshhs"},"content":"                    return new UnmarkTaskCommand(currentTaskIndex);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darshhs"},"content":"                } else {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darshhs"},"content":"                    throw new NumberRangeException();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darshhs"},"content":"                }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darshhs"},"content":"            case \"todo\":","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darshhs"},"content":"                task \u003d new Todo(instructionListCreated[1], dataFile, numberTasks + 1, false, true);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darshhs"},"content":"                return new AddCommand(task, true);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darshhs"},"content":"            case \"deadline\":","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darshhs"},"content":"                String[] deadlineInstruction \u003d parseDeadline();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darshhs"},"content":"                task \u003d new Deadline(deadlineInstruction[0], deadlineInstruction[1], dataFile, numberTasks + 1, false, true);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darshhs"},"content":"                return new AddCommand(task, true);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darshhs"},"content":"            case \"event\":","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darshhs"},"content":"                String[] eventInstruction \u003d parseEvent();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darshhs"},"content":"                task \u003d new Event(eventInstruction[0], eventInstruction[1], eventInstruction[2], dataFile, numberTasks + 1, false, true);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darshhs"},"content":"                return new AddCommand(task, true);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darshhs"},"content":"            case \"delete\":","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darshhs"},"content":"                if (currentTaskIndex \u003e\u003d 0 \u0026\u0026 currentTaskIndex \u003c numberTasks) {","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darshhs"},"content":"                    return new DeleteCommand(currentTaskIndex);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darshhs"},"content":"                } else {","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darshhs"},"content":"                    throw new NumberRangeException();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darshhs"},"content":"                }","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darshhs"},"content":"            case \"find\":","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darshhs"},"content":"                return new FindCommand(instructionListCreated[1]);","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darshhs"},"content":"            default:","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darshhs"},"content":"                throw new UnknownInstructionException();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darshhs"},"content":"            }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darshhs"},"content":"        } catch (UnknownInstructionException e) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darshhs"},"content":"            return new InvalidCommand(\"Unknown instruction: \" + e.unknownInstructionMessage());","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darshhs"},"content":"        } catch (NumberRangeException e) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darshhs"},"content":"            return new InvalidCommand(\"Number not within range: \" + e.notInRangeMessage());","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":137}},{"path":"src/main/java/michael/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Storage;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.Parser.ParseInput;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Deadline;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Event;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Todo;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"import michael.Ui.UserMessages;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"import michael.Command.AddCommand;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"import michael.Command.Command;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"import java.io.IOException;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"import java.io.File;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"import java.util.List;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"import static michael.Michael.*;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":" * This class manages storage operations for tasks.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":" * It provides utility methods to create and update the data file","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":" * where tasks are stored, append new task data, update or delete existing entries,","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":" * and read tasks from the file to reconstruct the current task list.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"public class Storage {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"     * Appends a given text to the end of the specified file, and throws an error if its is not able to append to file.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"     * @param filePath     Path to the file to append to","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"     * @param textToAppend The textual data to add","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"    public static void appendToFile(String filePath, String textToAppend) {","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"        FileWriter fw;","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"        try {","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"            fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"            fw.close();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darshhs"},"content":"            System.out.println(\"Oh no, I can\u0027t add the task to your file :{. \" +","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darshhs"},"content":"                    \"Please make sure the file follows this path, \u0027/home/ip/data\u0027\");","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darshhs"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darshhs"},"content":"     * Updates data at a specified index in the file, replacing old data with new data.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darshhs"},"content":"     * @param index   Line number to update","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darshhs"},"content":"     * @param oldData The original text within the line to replace","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darshhs"},"content":"     *                (i.e. whether the task is marked / unmarked)","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darshhs"},"content":"     * @param newData The new text to be inserted in place of oldData","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darshhs"},"content":"     *                (i.e. whether the user wishes to mark / unmark task)","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darshhs"},"content":"    public void writeToPosition(int index, String oldData, String newData) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darshhs"},"content":"        Path filePath \u003d Paths.get(dataFile);","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darshhs"},"content":"        try {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darshhs"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darshhs"},"content":"            String line \u003d lines.get(index);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darshhs"},"content":"            String updatedLine \u003d line.replace(oldData, newData);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darshhs"},"content":"            lines.set(index, updatedLine);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darshhs"},"content":"            Files.write(filePath, lines);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darshhs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darshhs"},"content":"            System.out.println(\"Oh no! I was not able to update the file: \" + e.getMessage());","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darshhs"},"content":"     * Creates a new file at the given path","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darshhs"},"content":"     * Creates any necessary parent directories if it does not exist","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darshhs"},"content":"     * @param filePath Path to the file to create","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darshhs"},"content":"    public void createFile(String filePath) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darshhs"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darshhs"},"content":"        File parentDir \u003d f.getParentFile();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darshhs"},"content":"        if (parentDir !\u003d null \u0026\u0026 !parentDir.exists()) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darshhs"},"content":"            if (parentDir.mkdirs()) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darshhs"},"content":"                System.out.println(\"Parent directory created successfully.\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darshhs"},"content":"            } else {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darshhs"},"content":"                System.out.println(\"Failed to create parent directory.\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darshhs"},"content":"                return;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darshhs"},"content":"            }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darshhs"},"content":"        try {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darshhs"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darshhs"},"content":"                System.out.println(\"Yay! A file created successfully.\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darshhs"},"content":"            }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darshhs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darshhs"},"content":"            System.out.println(\" :{ an error occurred while creating the file: \" + e.getMessage());","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darshhs"},"content":"     * Re-formats the file data for tasks after a deletion, refreshing line indices so","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darshhs"},"content":"     * task numbers are sequential. Called mainly after a line is removed.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darshhs"},"content":"     * @param lines List of lines representing tasks in the file","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darshhs"},"content":"    public void formatFileAfterDelete(List\u003cString\u003e lines) {","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darshhs"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darshhs"},"content":"            String line \u003d lines.get(i);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"darshhs"},"content":"            int dotPos \u003d line.indexOf(\u0027.\u0027);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"darshhs"},"content":"            if (dotPos !\u003d -1) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"darshhs"},"content":"                String restOfLine \u003d line.substring(dotPos + 1).trim();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"darshhs"},"content":"                lines.set(i, i + 1 + \". \" + restOfLine);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"darshhs"},"content":"            }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"darshhs"},"content":"     * Removes a task at the specified index from the file, then updates all","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"darshhs"},"content":"     * remaining entries so their indices are consistent.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"darshhs"},"content":"     * @param index Line number of the task to delete","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"darshhs"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"darshhs"},"content":"        Path filePath \u003d Paths.get(dataFile);","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"darshhs"},"content":"        try {","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"darshhs"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"darshhs"},"content":"            if (index \u003e\u003d 0 \u0026\u0026 index \u003c lines.size()) {","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"darshhs"},"content":"                lines.remove(index);","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"darshhs"},"content":"                formatFileAfterDelete(lines);","lastModifiedDate":"2025-10-03T00:00:52","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"darshhs"},"content":"                Files.write(filePath, lines);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"darshhs"},"content":"                System.out.println(\"Your task has been deleted successfully.\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"darshhs"},"content":"            } else {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"darshhs"},"content":"                System.out.println(\"Index out of bounds.\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"darshhs"},"content":"            }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"darshhs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"darshhs"},"content":"            System.out.println(\"Oh no! An error occurred: \" + e.getMessage());","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"darshhs"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"darshhs"},"content":"     * Initializes the file name and ensures the file exists.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"darshhs"},"content":"     * @param dataFile Path of the data file for task storage","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"darshhs"},"content":"    public Storage(String dataFile) {","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"darshhs"},"content":"        createFile(dataFile);","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"darshhs"},"content":"     * Reads all tasks from the data file and reconstructs them as Task objects.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"darshhs"},"content":"     * Uses specific parsers and commands for each type (Todo, Deadline, Event) and","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"darshhs"},"content":"     * executes commands to add them to the active task list.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"darshhs"},"content":"    public void getFileData() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"darshhs"},"content":"        File f \u003d new File(dataFile);","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"darshhs"},"content":"        Scanner s;","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"darshhs"},"content":"        try {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"darshhs"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"darshhs"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"darshhs"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"darshhs"},"content":"        boolean isTaskDone;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"darshhs"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"darshhs"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"darshhs"},"content":"            int dotPos \u003d line.indexOf(\u0027.\u0027);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"darshhs"},"content":"            String restOfLine \u003d line.substring(dotPos + 1);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"darshhs"},"content":"            isTaskDone \u003d restOfLine.charAt(5) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"darshhs"},"content":"            if (restOfLine.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"darshhs"},"content":"                loadTodo(restOfLine, isTaskDone);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"darshhs"},"content":"            } else if (restOfLine.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"darshhs"},"content":"                loadDeadline(restOfLine, isTaskDone);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"darshhs"},"content":"            } else {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"darshhs"},"content":"                loadEvent(restOfLine, isTaskDone);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"darshhs"},"content":"            }","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"darshhs"},"content":"     * Loads a Todo task from the file data and adds it to the task list.","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"darshhs"},"content":"     * @param restOfLine Remaining line content after the task index","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"darshhs"},"content":"     * @param isTaskDone Boolean indicating if the task is marked as done","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"darshhs"},"content":"    public void loadTodo(String restOfLine, boolean isTaskDone) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"darshhs"},"content":"        Task task \u003d new Todo(restOfLine.substring(9), dataFile, numberTasks + 1, isTaskDone, false);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"darshhs"},"content":"        Command addCommand \u003d new AddCommand(task, false);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"darshhs"},"content":"        addCommand.executeCommand(tasks, new UserMessages(), new Storage(dataFile));","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"darshhs"},"content":"     * Loads a Deadline task from the file data and adds it to the task list.","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"darshhs"},"content":"     * @param restOfLine Remaining line content after the task index","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"darshhs"},"content":"     * @param isTaskDone Boolean indicating if the task is marked as done","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"darshhs"},"content":"    public void loadDeadline(String restOfLine, boolean isTaskDone) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"darshhs"},"content":"        String taskSub \u003d restOfLine.substring(9);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"darshhs"},"content":"        String newTaskSub \u003d \"deadline \" + taskSub.replace(\"|\", \"/by\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"darshhs"},"content":"        ParseInput deadlinerParser \u003d new ParseInput(newTaskSub);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"darshhs"},"content":"        String[] deadlineInstruction \u003d deadlinerParser.parseDeadline();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"darshhs"},"content":"        Task task \u003d new Deadline(deadlineInstruction[0], deadlineInstruction[1], dataFile, numberTasks + 1, isTaskDone, false);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"darshhs"},"content":"        Command addCommand \u003d new AddCommand(task, false);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"darshhs"},"content":"        addCommand.executeCommand(tasks, new UserMessages(), new Storage(dataFile));","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"darshhs"},"content":"     * Loads an Event task from the file data and adds it to the task list.","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"darshhs"},"content":"     * @param restOfLine Remaining line content after the task index","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"darshhs"},"content":"     * @param isTaskDone Boolean indicating if the task is marked as done","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"darshhs"},"content":"    public void loadEvent(String restOfLine, boolean isTaskDone) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"darshhs"},"content":"        String taskSub \u003d restOfLine.substring(9);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"darshhs"},"content":"        String newTaskSub \u003d taskSub.replace(\"|\", \"/from\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"darshhs"},"content":"        newTaskSub \u003d \"event \" + newTaskSub.replace(\"-\", \" /to \");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"darshhs"},"content":"        ParseInput eventParser \u003d new ParseInput(newTaskSub);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"darshhs"},"content":"        String[] eventInstruction \u003d eventParser.parseEvent();","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"darshhs"},"content":"        Task task \u003d new Event(eventInstruction[0], eventInstruction[1], eventInstruction[2], dataFile, numberTasks + 1, isTaskDone, false);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"darshhs"},"content":"        Command addCommand \u003d new AddCommand(task, false);","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"darshhs"},"content":"        addCommand.executeCommand(tasks, new UserMessages(), new Storage(dataFile));","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":229}},{"path":"src/main/java/michael/TaskList/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.TaskList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-12T00:11:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":" * This class handles the creation of Deadline type tasks.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":" * Deadline tasks override methods to customize how task data","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":" * is formatted for file writing and user display.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"    protected String by;","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"     * Constructor for Deadline tasks, where Deadline is a subclass of Task.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"     * @param description  Description of the deadline task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"     * @param by           Deadline time or date for the task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"     * @param dataFilePath Location where the deadline task data will be written to","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"     * @param index        Current index of the task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"     * @param isTaskDone   Boolean value to show if the task has already been marked as completed","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     * @param isDataNew    Boolean value to show if the current task is newly created","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"     *                     or if it already exists in the data file","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"    public Deadline(String description, String by, String dataFilePath, int index, boolean isTaskDone, boolean isDataNew) {","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"        super(description, index, \"D\", isTaskDone);","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"        if (isDataNew) {","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"            writeFile(dataFilePath);","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"     * Method to create a formatted string that represents how","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"     * a Deadline task will be stored in the tasks array.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"     * It extends the base Task format by appending the deadline.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"     * @return String formatted for file storage of Deadline task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"    public String writeFileString() {","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"        return super.writeFileString() + \" | \" + by;","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"     * Converts the Deadline task into a formatted string representation","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"     * specifically for user display. Includes the deadline information.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darshhs"},"content":"     * @return Human-readable string representation of the Deadline task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darshhs"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darshhs"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false}],"authorContributionMap":{"darshhs":53}},{"path":"src/main/java/michael/TaskList/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.TaskList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-12T00:11:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":" * This class handles the creation of Event type tasks.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":" * Event tasks override methods to customize how task data","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":" * is formatted for file writing and user display.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-12T00:11:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"    protected String from;","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"    protected String to;","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"     * Constructor for Event tasks, where Event is a subclass of Task.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"     * @param description  Description of the event task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"     * @param from         Start time of the event","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"     * @param to           End time of the event","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     * @param dataFilePath Location where the event task data will be written to","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"     * @param index        Current index of the task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"     * @param isTaskDone   Boolean value to show if the task has already been marked as completed","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"     * @param isDataNew    Boolean value to show if the current task is newly created","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"     *                     or if it already exists in the data file","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"    public Event(String description, String from, String to, String dataFilePath, int index, boolean isTaskDone, boolean isDataNew) {","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"        super(description, index, \"E\", isTaskDone);","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"        if (isDataNew) {","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"            writeFile(dataFilePath);","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"     * Method to create a formatted string that represents how","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"     * an Event task will be stored in the data file.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"     * It extends the base Task format by appending start and end times.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"     * @return String formatted for file storage of Event task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"    public String writeFileString() {","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"        return super.writeFileString() + \" | \" + from + \"-\" + to;","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darshhs"},"content":"     * Method to create a formatted string that represents how","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darshhs"},"content":"     * a Event task will be stored in the tasks array.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darshhs"},"content":"     * It extends the base Task format by appending the duration.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darshhs"},"content":"     * @return String formatted for file storage of Event task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darshhs"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darshhs"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false}],"authorContributionMap":{"darshhs":58}},{"path":"src/main/java/michael/TaskList/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.TaskList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-18T15:34:59","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import static michael.Storage.Storage.appendToFile;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":" * This class represents a generic Task object.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":" * It stores the description, status, type, and index of a task,","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":" * and provides methods to manipulate and format task data.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"public class Task {","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"    protected String description;","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"    protected String taskType;","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"    protected int taskIndex;","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"     * Getter for the description of the task.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"     * @return Task description","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"    public String getDescription() {","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"        return description;","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"     * Getter for the index of the task.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"     * @return Integer index of the task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"        return taskIndex;","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T00:22:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"     * @param description Description of the task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"     * @param index       Current index of the task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"     * @param taskType    Type of the task (e.g. Todo, Deadline, Event)","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"     * @param isTaskDone  Boolean indicating if the task is already completed","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"    public Task(String description, int index, String taskType, boolean isTaskDone) {","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darshhs"},"content":"        this.isDone \u003d isTaskDone;","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darshhs"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darshhs"},"content":"        this.taskIndex \u003d index;","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darshhs"},"content":"     * Creates a formatted string version of the task that is","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darshhs"},"content":"     * suitable for writing to a data file.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darshhs"},"content":"     * @return Formatted string representation of the task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darshhs"},"content":"    public String writeFileString() {","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darshhs"},"content":"        return taskIndex + \". \" + taskType + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darshhs"},"content":"     * Writes the current task data into the given file.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darshhs"},"content":"     * @param dataFile The path to the file where task data will be stored","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darshhs"},"content":"    public void writeFile(String dataFile) {","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darshhs"},"content":"        String taskString \u003d writeFileString();","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darshhs"},"content":"        appendToFile(dataFile, taskString + System.lineSeparator());","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-23T10:12:50","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darshhs"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darshhs"},"content":"     * \"X\" if completed, otherwise a blank space.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darshhs"},"content":"     * @return Status icon string","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darshhs"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darshhs"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darshhs"},"content":"     * Marks the current task as completed (isDone \u003d true).","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darshhs"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darshhs"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darshhs"},"content":"     * Marks the current task as not yet completed (isDone \u003d false).","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darshhs"},"content":"    public void markAsUndone() {","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darshhs"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-04T00:44:12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darshhs"},"content":"     * Converts the task into a formatted string representation","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darshhs"},"content":"     * for display to the user.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darshhs"},"content":"     * @return Human-readable string representation of the task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darshhs"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T00:44:12","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darshhs"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-09-04T00:44:12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-04T00:44:12","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false}],"authorContributionMap":{"darshhs":105}},{"path":"src/main/java/michael/TaskList/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.TaskList;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-12T00:11:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":" * This class handles the creation of Todo type tasks.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":" * Event tasks override methods to customize how task data","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":" * is formatted for file writing and user display.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"     * Constructor for Todo tasks, where todo is a subclass of Task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":"     * @param description  Description of task that has been parsed to remove the instruction (\"todo\")","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":"     * @param dataFilePath Location where the new data will be written to","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":"     * @param index        Current index of task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"     * @param isTaskDone   Boolean value to show if the task has been marked","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"     * @param isDataNew    Boolean value to show if the current task is new or if it is already in the data file","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"    public Todo(String description, String dataFilePath, int index, boolean isTaskDone, boolean isDataNew) {","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-19T13:02:23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"        super(description, index, \"T\", isTaskDone);","lastModifiedDate":"2025-09-22T17:11:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"        if (isDataNew) {","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"            writeFile(dataFilePath);","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-22T15:42:26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"     * Method to create a formatted string that represents how","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"     * a Todo task will be stored in the tasks array file.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"     *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"     * @return String formatted for file storage of Todo task","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"    @Override","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"    public String toString() {","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-09-19T13:02:23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-09-04T00:48:58","isFullCredit":false}],"authorContributionMap":{"darshhs":38}},{"path":"src/main/java/michael/Ui/UserMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"package michael.Ui;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"darshhs"},"content":"import michael.TaskList.Task;","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"darshhs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"darshhs"},"content":"import static michael.Michael.numberTasks;","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"darshhs"},"content":"/**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":" *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":" * This class handles user-facing messages for the chatbot.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"darshhs"},"content":" * Each method outputs formatted messages to the console to inform the user","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"darshhs"},"content":" * about the application\u0027s state and operations performed on tasks.","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"darshhs"},"content":" *","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"darshhs"},"content":" */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"darshhs"},"content":"public class UserMessages {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"    public UserMessages() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"darshhs"},"content":"     * Prints welcome message","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"darshhs"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"darshhs"},"content":"        String message \u003d \"Welcome to Michael\u0027s Task Manager!\\n\" +","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"darshhs"},"content":"                \"Let\u0027s get things done...\";","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"darshhs"},"content":"        System.out.println(message);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"darshhs"},"content":"    public void border() {","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"darshhs"},"content":"     * Prints exit message","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"darshhs"},"content":"    public void exitMessage() {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"darshhs"},"content":"        String message \u003d \"Okay team, that’s a wrap. I am leaving. Goodbye.\";","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"darshhs"},"content":"        System.out.println(message);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"darshhs"},"content":"     * Prints all the tasks in the file","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"darshhs"},"content":"    public void addTaskMessage(Task t, int numberTasks) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"Boom! Instant classic task, added:\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"darshhs"},"content":"        System.out.println(t);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"Now you have \" + numberTasks + \" task(s) in the list.\");","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"darshhs"},"content":"     * Prints message when each task is marked","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"darshhs"},"content":"    public void markTaskMessage(Task currentTask) {","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"Yes! Task is done. I am very proud of you. Like, manager-of-the-year proud:\"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"darshhs"},"content":"        );","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"darshhs"},"content":"        System.out.println(currentTask);","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"darshhs"},"content":"     * Prints message when each task is unmarked","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"darshhs"},"content":"    public void unmarkTaskMessage(Task currentTask) {","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"I’m not superstitious, but I am a little ’stitious… Let’s unmark that task:\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"darshhs"},"content":"        System.out.println(currentTask);","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"darshhs"},"content":"     * Prints message when each task is deleted","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"darshhs"},"content":"    public void deleteTaskMessage(Task removedTask, int numberTasks) {","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"Goodbye, task. The worst thing about tasks was the dementors. Just kidding. Deleted:\");","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"darshhs"},"content":"        System.out.println(removedTask);","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"Now you have \" + numberTasks + \" task(s) in the list.\");","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"darshhs"},"content":"     * Prints message when users asks to see the list of tasks","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"darshhs"},"content":"    public void showListMessage(ArrayList\u003cTask\u003e tasks, int numberTasks) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"Hello there! Certainly, here are the tasks in your list:\");","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"darshhs"},"content":"        for (int i \u003d 0; i \u003c numberTasks; i++) {","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"darshhs"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"darshhs"},"content":"        }","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"You currently have \" + numberTasks + \" task(s)\");","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T20:56:55","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"darshhs"},"content":"    /**","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"darshhs"},"content":"     * Prints message when users asks to find all tasks that contains a specific keyword","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"darshhs"},"content":"     */","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"darshhs"},"content":"    public void findTasksMessage() {","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"darshhs"},"content":"        border();","lastModifiedDate":"2025-10-03T17:44:37","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"darshhs"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"darshhs"},"content":"    }","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"darshhs"},"content":"","lastModifiedDate":"2025-10-03T15:33:53","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"darshhs"},"content":"}","lastModifiedDate":"2025-10-02T23:53:44","isFullCredit":false}],"authorContributionMap":{"darshhs":112}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darshhs"},"content":"todo homework","lastModifiedDate":"2025-09-11T01:34:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"darshhs"},"content":"make bed","lastModifiedDate":"2025-09-11T01:34:30","isFullCredit":false}],"authorContributionMap":{"darshhs":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25T17:23:26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"darshhs"},"content":"@REM javac  -cp C:\\Users\\darshana\\CS2113_local\\ip\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-09-11T01:34:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"darshhs"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2025-09-11T01:34:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"darshhs"},"content":"java -classpath ..\\bin Michael \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-08-31T14:19:12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false}],"authorContributionMap":{"darshhs":3,"-":19}}]
