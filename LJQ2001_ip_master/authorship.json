[{"path":"src/main/java/resonant/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"/** Custom exception type for Resonant/Duke-specific errors. */","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"        super(message);","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false}],"authorContributionMap":{"LJQ2001":8}},{"path":"src/main/java/resonant/Resonant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * Resonant is a simple CLI chatbot that:","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * \u003cul\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" *   \u003cli\u003eEchoes and stores user inputs as tasks,\u003c/li\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" *   \u003cli\u003eLists tasks with indices and status,\u003c/li\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" *   \u003cli\u003eMarks/unmarks tasks as done using commands \"mark N\" / \"unmark N\",\u003c/li\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":" *   \u003cli\u003eAdds ToDos via \"todo \u0026lt;desc\u0026gt;\",\u003c/li\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":" *   \u003cli\u003eAdds Deadlines via \"deadline \u0026lt;desc\u0026gt; /by \u0026lt;when\u0026gt;\",\u003c/li\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":" *   \u003cli\u003eAdds Events via \"event \u0026lt;desc\u0026gt; /from \u0026lt;start\u0026gt; /to \u0026lt;end\u0026gt;\",\u003c/li\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":" *   \u003cli\u003eExits on \"bye\".\u003c/li\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":" *","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003eStorage is an in-memory fixed-size array of up to 100 tasks.","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":" * Dates/times are treated as plain strings (no parsing needed).\u003c/p\u003e","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"public class Resonant {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Constants \u0026 Configuration \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    private static final int MAX_TASKS \u003d 100; // avoid magic number","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"    // Commands and keywords (avoid magic strings)","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_BYE \u003d \"bye\";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_LIST \u003d \"list\";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_MARK \u003d \"mark \";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_UNMARK \u003d \"unmark \";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_TODO \u003d \"todo \";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_DEADLINE \u003d \"deadline \";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_EVENT \u003d \"event \";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"    private static final String KW_BY \u003d \"/by\";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"    private static final String KW_FROM \u003d \"/from\";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"    private static final String KW_TO \u003d \"/to\";","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Domain Model (A-Inheritance) \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"    static class Task {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"        protected final String description;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"        protected boolean isDone;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"        Task(String description) {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"            this.description \u003d description;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"        void mark() { this.isDone \u003d true; }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"        void unmark() { this.isDone \u003d false; }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"        String getStatusIcon() { return isDone ? \"X\" : \" \"; }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"        /** Base renders \"[\u003cstatus\u003e] description\". Subclasses prepend their type icon and optionally append details. */","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"        @Override","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"        public String toString() {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"            return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"    static class Todo extends Task {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"        Todo(String description) { super(description); }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"        @Override public String toString() { return \"[T]\" + super.toString(); }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"    static class Deadline extends Task {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"        private final String by;","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"        Deadline(String description, String by) {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"            super(description);","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"            this.by \u003d by;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"        @Override public String toString() { return \"[D]\" + super.toString() + \" (by: \" + by + \")\"; }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":"    static class Event extends Task {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":"        private final String from;","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":"        private final String to;","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"        Event(String description, String from, String to) {","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"            super(description);","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"            this.from \u003d from;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"            this.to \u003d to;","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LJQ2001"},"content":"        @Override public String toString() { return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\"; }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Storage \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LJQ2001"},"content":"    private static final Task[] tasks \u003d new Task[MAX_TASKS];","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LJQ2001"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command Parsing \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LJQ2001"},"content":"    private enum CommandType { LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, BYE, UNKNOWN }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LJQ2001"},"content":"    private record Command(CommandType type, String arg) { }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LJQ2001"},"content":"    /** Parses the raw input into a high-level command and its argument (if any). */","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LJQ2001"},"content":"    private static Command parseCommand(String input) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LJQ2001"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.UNKNOWN, null);","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LJQ2001"},"content":"        if (input.equals(CMD_BYE)) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.BYE, null);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LJQ2001"},"content":"        } else if (input.equals(CMD_LIST)) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.LIST, null);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LJQ2001"},"content":"        } else if (input.startsWith(CMD_MARK)) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.MARK, input.substring(CMD_MARK.length()).trim());","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LJQ2001"},"content":"        } else if (input.startsWith(CMD_UNMARK)) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.UNMARK, input.substring(CMD_UNMARK.length()).trim());","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LJQ2001"},"content":"        } else if (input.startsWith(CMD_TODO)) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.TODO, input.substring(CMD_TODO.length()).trim());","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LJQ2001"},"content":"        } else if (input.startsWith(CMD_DEADLINE)) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.DEADLINE, input.substring(CMD_DEADLINE.length()).trim());","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LJQ2001"},"content":"        } else if (input.startsWith(CMD_EVENT)) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.EVENT, input.substring(CMD_EVENT.length()).trim());","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LJQ2001"},"content":"        } else {","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LJQ2001"},"content":"            // A-Exceptions: unknown commands are errors (do not auto-convert to todo)","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LJQ2001"},"content":"            return new Command(CommandType.UNKNOWN, input);","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d REPL \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LJQ2001"},"content":"    /** Runs the Resonant chatbot REPL until the user types \"bye\". */","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LJQ2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LJQ2001"},"content":"        greet();","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LJQ2001"},"content":"        try (Scanner scanner \u003d new Scanner(System.in)) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LJQ2001"},"content":"            while (true) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LJQ2001"},"content":"                String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LJQ2001"},"content":"                Command cmd \u003d parseCommand(input);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LJQ2001"},"content":"                if (cmd.type() \u003d\u003d CommandType.BYE) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LJQ2001"},"content":"                    box(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LJQ2001"},"content":"                    break; // guard clause keeps happy path un-indented","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LJQ2001"},"content":"                }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LJQ2001"},"content":"                execute(cmd);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command Execution \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LJQ2001"},"content":"    private static void execute(Command cmd) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LJQ2001"},"content":"        try {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LJQ2001"},"content":"            switch (cmd.type()) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LJQ2001"},"content":"                case LIST -\u003e printList();","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LJQ2001"},"content":"                case MARK -\u003e handleMarkUnmark(cmd.arg(), true);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LJQ2001"},"content":"                case UNMARK -\u003e handleMarkUnmark(cmd.arg(), false);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LJQ2001"},"content":"                case TODO -\u003e handleTodo(cmd.arg());","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LJQ2001"},"content":"                case DEADLINE -\u003e handleDeadline(cmd.arg());","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LJQ2001"},"content":"                case EVENT -\u003e handleEvent(cmd.arg());","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LJQ2001"},"content":"                case UNKNOWN -\u003e {","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LJQ2001"},"content":"                    String unknown \u003d cmd.arg() \u003d\u003d null ? \"\" : (\" \u0027\" + cmd.arg() + \"\u0027\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LJQ2001"},"content":"                    throw new DukeException(","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LJQ2001"},"content":"                            \"I don’t recognise that command\" + unknown + \".\\n\" +","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LJQ2001"},"content":"                                    \"Try: list | todo \u003cdesc\u003e | deadline \u003cdesc\u003e /by \u003cwhen\u003e | \" +","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LJQ2001"},"content":"                                    \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e | mark N | unmark N | bye\"","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"LJQ2001"},"content":"                    );","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LJQ2001"},"content":"                }","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LJQ2001"},"content":"                case BYE -\u003e { /* handled in main */ }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LJQ2001"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LJQ2001"},"content":"            box(\" OOPS!!! \" + e.getMessage());","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d Command Handlers \u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"LJQ2001"},"content":"    private static void handleTodo(String desc) throws DukeException {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"LJQ2001"},"content":"        if (desc \u003d\u003d null || desc.isEmpty()) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"A todo needs a description. Usage: todo \u003cdesc\u003e\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"LJQ2001"},"content":"        addTask(new Todo(desc));","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"LJQ2001"},"content":"    /** Handle body of \"deadline \u003cdesc\u003e /by \u003cwhen\u003e\" (body excludes the leading keyword). */","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"LJQ2001"},"content":"    private static void handleDeadline(String body) throws DukeException {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"LJQ2001"},"content":"        if (body \u003d\u003d null || body.isEmpty()) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Deadline requires a description and \u0027/by\u0027. Usage: deadline \u003cdesc\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"LJQ2001"},"content":"        String[] split \u003d splitOnKeyword(body, KW_BY);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"LJQ2001"},"content":"        String desc \u003d split[0];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"LJQ2001"},"content":"        String by \u003d split[1];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"LJQ2001"},"content":"        if (by \u003d\u003d null) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Missing \u0027/by\u0027. Usage: deadline \u003cdesc\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"LJQ2001"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Deadline description cannot be empty.\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"LJQ2001"},"content":"        addTask(new Deadline(desc, by));","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"LJQ2001"},"content":"    /** Handle body of \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\" (body excludes the leading keyword). */","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"LJQ2001"},"content":"    private static void handleEvent(String body) throws DukeException {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"LJQ2001"},"content":"        if (body \u003d\u003d null || body.isEmpty()) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Event requires a description, \u0027/from\u0027, and \u0027/to\u0027. Usage: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"LJQ2001"},"content":"        String[] splitFrom \u003d splitOnKeyword(body, KW_FROM);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"LJQ2001"},"content":"        String desc \u003d splitFrom[0];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"LJQ2001"},"content":"        String fromPart \u003d splitFrom[1];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"LJQ2001"},"content":"        if (fromPart \u003d\u003d null) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Missing \u0027/from\u0027. Usage: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"LJQ2001"},"content":"        String[] splitTo \u003d splitOnKeyword(fromPart, KW_TO);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"LJQ2001"},"content":"        String from \u003d splitTo[0];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"LJQ2001"},"content":"        String to \u003d splitTo[1];","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"LJQ2001"},"content":"        if (to \u003d\u003d null) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Missing \u0027/to\u0027. Usage: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"LJQ2001"},"content":"        if (desc.isEmpty()) {","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Event description cannot be empty.\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"LJQ2001"},"content":"        if (from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2025-09-16T23:19:13","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Please provide both start and end times. Example: event project /from Mon 2pm /to 4pm\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"LJQ2001"},"content":"        addTask(new Event(desc, from, to));","lastModifiedDate":"2025-09-09T21:00:51","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"LJQ2001"},"content":"    /** Handles both \"mark N\" and \"unmark N\" (N is 1-based). */","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"LJQ2001"},"content":"    private static void handleMarkUnmark(String indexText, boolean mark) throws DukeException {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"LJQ2001"},"content":"        String action \u003d mark ? \"mark\" : \"unmark\";","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"LJQ2001"},"content":"        if (indexText \u003d\u003d null || indexText.isEmpty()) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Provide a task number. Usage: \" + action + \" N\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"LJQ2001"},"content":"        final int idx;","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"LJQ2001"},"content":"        try {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"LJQ2001"},"content":"            idx \u003d Integer.parseInt(indexText);","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"LJQ2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Task number must be a positive integer. Example: \" + action + \" 2\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"LJQ2001"},"content":"        if (idx \u003c 1 || idx \u003e taskCount) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Task number \" + idx + \" is out of range. You have \" + taskCount + \" task(s).\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"LJQ2001"},"content":"        Task t \u003d tasks[idx - 1];","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"LJQ2001"},"content":"        if (mark) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"LJQ2001"},"content":"            t.mark();","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"LJQ2001"},"content":"            box(\" Nice! I\u0027ve marked this task as done:\", \"   \" + t);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"LJQ2001"},"content":"        } else {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"LJQ2001"},"content":"            t.unmark();","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"LJQ2001"},"content":"            box(\" OK, I\u0027ve marked this task as not done yet:\", \"   \" + t);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"LJQ2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Utilities \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"LJQ2001"},"content":"    private static void greet() {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"LJQ2001"},"content":"        box(\" Hello! I\u0027m Resonant\", \" What can I do for you?\");","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"LJQ2001"},"content":"    /** Splits a text by the first occurrence of {@code keyword}. Returns [leftTrimmed, rightTrimmedOrNull]. */","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"LJQ2001"},"content":"    private static String[] splitOnKeyword(String text, String keyword) {","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"LJQ2001"},"content":"        int idx \u003d text.indexOf(keyword);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"LJQ2001"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"LJQ2001"},"content":"            return new String[] { text.trim(), null };","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"LJQ2001"},"content":"        String left \u003d text.substring(0, idx).trim();","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"LJQ2001"},"content":"        String right \u003d text.substring(idx + keyword.length()).trim();","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"LJQ2001"},"content":"        return new String[] { left, right };","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"LJQ2001"},"content":"    /** Adds a task (any type), if capacity allows, and prints the standardized box. */","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"LJQ2001"},"content":"    private static void addTask(Task task) throws DukeException {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"LJQ2001"},"content":"        if (taskCount \u003e\u003d MAX_TASKS) {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Your task list is full (\" + MAX_TASKS + \" items). Consider deleting some tasks.\");","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"LJQ2001"},"content":"        tasks[taskCount++] \u003d task;","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"LJQ2001"},"content":"        box(","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"LJQ2001"},"content":"                \" Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"LJQ2001"},"content":"                \"   \" + task,","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"LJQ2001"},"content":"                \" Now you have \" + taskCount + \" \" + (taskCount \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"LJQ2001"},"content":"        );","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"LJQ2001"},"content":"    /** Prints the current task list with indices and status/type icons. */","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"LJQ2001"},"content":"    private static void printList() {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"LJQ2001"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"LJQ2001"},"content":"            box(\" Your list is empty.\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"LJQ2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"LJQ2001"},"content":"        sb.append(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"LJQ2001"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"LJQ2001"},"content":"            sb.append(\u0027\\n\u0027).append(\u0027 \u0027).append(i + 1).append(\u0027.\u0027).append(tasks[i]);","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"LJQ2001"},"content":"        box(sb.toString());","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"LJQ2001"},"content":"    /** Prints a box with the given lines inside. */","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"LJQ2001"},"content":"    private static void box(String... lines) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"LJQ2001"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"LJQ2001"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"LJQ2001"},"content":"            System.out.println(line);","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"LJQ2001"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false}],"authorContributionMap":{"LJQ2001":291}}]
