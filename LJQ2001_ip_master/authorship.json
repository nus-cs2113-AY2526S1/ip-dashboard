[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"# Resonant User Guide","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"Welcome to **Resonant**, your friendly command-line task manager chatbot!  ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"Resonant helps you keep track of your daily tasks, deadlines, and events ‚Äî all through simple text commands.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"## üìñ Table of Contents","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"1. [Introduction](#-introduction)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"2. [Quick Start](#-quick-start)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"3. [Features](#-features)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"    - [List Tasks](#list-tasks)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"    - [Adding Todo](#adding-todo)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"    - [Adding Deadlines](#adding-deadlines)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"    - [Adding Events](#adding-events)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"    - [Deleting Tasks](#deleting-tasks)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    - [Mark Tasks](#mark-tasks)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"    - [Unmark Tasks](#unmark-task)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    - [Find Tasks](#find-tasks)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"    - [Exit Program](#exit-program)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"4. [Command Summary](#-command-summary)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"# üí° Introduction","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"**Resonant** is a simple text-based chatbot that helps you manage tasks quickly and efficiently.  ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"Type a command, press **Enter**, and Resonant will do the rest.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"todo read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"deadline submit report /by 2025-10-10","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"event meeting /at Friday 2pm","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"bye","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"# ‚öôÔ∏è Quick Start","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"2. Download the latest .jar file from https://github.com/LJQ2001/ip/releases/tag/A-release","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"3. opy the file to the folder you want to use as the home folder for Resonant.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar ip.jar command to run the application.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"# üöÄ Features ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"## List Tasks","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"Show all tasks that is added inside Resonant in the past","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"`list`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"Resonant show all tasks that has been stored and their current status.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"Example output :","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":" Here are the tasks in your list:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":" 1.[T][ ] read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":" 2.[T][ ] cooking","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":" 3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":" 4.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LJQ2001"},"content":"## Adding Todo","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LJQ2001"},"content":"Adding a general tasks without any date of time attached to it.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LJQ2001"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LJQ2001"},"content":"`todo read book`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LJQ2001"},"content":"Resonant adds a new todo task and confirms it has been added to your list.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LJQ2001"},"content":"Example output :","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LJQ2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LJQ2001"},"content":"       [T][ ] borrow book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LJQ2001"},"content":"     Now you have 5 tasks in the list.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LJQ2001"},"content":"## Adding deadlines","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LJQ2001"},"content":"Adds a task that must be completed by a specific date and time.  ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LJQ2001"},"content":"This helps you keep track of assignments, submissions, or other time-sensitive tasks.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LJQ2001"},"content":"`deadline \u003cdescription\u003e /by \u003cdate or time\u003e`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LJQ2001"},"content":"`deadline submit report /by 2025-10-10`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LJQ2001"},"content":"Resonant adds a new deadline task and confirms it has been added to your list.  ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LJQ2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LJQ2001"},"content":"[D][ ] submit report (by: 2025-10-10)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LJQ2001"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LJQ2001"},"content":"## Adding Events","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LJQ2001"},"content":"Adding a task that tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LJQ2001"},"content":"`event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LJQ2001"},"content":"`event project meeting /from Mon 2pm /to 4pm`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LJQ2001"},"content":"Resonant adds a new event task and confirms it has been added to your list.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LJQ2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LJQ2001"},"content":"       [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LJQ2001"},"content":"     Now you have 7 tasks in the list.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LJQ2001"},"content":"## Deleting Tasks","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LJQ2001"},"content":"Deleting a specific task from the list.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LJQ2001"},"content":"`delete \u003cNumber\u003e`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LJQ2001"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LJQ2001"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"LJQ2001"},"content":"     1.[T][X] read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"LJQ2001"},"content":"     2.[D][X] return book (by: June 6th)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"LJQ2001"},"content":"     3.[E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"LJQ2001"},"content":"     4.[T][X] join sports club","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"LJQ2001"},"content":"     5.[T][ ] borrow book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"LJQ2001"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"LJQ2001"},"content":"delete 3","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"LJQ2001"},"content":"Resonant will delete that task based on its numbered position on the list while confirming the deletion to the user.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"LJQ2001"},"content":" Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"LJQ2001"},"content":"       [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"LJQ2001"},"content":"     Now you have 4 tasks in the list.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"LJQ2001"},"content":"     ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"LJQ2001"},"content":" list  ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"LJQ2001"},"content":"     ____________________________________________________________  ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"LJQ2001"},"content":"     ____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"LJQ2001"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"LJQ2001"},"content":"     1.[T][X] read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"LJQ2001"},"content":"     2.[D][X] return book (by: June 6th)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"LJQ2001"},"content":"     3.[T][X] join sports club","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"LJQ2001"},"content":"     4.[T][ ] borrow book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"LJQ2001"},"content":"## Mark Tasks","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"LJQ2001"},"content":"Marking a task as done or complete.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"LJQ2001"},"content":"`mark \u003cnumber\u003e`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"LJQ2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"LJQ2001"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"LJQ2001"},"content":"2.[T][ ] cooking","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"LJQ2001"},"content":"3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"LJQ2001"},"content":"4.[E][X] exam (from: monday 6pm to: 9pm)`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"LJQ2001"},"content":"mark 2","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"LJQ2001"},"content":"Resonant will mark the task based on its numbered position on the list with an X symbol.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"LJQ2001"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"LJQ2001"},"content":"   [T][X] cooking","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"LJQ2001"},"content":"   ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"LJQ2001"},"content":" list","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"LJQ2001"},"content":" Here are the tasks in your list:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"LJQ2001"},"content":" 1.[T][ ] read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"LJQ2001"},"content":" 2.[T][X] cooking","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"LJQ2001"},"content":" 3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"LJQ2001"},"content":" 4.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"LJQ2001"},"content":"## Unmark Task","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"LJQ2001"},"content":"Unmarking a task from complete to incomplete.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"LJQ2001"},"content":"`unmark \u003cnumber\u003e`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"LJQ2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"LJQ2001"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"LJQ2001"},"content":"2.[T][X] cooking","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"LJQ2001"},"content":"3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"LJQ2001"},"content":"4.[E][X] exam (from: monday 6pm to: 9pm)`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"LJQ2001"},"content":"unmark 2","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"LJQ2001"},"content":"Resonant will unmark the task based on its numbered position on the list by removing the X symbol from that task.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"LJQ2001"},"content":" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"LJQ2001"},"content":"   [T][ ] cooking","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"LJQ2001"},"content":"   ","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"LJQ2001"},"content":" list","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"LJQ2001"},"content":" Here are the tasks in your list:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"LJQ2001"},"content":" 1.[T][ ] read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"LJQ2001"},"content":" 2.[T][ ] cooking","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"LJQ2001"},"content":" 3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"LJQ2001"},"content":" 4.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"LJQ2001"},"content":"## Find Tasks","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"LJQ2001"},"content":"Find a specific task.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"LJQ2001"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"LJQ2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"LJQ2001"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"LJQ2001"},"content":"2.[T][ ] exam study","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"LJQ2001"},"content":"3.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"LJQ2001"},"content":"find exam","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25T00:03:55","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04T21:44:28","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"LJQ2001"},"content":"Resonant will find the tasks that has the keyword in the task\u0027s name.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"LJQ2001"},"content":"1.[T][ ] exam study","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"LJQ2001"},"content":"2.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"LJQ2001"},"content":"## Exit Program","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"LJQ2001"},"content":"Exit resonant.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"LJQ2001"},"content":"`bye`","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"LJQ2001"},"content":"The Resonant CLI program will exit and close with a goodbye message.","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"LJQ2001"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"LJQ2001"},"content":"# üß≠ Command Summary","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"LJQ2001"},"content":"| Command | Format | Example | Description |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"LJQ2001"},"content":"|----------|---------|----------|--------------|","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"LJQ2001"},"content":"| **Todo** | `todo \u003cdescription\u003e` | `todo read book` | Adds a general task without a date/time. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"LJQ2001"},"content":"| **Deadline** | `deadline \u003cdescription\u003e /by \u003cdate or time\u003e` | `deadline submit report /by 2025-10-10` | Adds a task with a specific due date/time. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"LJQ2001"},"content":"| **Event** | `event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e` | `event project meeting /from Mon 2pm /to 4pm` | Adds an event with start and end times. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"LJQ2001"},"content":"| **List** | `list` | `list` | Displays all tasks currently saved. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"LJQ2001"},"content":"| **Mark** | `mark \u003ctask number\u003e` | `mark 2` | Marks a specific task as done. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"LJQ2001"},"content":"| **Unmark** | `unmark \u003ctask number\u003e` | `unmark 2` | Marks a specific task as not done yet. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"LJQ2001"},"content":"| **Delete** | `delete \u003ctask number\u003e` | `delete 3` | Removes a task from the list. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"LJQ2001"},"content":"| **Find** | `find \u003ckeyword\u003e` | `find book` | Finds tasks containing the given keyword. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"LJQ2001"},"content":"| **Exit** | `bye` | `bye` | Exits Resonant and saves all tasks. |","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:25:48","isFullCredit":false}],"authorContributionMap":{"LJQ2001":334,"-":7}},{"path":"data/resonant.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"T | 0 | read book","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"T | 0 | cooking","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"D | 0 | assignment | choclate","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"E | 1 | exam | monday 6pm | 9pm","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"T | 0 | exam study","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false}],"authorContributionMap":{"LJQ2001":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"# Resonant User Guide","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"Welcome to **Resonant**, your friendly command-line task manager chatbot!  ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"Resonant helps you keep track of your daily tasks, deadlines, and events ‚Äî all through simple text commands.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"## üìñ Table of Contents","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"1. [Introduction](#-introduction)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"2. [Quick Start](#-quick-start)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"3. [Features](#-features)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"    - [List Tasks](#list-tasks)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"    - [Adding Todo](#adding-todo)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"    - [Adding Deadlines](#adding-deadlines)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"    - [Adding Events](#adding-events)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"    - [Deleting Tasks](#deleting-tasks)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    - [Mark Tasks](#mark-tasks)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"    - [Unmark Tasks](#unmark-task)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    - [Find Tasks](#find-tasks)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"    - [Exit Program](#exit-program)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"4. [Command Summary](#-command-summary)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"# üí° Introduction","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"**Resonant** is a simple text-based chatbot that helps you manage tasks quickly and efficiently.  ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"Type a command, press **Enter**, and Resonant will do the rest.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"todo read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"deadline submit report /by 2025-10-10","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"event meeting /at Friday 2pm","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"bye","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"# ‚öôÔ∏è Quick Start","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"1. Ensure you have Java 17 or above installed in your Computer.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"2. Download the latest .jar file from https://github.com/LJQ2001/ip/releases/tag/A-release","lastModifiedDate":"2025-10-05T22:12:31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"3. opy the file to the folder you want to use as the home folder for Resonant.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"4. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar ip.jar command to run the application.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"# üöÄ Features ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"## List Tasks","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"Show all tasks that is added inside Resonant in the past","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"`list`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"Resonant show all tasks that has been stored and their current status.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"Example output :","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":" Here are the tasks in your list:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":" 1.[T][ ] read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":" 2.[T][ ] cooking","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":" 3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":" 4.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LJQ2001"},"content":"## Adding Todo","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LJQ2001"},"content":"Adding a general tasks without any date of time attached to it.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LJQ2001"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LJQ2001"},"content":"`todo read book`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LJQ2001"},"content":"Resonant adds a new todo task and confirms it has been added to your list.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LJQ2001"},"content":"Example output :","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LJQ2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LJQ2001"},"content":"       [T][ ] borrow book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LJQ2001"},"content":"     Now you have 5 tasks in the list.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17T16:49:07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LJQ2001"},"content":"Adds a task that must be completed by a specific date and time.  ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LJQ2001"},"content":"This helps you keep track of assignments, submissions, or other time-sensitive tasks.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LJQ2001"},"content":"`deadline \u003cdescription\u003e /by \u003cdate or time\u003e`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LJQ2001"},"content":"`deadline submit report /by 2025-10-10`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LJQ2001"},"content":"Resonant adds a new deadline task and confirms it has been added to your list.  ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"``` ","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LJQ2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LJQ2001"},"content":"[D][ ] submit report (by: 2025-10-10)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LJQ2001"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LJQ2001"},"content":"## Adding Events","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LJQ2001"},"content":"Adding a task that tasks that start at a specific date/time and ends at a specific date/time.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LJQ2001"},"content":"`event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LJQ2001"},"content":"`event project meeting /from Mon 2pm /to 4pm`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LJQ2001"},"content":"Resonant adds a new event task and confirms it has been added to your list.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LJQ2001"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LJQ2001"},"content":"       [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LJQ2001"},"content":"     Now you have 7 tasks in the list.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LJQ2001"},"content":"## Deleting Tasks","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LJQ2001"},"content":"Deleting a specific task from the list.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LJQ2001"},"content":"`delete \u003cNumber\u003e`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LJQ2001"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LJQ2001"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"LJQ2001"},"content":"     1.[T][X] read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"LJQ2001"},"content":"     2.[D][X] return book (by: June 6th)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"LJQ2001"},"content":"     3.[E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"LJQ2001"},"content":"     4.[T][X] join sports club","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"LJQ2001"},"content":"     5.[T][ ] borrow book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"LJQ2001"},"content":"    ____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"LJQ2001"},"content":"delete 3","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"LJQ2001"},"content":"Resonant will delete that task based on its numbered position on the list while confirming the deletion to the user.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"LJQ2001"},"content":" Noted. I\u0027ve removed this task:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"LJQ2001"},"content":"       [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"LJQ2001"},"content":"     Now you have 4 tasks in the list.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"LJQ2001"},"content":"     ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"LJQ2001"},"content":" list  ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"LJQ2001"},"content":"     ____________________________________________________________  ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"LJQ2001"},"content":"     ____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"LJQ2001"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"LJQ2001"},"content":"     1.[T][X] read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"LJQ2001"},"content":"     2.[D][X] return book (by: June 6th)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"LJQ2001"},"content":"     3.[T][X] join sports club","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"LJQ2001"},"content":"     4.[T][ ] borrow book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"LJQ2001"},"content":"## Mark Tasks","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"LJQ2001"},"content":"Marking a task as done or complete.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"LJQ2001"},"content":"`mark \u003cnumber\u003e`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"LJQ2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"LJQ2001"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"LJQ2001"},"content":"2.[T][ ] cooking","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"LJQ2001"},"content":"3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"LJQ2001"},"content":"4.[E][X] exam (from: monday 6pm to: 9pm)`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"LJQ2001"},"content":"mark 2","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"LJQ2001"},"content":"Resonant will mark the task based on its numbered position on the list with an X symbol.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"LJQ2001"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"LJQ2001"},"content":"   [T][X] cooking","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"LJQ2001"},"content":"   ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"LJQ2001"},"content":" list","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"LJQ2001"},"content":" Here are the tasks in your list:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"LJQ2001"},"content":" 1.[T][ ] read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"LJQ2001"},"content":" 2.[T][X] cooking","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"LJQ2001"},"content":" 3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"LJQ2001"},"content":" 4.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"LJQ2001"},"content":"## Unmark Task","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"LJQ2001"},"content":"Unmarking a task from complete to incomplete.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"LJQ2001"},"content":"`unmark \u003cnumber\u003e`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"LJQ2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"LJQ2001"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"LJQ2001"},"content":"2.[T][X] cooking","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"LJQ2001"},"content":"3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"LJQ2001"},"content":"4.[E][X] exam (from: monday 6pm to: 9pm)`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"LJQ2001"},"content":"unmark 2","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"LJQ2001"},"content":"Resonant will unmark the task based on its numbered position on the list by removing the X symbol from that task.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"LJQ2001"},"content":"``` ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"LJQ2001"},"content":" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"LJQ2001"},"content":"   [T][ ] cooking","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"LJQ2001"},"content":"   ","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"LJQ2001"},"content":" list","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"LJQ2001"},"content":" Here are the tasks in your list:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"LJQ2001"},"content":" 1.[T][ ] read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"LJQ2001"},"content":" 2.[T][ ] cooking","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"LJQ2001"},"content":" 3.[D][ ] assignment (by: choclate)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"LJQ2001"},"content":" 4.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"LJQ2001"},"content":"## Find Tasks","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"LJQ2001"},"content":"Find a specific task.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"LJQ2001"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"LJQ2001"},"content":"Example usage:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"LJQ2001"},"content":"list","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"LJQ2001"},"content":"Here are the tasks in your list:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"LJQ2001"},"content":"1.[T][ ] read book","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"LJQ2001"},"content":"2.[T][ ] exam study","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"LJQ2001"},"content":"3.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"LJQ2001"},"content":"____________________________________________________________","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"LJQ2001"},"content":"find exam","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"LJQ2001"},"content":"Resonant will find the tasks that has the keyword in the task\u0027s name.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"LJQ2001"},"content":"1.[T][ ] exam study","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"LJQ2001"},"content":"2.[E][X] exam (from: monday 6pm to: 9pm)","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"LJQ2001"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"LJQ2001"},"content":"## Exit Program","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"LJQ2001"},"content":"Exit resonant.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"LJQ2001"},"content":"Example:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"LJQ2001"},"content":"`bye`","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"LJQ2001"},"content":"Expected outcome:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"LJQ2001"},"content":"The Resonant CLI program will exit and close with a goodbye message.","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"LJQ2001"},"content":"Example output:","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"LJQ2001"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"LJQ2001"},"content":"---","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"LJQ2001"},"content":"# üß≠ Command Summary","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"LJQ2001"},"content":"| Command | Format | Example | Description |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"LJQ2001"},"content":"|----------|---------|----------|--------------|","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"LJQ2001"},"content":"| **Todo** | `todo \u003cdescription\u003e` | `todo read book` | Adds a general task without a date/time. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"LJQ2001"},"content":"| **Deadline** | `deadline \u003cdescription\u003e /by \u003cdate or time\u003e` | `deadline submit report /by 2025-10-10` | Adds a task with a specific due date/time. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"LJQ2001"},"content":"| **Event** | `event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e` | `event project meeting /from Mon 2pm /to 4pm` | Adds an event with start and end times. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"LJQ2001"},"content":"| **List** | `list` | `list` | Displays all tasks currently saved. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"LJQ2001"},"content":"| **Mark** | `mark \u003ctask number\u003e` | `mark 2` | Marks a specific task as done. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"LJQ2001"},"content":"| **Unmark** | `unmark \u003ctask number\u003e` | `unmark 2` | Marks a specific task as not done yet. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"LJQ2001"},"content":"| **Delete** | `delete \u003ctask number\u003e` | `delete 3` | Removes a task from the list. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"LJQ2001"},"content":"| **Find** | `find \u003ckeyword\u003e` | `find book` | Finds tasks containing the given keyword. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"LJQ2001"},"content":"| **Exit** | `bye` | `bye` | Exits Resonant and saves all tasks. |","lastModifiedDate":"2025-10-05T21:56:40","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29T17:14:46","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07T18:33:52","isFullCredit":false}],"authorContributionMap":{"LJQ2001":318,"-":23}},{"path":"src/main/java/resonant/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"/** Custom exception type for Resonant/Duke-specific errors. */","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"    public DukeException(String message) {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"        super(message);","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false}],"authorContributionMap":{"LJQ2001":8}},{"path":"src/main/java/resonant/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"public class Main {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"        new Resonant(\"resonant.txt\").run();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":7}},{"path":"src/main/java/resonant/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.commands.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * Parses raw user input into executable {@link Command} objects.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * Supported commands include: {@code bye}, {@code list}, {@code mark},","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * {@code unmark}, {@code delete}, {@code todo}, {@code deadline}, {@code event},","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" * and {@code find}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"public class Parser {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_BYE \u003d \"bye\";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_LIST \u003d \"list\";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_MARK \u003d \"mark \";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_UNMARK \u003d \"unmark \";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_TODO \u003d \"todo \";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_DEADLINE \u003d \"deadline \";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_EVENT \u003d \"event \";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_DELETE \u003d \"delete \";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    private static final String CMD_FIND \u003d \"find \";","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    private static final String KW_BY \u003d \"/by\";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"    private static final String KW_FROM \u003d \"/from\";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"    private static final String KW_TO \u003d \"/to\";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     * Parses a line of user input and returns the corresponding {@link Command}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     * @param input Full input line from the user.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     * @return A {@link Command} instance that performs the requested action.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"     * @throws DukeException If the command is unknown or malformed (e.g., missing required arguments).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"        if (input \u003d\u003d null || input.isBlank()) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"            throw unknown(input);","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"        if (input.equals(CMD_BYE)) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"            return new ExitCommand();","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"        if (input.equals(CMD_LIST)) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"            return new ListCommand();","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"        if (input.startsWith(CMD_MARK)) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"            return new MarkCommand(parseIndex(input.substring(CMD_MARK.length()), \"mark\"));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"        if (input.startsWith(CMD_UNMARK)) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"            return new UnmarkCommand(parseIndex(input.substring(CMD_UNMARK.length()), \"unmark\"));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"        if (input.startsWith(CMD_DELETE)) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"            return new DeleteCommand(parseIndex(input.substring(CMD_DELETE.length()), \"delete\"));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"        if (input.startsWith(CMD_TODO)) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"            String desc \u003d input.substring(CMD_TODO.length()).trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"            return new AddTodoCommand(desc);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"        if (input.startsWith(CMD_DEADLINE)) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"            String body \u003d input.substring(CMD_DEADLINE.length()).trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"            String[] s \u003d splitOnKeyword(body, KW_BY);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"            if (s[1] \u003d\u003d null) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"                throw new DukeException(\"Missing \u0027/by\u0027. Usage: deadline \u003cdesc\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"            return new AddDeadlineCommand(s[0], s[1]);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"        if (input.startsWith(CMD_EVENT)) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"            String body \u003d input.substring(CMD_EVENT.length()).trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"            String[] fromSplit \u003d splitOnKeyword(body, KW_FROM);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"            if (fromSplit[1] \u003d\u003d null) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"                throw new DukeException(\"Missing \u0027/from\u0027. Usage: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":"            String[] toSplit \u003d splitOnKeyword(fromSplit[1], KW_TO);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":"            if (toSplit[1] \u003d\u003d null) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":"                throw new DukeException(\"Missing \u0027/to\u0027. Usage: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"            return new AddEventCommand(fromSplit[0], toSplit[0], toSplit[1]);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"        if (input.startsWith(CMD_FIND)) {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LJQ2001"},"content":"            String kw \u003d input.substring(CMD_FIND.length()).trim();","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LJQ2001"},"content":"            return new FindCommand(kw);","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LJQ2001"},"content":"        throw unknown(input);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LJQ2001"},"content":"     * Creates a standardized {@link DukeException} for unknown commands, including a help hint.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LJQ2001"},"content":"     * @param raw The raw input that failed to parse (may be {@code null}).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LJQ2001"},"content":"     * @return A {@link DukeException} describing the error and listing valid commands.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LJQ2001"},"content":"    private static DukeException unknown(String raw) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LJQ2001"},"content":"        String unknown \u003d raw \u003d\u003d null ? \"\" : \" \u0027\" + raw + \"\u0027\";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LJQ2001"},"content":"        return new DukeException(","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LJQ2001"},"content":"                \"I don‚Äôt recognise that command\" + unknown + \".\\n\" +","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LJQ2001"},"content":"                        \"Try: list | todo \u003cdesc\u003e | deadline \u003cdesc\u003e /by \u003cwhen\u003e | \" +","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LJQ2001"},"content":"                        \"event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e | mark N | unmark N | delete N | find \u003ckeyword\u003e | bye\"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LJQ2001"},"content":"        );","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LJQ2001"},"content":"     * Parses a 1-based task index from a string for commands that operate on a single task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LJQ2001"},"content":"     * @param s      The string containing the index.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LJQ2001"},"content":"     * @param action The action name (used for error messages), e.g., {@code \"mark\"}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LJQ2001"},"content":"     * @return The parsed 1-based index.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LJQ2001"},"content":"     * @throws DukeException If the index is missing, non-numeric, or not positive.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LJQ2001"},"content":"    private static int parseIndex(String s, String action) throws DukeException {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LJQ2001"},"content":"        if (s \u003d\u003d null || s.isBlank()) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Provide a task number. Usage: \" + action + \" N\");","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LJQ2001"},"content":"        try {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LJQ2001"},"content":"            int idx \u003d Integer.parseInt(s.trim());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LJQ2001"},"content":"            if (idx \u003c 1) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LJQ2001"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LJQ2001"},"content":"            return idx;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LJQ2001"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Task number must be a positive integer. Example: \" + action + \" 2\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LJQ2001"},"content":"     * Splits a command body on the first occurrence of a keyword and returns","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LJQ2001"},"content":"     * the trimmed left and right parts.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LJQ2001"},"content":"     * @param text    The full command body, e.g., {@code \"return book /by June 6th\"}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LJQ2001"},"content":"     * @param keyword The delimiter keyword, e.g., {@code \"/by\"}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LJQ2001"},"content":"     * @return A two-element array: {@code [left, right]} where {@code right} may be {@code null} if the keyword is absent.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LJQ2001"},"content":"    private static String[] splitOnKeyword(String text, String keyword) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LJQ2001"},"content":"        int idx \u003d text.indexOf(keyword);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LJQ2001"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LJQ2001"},"content":"            return new String[]{ text.trim(), null };","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LJQ2001"},"content":"        String left \u003d text.substring(0, idx).trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LJQ2001"},"content":"        String right \u003d text.substring(idx + keyword.length()).trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LJQ2001"},"content":"        return new String[]{ left, right };","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":143}},{"path":"src/main/java/resonant/Resonant.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.commands.Command;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * The main entry point of the Resonant application.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * This class initializes the user interface, storage, and task list components.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * It then enters a command-processing loop, where it reads user input, parses it into a","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" * {@link Command}, executes it, and updates the task list accordingly.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":" *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003eResonant supports saving and loading tasks from persistent storage, and gracefully","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":" * handles both user and unexpected runtime errors.\u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"public class Resonant {","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-26T17:40:36","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"    private final Storage storage;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"    private final Ui ui;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a new {@code Resonant} instance using the given file path.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     * The constructor initializes the {@link Ui} and {@link Storage} objects and attempts to","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"     * load previously saved tasks. If loading fails, an empty {@link TaskList} is created instead.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * @param filePath The file path used for saving and loading task data.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"    public Resonant(String filePath) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"        try {","lastModifiedDate":"2025-09-26T17:29:00","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"            ui.showLoadingError();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-13T21:22:30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-09T20:36:13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"     * Runs the main event loop of the Resonant program.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"     * This method displays a welcome message, reads commands from the user, parses them,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"     * executes them, and handles any exceptions that occur during execution.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"     * The loop continues until an exit command is issued.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"    public void run() {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"        ui.showWelcome();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"        while (!isExit) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"            try {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"                ui.showLine();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2025-09-16T23:52:03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"            } catch (Exception e) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"                ui.showError(\"Unexpected error: \" + e.getMessage());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"            } finally {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"                ui.showLine();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-26T17:29:00","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-26T17:29:00","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-26T17:29:00","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-03T00:17:05","isFullCredit":false}],"authorContributionMap":{"LJQ2001":69}},{"path":"src/main/java/resonant/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Deadline;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Event;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Task;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Todo;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":"import java.io.IOException;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"import java.nio.file.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"import java.util.List;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":" * Handles reading and writing of task data to persistent storage.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":" * The {@code Storage} class is responsible for loading saved tasks from a file and","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":" * saving updated task lists back to disk. Tasks are stored in a simple pipe-delimited format,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":" * compatible with previous Duke implementations.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":" *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":" * Example file contents:","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":" * \u003cpre\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":" * T | 1 | read book","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":" * D | 0 | submit report | 2025-10-10","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":" * E | 1 | attend meeting | 10am | 12pm","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":" * \u003c/pre\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"public class Storage {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"    /** The directory where task data is stored. */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"    private final Path dataDir;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"    /** The file where task data is saved. */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"    private final Path dataFile;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code Storage} instance with the given file path.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"     * If the provided path is {@code null} or blank, a default file","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"     * named {@code resonant.txt} will be used in the {@code data/} directory.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"     * @param filePath the relative path to the storage file (can be {@code null})","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"        this.dataDir \u003d Paths.get(\"data\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"        this.dataFile \u003d dataDir.resolve(filePath \u003d\u003d null || filePath.isBlank() ? \"resonant.txt\" : filePath);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"     * Loads all tasks from the data file into memory.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"     * This method reads the file line-by-line, parses each entry, and reconstructs","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"     * the appropriate {@link Task} objects (e.g. {@link Todo}, {@link Deadline}, {@link Event}).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"     * If the file does not exist, it will create the required directories and return an empty list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"     * @return a list of {@link Task} objects loaded from the file","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"     * @throws IOException if an I/O error occurs while reading or creating the file","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"        if (Files.notExists(dataFile)) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"            if (Files.notExists(dataDir)) Files.createDirectories(dataDir);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"            return List.of();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(dataFile, StandardCharsets.UTF_8);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":"        for (String raw : lines) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":"            String line \u003d raw.trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":"            if (line.isEmpty()) continue;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":"            // Expected formats:","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"            // T | 1 | desc","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"            // D | 0 | desc | by","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"            // E | 1 | desc | from | to","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LJQ2001"},"content":"            if (parts.length \u003c 3) continue;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LJQ2001"},"content":"            try {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LJQ2001"},"content":"                String type \u003d parts[0].trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LJQ2001"},"content":"                boolean done \u003d \"1\".equals(parts[1].trim());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LJQ2001"},"content":"                switch (type) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LJQ2001"},"content":"                    case \"T\" -\u003e {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LJQ2001"},"content":"                        String desc \u003d joinRest(parts, 2);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LJQ2001"},"content":"                        if (!desc.isEmpty()) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LJQ2001"},"content":"                            Task t \u003d new Todo(desc);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LJQ2001"},"content":"                            if (done) t.mark();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LJQ2001"},"content":"                            tasks.add(t);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LJQ2001"},"content":"                        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LJQ2001"},"content":"                    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LJQ2001"},"content":"                    case \"D\" -\u003e {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LJQ2001"},"content":"                        if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LJQ2001"},"content":"                            String desc \u003d parts[2].trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LJQ2001"},"content":"                            String by \u003d joinRest(parts, 3);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LJQ2001"},"content":"                            Task t \u003d new Deadline(desc, by);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LJQ2001"},"content":"                            if (done) t.mark();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LJQ2001"},"content":"                            tasks.add(t);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LJQ2001"},"content":"                        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LJQ2001"},"content":"                    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LJQ2001"},"content":"                    case \"E\" -\u003e {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LJQ2001"},"content":"                        if (parts.length \u003e\u003d 5) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LJQ2001"},"content":"                            String desc \u003d parts[2].trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LJQ2001"},"content":"                            String from \u003d parts[3].trim();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LJQ2001"},"content":"                            String to \u003d joinRest(parts, 4);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LJQ2001"},"content":"                            Task t \u003d new Event(desc, from, to);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LJQ2001"},"content":"                            if (done) t.mark();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LJQ2001"},"content":"                            tasks.add(t);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LJQ2001"},"content":"                        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LJQ2001"},"content":"                    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LJQ2001"},"content":"                    default -\u003e { /* no-op for unknown types */}","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LJQ2001"},"content":"                }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LJQ2001"},"content":"            } catch (Exception ignored) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LJQ2001"},"content":"                // Skip malformed lines gracefully","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LJQ2001"},"content":"        return tasks;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LJQ2001"},"content":"     * Saves the given list of tasks to the storage file.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"LJQ2001"},"content":"     * Each task is serialized into a pipe-delimited line and written to disk.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"LJQ2001"},"content":"     * If the storage directory does not exist, it will be created automatically.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks the list of tasks to save","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"LJQ2001"},"content":"     * @throws IOException if an I/O error occurs while writing the file","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"LJQ2001"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"LJQ2001"},"content":"        if (Files.notExists(dataDir)) Files.createDirectories(dataDir);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"LJQ2001"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e(tasks.size());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"LJQ2001"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"LJQ2001"},"content":"            boolean done \u003d t.isDone();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"LJQ2001"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"LJQ2001"},"content":"                Todo todo \u003d (Todo) t;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"LJQ2001"},"content":"                lines.add(String.join(\" | \", \"T\", done ? \"1\" : \"0\", todo.description()));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"LJQ2001"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"LJQ2001"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"LJQ2001"},"content":"                lines.add(String.join(\" | \", \"D\", done ? \"1\" : \"0\", d.description(), d.by()));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"LJQ2001"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"LJQ2001"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"LJQ2001"},"content":"                lines.add(String.join(\" | \", \"E\", done ? \"1\" : \"0\", e.description(), e.from(), e.to()));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"LJQ2001"},"content":"            } else {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"LJQ2001"},"content":"                lines.add(String.join(\" | \", \"T\", done ? \"1\" : \"0\", t.description()));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"LJQ2001"},"content":"        Files.write(","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"LJQ2001"},"content":"                dataFile,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"LJQ2001"},"content":"                lines,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"LJQ2001"},"content":"                StandardCharsets.UTF_8,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"LJQ2001"},"content":"                StandardOpenOption.CREATE,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"LJQ2001"},"content":"                StandardOpenOption.TRUNCATE_EXISTING","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"LJQ2001"},"content":"        );","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"LJQ2001"},"content":"     * Joins all array elements starting from the given index using {@code \" | \"} as a separator.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"LJQ2001"},"content":"     * This helper is used when reconstructing task fields (e.g. descriptions that may contain delimiters).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"LJQ2001"},"content":"     * @param parts the split string array","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"LJQ2001"},"content":"     * @param start the starting index for concatenation","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"LJQ2001"},"content":"     * @return a trimmed string consisting of all joined parts","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"LJQ2001"},"content":"    private static String joinRest(String[] parts, int start) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"LJQ2001"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"LJQ2001"},"content":"        for (int i \u003d start; i \u003c parts.length; i++) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"LJQ2001"},"content":"            if (i \u003e start) sb.append(\" | \");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"LJQ2001"},"content":"            sb.append(parts[i].trim());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"LJQ2001"},"content":"        return sb.toString();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":179}},{"path":"src/main/java/resonant/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Task;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"import java.util.Collections;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"import java.util.List;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" * Represents a dynamic list of {@link Task} objects managed by the user.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":" * The {@code TaskList} class provides high-level operations for adding,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":" * retrieving, removing, and searching tasks. It enforces constraints such as","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":" * valid index access and a maximum task count of 100.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"public class TaskList {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    /** The internal modifiable list of tasks. */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"     * Constructs an empty {@code TaskList}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"    public TaskList() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code TaskList} initialized with an existing collection of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"     * If {@code initial} is {@code null}, the list will be initialized as empty.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"     * @param initial the initial list of tasks to populate, or {@code null} for an empty list","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"    public TaskList(List\u003cTask\u003e initial) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(initial \u003d\u003d null ? List.of() : initial);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"     * Returns the total number of tasks currently in the list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"     * @return the number of tasks","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"    public int size() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"        return tasks.size();","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"     * Retrieves a task based on its 1-based index.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"     * For example, {@code get(1)} retrieves the first task in the list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"     * @param index1Based the position of the task (1-based)","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"     * @return the {@link Task} at the specified index","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"     * @throws DukeException if the index is out of range","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"    public Task get(int index1Based) throws DukeException {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"        int i \u003d index1Based - 1;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Task number \" + index1Based + \" is out of range. You have \" + size() + \" task(s).\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"        return tasks.get(i);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"     * Adds a new task to the list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"     * The list has a hard limit of 100 tasks to prevent unbounded growth.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":"     * @param t the {@link Task} to add","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":"     * @throws DukeException if the task list already contains 100 items","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"    public void add(Task t) throws DukeException {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"        if (tasks.size() \u003e\u003d 100) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Your task list is full (100 items). Consider deleting some tasks.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LJQ2001"},"content":"        tasks.add(t);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LJQ2001"},"content":"     * Removes and returns the task at the specified 1-based index.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LJQ2001"},"content":"     * @param index1Based the position of the task to remove","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LJQ2001"},"content":"     * @return the removed {@link Task}","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LJQ2001"},"content":"     * @throws DukeException if the index is out of range","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LJQ2001"},"content":"    public Task remove(int index1Based) throws DukeException {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LJQ2001"},"content":"        Task t \u003d get(index1Based);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LJQ2001"},"content":"        tasks.remove(index1Based - 1);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LJQ2001"},"content":"        return t;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LJQ2001"},"content":"     * Finds all tasks that contain the given keyword (case-insensitive) in their description.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LJQ2001"},"content":"     * @param keyword the search term to match against task descriptions","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LJQ2001"},"content":"     * @return a list of matching {@link Task} objects; may be empty if no matches are found","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LJQ2001"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LJQ2001"},"content":"        String kw \u003d keyword.toLowerCase();","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LJQ2001"},"content":"        List\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LJQ2001"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LJQ2001"},"content":"            if (t.description().toLowerCase().contains(kw)) {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LJQ2001"},"content":"                out.add(t);","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LJQ2001"},"content":"        return out;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"LJQ2001"},"content":"     * Returns an unmodifiable view of the internal task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"LJQ2001"},"content":"     * This ensures external classes cannot modify the list directly.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"LJQ2001"},"content":"     * @return an unmodifiable {@link List} of tasks","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"LJQ2001"},"content":"    public List\u003cTask\u003e asList() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"LJQ2001"},"content":"        return Collections.unmodifiableList(tasks);","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":125}},{"path":"src/main/java/resonant/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * Handles all user interaction, including displaying messages,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * reading commands, and formatting outputs for the user interface.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * The {@code Ui} class is responsible for printing standard messages","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" * (welcome, error, goodbye), drawing separator lines, and boxing","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":" * text messages for consistent visual formatting in the console.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":" * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"public class Ui {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"    /** Scanner used to read user input from standard input (System.in). */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"            \" ____                                     \\n\"","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"                    + \"|  _ \\\\ ___  ___  ___  _ __   __ _ _ __   \\n\"","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"                    + \"| |_) / _ \\\\/ __|/ _ \\\\| \u0027_ \\\\ / _` | \u0027_ \\\\  \\n\"","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"                    + \"|  _ \u003c  __/\\\\__ \\\\ |_|  /| | | | (_| | | | | \\n\"","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"                    + \"|_| \\\\_\\\\___||___/\\\\___||_| |_|\\\\__,_|_| |_| T\\n\";","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code Ui} object and initializes the input scanner.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"    public Ui() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"     * Displays a welcome message when the program starts.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"     * The message is displayed within a bordered box for readability.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"    public void showWelcome() {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2025-10-05T22:58:41","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"        box(\" Hello! I\u0027m Resonant\", \" What can I do for you?\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"     * Reads a single line of user input, trims any leading and trailing spaces,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"     * and returns it as a command string.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"     * @return the trimmed user input command","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"    public String readCommand() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"     * Displays a horizontal separator line for visual structure in the console.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"     * Used to clearly separate command input and output sections.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"    public void showLine() {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"     * Displays an error message in a formatted box.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"     * Used when a {@link resonant.DukeException} or unexpected error occurs.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":"     * @param message the error message to display","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":"    public void showError(String message) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":"        box(\" OOPS!!! \" + message);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"     * Displays a message indicating that the saved data could not be loaded.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"LJQ2001"},"content":"     * This is typically called when the storage file is missing or corrupted.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"LJQ2001"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"LJQ2001"},"content":"        box(\" OOPS!!! Couldn\u0027t load saved tasks. Starting fresh.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"LJQ2001"},"content":"     * Displays a goodbye message when the user exits the program.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"LJQ2001"},"content":"     * Shown at the end of execution before termination.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"LJQ2001"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"LJQ2001"},"content":"        box(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"LJQ2001"},"content":"     * Displays one or more lines of text inside a formatted box with horizontal separators.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"LJQ2001"},"content":"     * Each line is printed in order, enclosed by top and bottom border lines for visual clarity.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"LJQ2001"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"LJQ2001"},"content":"     * @param lines one or more lines of text to display within the box","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"LJQ2001"},"content":"    public void box(String... lines) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"LJQ2001"},"content":"        showLine();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"LJQ2001"},"content":"        for (String line : lines) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"LJQ2001"},"content":"            System.out.println(line);","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"LJQ2001"},"content":"        showLine();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":114}},{"path":"src/main/java/resonant/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Deadline;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that adds a {@link Deadline} task to the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * The command requires a task description and a due date/time (after the /by keyword).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"    private final String desc;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"    private final String by;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     * Constructs an AddDeadlineCommand with the specified description and deadline.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     * @param desc Description of the deadline task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"     * @param by   The due date/time string provided by the user.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    public AddDeadlineCommand(String desc, String by) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by creating a new {@link Deadline} task,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     * adding it to the task list, saving the updated list to storage,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * and showing a confirmation message through the UI.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current {@link TaskList} to which the task will be added.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The {@link Ui} object responsible for displaying messages.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The {@link Storage} handler used to persist task data.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"     * @throws Exception If the description or date is missing, or if saving fails.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"        if (desc \u003d\u003d null || desc.isBlank())","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Deadline description cannot be empty.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"        if (by \u003d\u003d null || by.isBlank())","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Missing \u0027/by\u0027. Usage: deadline \u003cdesc\u003e /by \u003cwhen\u003e\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"        tasks.add(new Deadline(desc, by));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"        ui.box(\" Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"                \"   \" + tasks.get(tasks.size()).toString(),","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"                \" Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":49}},{"path":"src/main/java/resonant/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Event;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that adds an {@link Event} task to the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * An event includes a description, a start time, and an end time.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"    private final String desc;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"    private final String from;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"    private final String to;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     * Constructs an {@code AddEventCommand} with the specified description,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     * start time, and end time.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"     * @param desc Description of the event.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"     * @param from The start time of the event (after the /from keyword).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"     * @param to   The end time of the event (after the /to keyword).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    public AddEventCommand(String desc, String from, String to) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by creating a new {@link Event} task,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     * adding it to the {@link TaskList}, saving the updated list to {@link Storage},","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"     * and displaying a confirmation message through the {@link Ui}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The user interface handler to display output messages.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The storage handler used to persist the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"     * @throws Exception If any required parameter (description, from, or to)","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"     *                   is missing or invalid, or if saving fails.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"        if (desc \u003d\u003d null || desc.isBlank())","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Event description cannot be empty.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"        if (from \u003d\u003d null || from.isBlank())","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Missing \u0027/from\u0027. Usage: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"        if (to \u003d\u003d null || to.isBlank())","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Missing \u0027/to\u0027. Usage: event \u003cdesc\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"        tasks.add(new Event(desc, from, to));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"        ui.box(\" Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"                \"   \" + tasks.get(tasks.size()).toString(),","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"                \" Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":55}},{"path":"src/main/java/resonant/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Todo;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that adds a {@link Todo} task to the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * A Todo task consists only of a description without a specific date or time.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"    private final String desc;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"     * Constructs an {@code AddTodoCommand} with the specified description.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     * @param desc Description of the todo task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"    public AddTodoCommand(String desc) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by creating a new {@link Todo} task,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * adding it to the {@link TaskList}, saving the updated list to {@link Storage},","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     * and displaying a confirmation message through the {@link Ui}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The user interface handler for displaying messages.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The storage handler used to persist the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     * @throws Exception If the description is missing or saving fails.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"        if (desc \u003d\u003d null || desc.isBlank()) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"A todo needs a description. Usage: todo \u003cdesc\u003e\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"        tasks.add(new Todo(desc));","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"        ui.box(\" Got it. I\u0027ve added this task:\",","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"                \"   \" + tasks.get(tasks.size()).toString(),","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"                \" Now you have \" + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":43}},{"path":"src/main/java/resonant/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * Represents an abstract command that can be executed by the program.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * Each concrete subclass of {@code Command} defines its own behavior","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * in the {@link #execute(TaskList, Ui, Storage)} method.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"public abstract class Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command using the provided task list, user interface, and storage.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The {@link TaskList} containing the user\u0027s tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The {@link Ui} instance used to display messages to the user.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The {@link Storage} instance used to save or load task data.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"     * @throws Exception If an error occurs during command execution.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * Determines whether this command will cause the program to exit.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"     * By default, this method returns {@code false}. Commands that should","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     * terminate the program (e.g., {@code ExitCommand}) override this to return {@code true}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * @return {@code true} if this command exits the program; {@code false} otherwise.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"        return false;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":34}},{"path":"src/main/java/resonant/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that deletes a task from the {@link TaskList}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * The task to be deleted is identified by its one-based index as shown in the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"    private final int index1Based;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code DeleteCommand} with the specified task index.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     * @param index1Based The one-based index of the task to delete from the list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"    public DeleteCommand(int index1Based) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"        this.index1Based \u003d index1Based;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by removing the specified task from the {@link TaskList},","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"     * saving the updated list to {@link Storage}, and displaying a confirmation message","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * through the {@link Ui}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The user interface handler used to display output messages.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The storage handler used to persist the updated task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * @throws Exception If the index is invalid or an error occurs while saving.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"        var removed \u003d tasks.remove(index1Based);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"        int n \u003d tasks.size();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"        ui.box(\" Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"                \"   \" + removed,","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"                \" Now you have \" + n + \" \" + (n \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":40}},{"path":"src/main/java/resonant/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that exits the program.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * When executed, this command displays a goodbye message","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * and signals to the main program loop that it should terminate.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by displaying a goodbye message to the user","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     * through the {@link Ui}. This method does not modify the {@link TaskList}","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     * or {@link Storage}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current list of tasks (unused in this command).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The user interface handler used to display messages.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The storage handler (unused in this command).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"        ui.sayGoodbye();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     * Indicates that this command will terminate the program.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     * @return {@code true}, since this command causes the application to exit.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"        return true;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":36}},{"path":"src/main/java/resonant/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.TaskList;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"import resonant.Ui;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"import resonant.Storage;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"import resonant.DukeException;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Task;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"import java.util.List;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that searches for tasks containing a specific keyword","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":" * in their descriptions.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":" * When executed, this command filters the task list to display only","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":" * the matching tasks, or shows a message if no matches are found.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    private final String keyword;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code FindCommand} with the given search keyword.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * @param keyword The keyword to search for within task descriptions.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by searching for tasks that contain the given keyword,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"     * displaying all matches in a numbered list through the {@link Ui}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"     * If no matching tasks are found, a message is shown instead.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The user interface handler used to display results.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"     * @throws DukeException If the keyword is missing or blank.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"        if (keyword \u003d\u003d null || keyword.isBlank()) {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"            throw new DukeException(\"Provide a keyword. Usage: find \u003ckeyword\u003e\");","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"        List\u003cTask\u003e matches \u003d tasks.find(keyword);","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"        if (matches.isEmpty()) {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"            ui.box(\" No matching tasks found for \\\"\" + keyword + \"\\\".\");","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"            return;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"        StringBuilder sb \u003d new StringBuilder(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"        int i \u003d 1;","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"        for (Task t : matches) {","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"            sb.append(\u0027\\n\u0027).append(\u0027 \u0027).append(i++).append(\u0027.\u0027).append(t);","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"        ui.box(sb.toString());","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-30T21:50:30","isFullCredit":false}],"authorContributionMap":{"LJQ2001":60}},{"path":"src/main/java/resonant/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.TaskList;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"import resonant.Ui;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"import resonant.Storage;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":"import resonant.tasks.Task;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that lists all tasks currently stored in the {@link TaskList}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":" * When executed, this command displays each task in a numbered format.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":" * If there are no tasks, it informs the user that the list is empty.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by printing all tasks in the {@link TaskList}","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     * to the user interface in a numbered list format.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"     * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"     * If there are no tasks, a message stating that the list is empty is shown instead.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The user interface handler used to display messages.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The storage handler (not used in this command).","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"            ui.box(\" Your list is empty.\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"        } else {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"            StringBuilder sb \u003d new StringBuilder(\" Here are the tasks in your list:\");","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"            int i \u003d 1;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"            for (Task t : tasks.asList()) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"                sb.append(\u0027\\n\u0027).append(\u0027 \u0027).append(i++).append(\u0027.\u0027).append(t);","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"            }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"            ui.box(sb.toString());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"        }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":39}},{"path":"src/main/java/resonant/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that marks a specified task in the {@link TaskList} as done.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * When executed, this command updates the completion status of the task,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * saves the updated task list to storage, and notifies the user through the UI.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"    private final int index1Based;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code MarkCommand} with the specified task index.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     * @param index1Based The one-based index of the task to mark as done.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    public MarkCommand(int index1Based) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"        this.index1Based \u003d index1Based;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by marking the specified task as done,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     * saving the updated task list to {@link Storage},","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"     * and displaying a confirmation message via the {@link Ui}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The user interface handler used to display messages.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The storage handler used to persist the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     * @throws Exception If the task index is invalid or saving fails.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"        var t \u003d tasks.get(index1Based);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"        t.mark();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"        ui.box(\" Nice! I\u0027ve marked this task as done:\", \"   \" + t);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":40}},{"path":"src/main/java/resonant/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.commands;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"import resonant.*;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * Represents a command that marks a specified task in the {@link TaskList} as not done.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * When executed, this command updates the task\u0027s completion status to \"not done\",","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" * saves the modified task list to storage, and informs the user via the {@link Ui}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"    private final int index1Based;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     * Constructs an {@code UnmarkCommand} with the specified task index.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     * @param index1Based The one-based index of the task to mark as not done.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"    public UnmarkCommand(int index1Based) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"        this.index1Based \u003d index1Based;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * Executes the command by marking the specified task as not done,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     * saving the updated task list to {@link Storage},","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"     * and displaying a confirmation message through the {@link Ui}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     * @param tasks   The current list of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * @param ui      The user interface handler used to display messages.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     * @param storage The storage handler used to persist the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"     * @throws Exception If the task index is invalid or saving fails.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"        var t \u003d tasks.get(index1Based);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"        t.unmark();","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"        storage.save(tasks.asList());","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"        ui.box(\" OK, I\u0027ve marked this task as not done yet:\", \"   \" + t);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":40}},{"path":"src/main/java/resonant/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.tasks;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * A {@code Deadline} has a description and a due date/time,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * and is displayed with the format: {@code [D][X] description (by: date/time)}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"    private final String by;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code Deadline} task with the specified description and due date/time.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     * @param by          The due date/time of the task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"        super(description);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * Returns the due date/time of this deadline task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"     * @return The due date/time as a {@code String}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"    public String by() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"        return by;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"     * @return A formatted string including task type, status, description, and due date/time.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"    public String toString() {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":41}},{"path":"src/main/java/resonant/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.tasks;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":" * Represents a task that spans a specific time period.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * An {@code Event} has a description, a start time, and an end time.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * It is displayed in the format: {@code [E][X] description (from: start to: end)}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"public class Event extends Task {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"    private final String from;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"    private final String to;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"     * Constructs an {@code Event} task with the specified description, start time, and end time.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"     * @param description The description of the event.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"     * @param from        The starting time of the event.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     * @param to          The ending time of the event.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"        super(description);","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"     * Returns the starting time of this event.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * @return The start time as a {@code String}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"    public String from() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"        return from;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"     * Returns the ending time of this event.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"     * @return The end time as a {@code String}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"    public String to() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"        return to;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"     * @return A formatted string including task type, status, description, start, and end times.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"    public String toString() {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":53}},{"path":"src/main/java/resonant/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.tasks;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":" * Represents a general task in the task list.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * A {@code Task} stores a description and a completion status.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * Subclasses such as {@code Todo}, {@code Deadline}, and {@code Event}","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" * provide more specific types of tasks.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"public class Task {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"    /** Description of the task. */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"    protected final String description;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"    /** Whether the task is marked as done. */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code Task} with the specified description.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"     * The task is initially not marked as done.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"     * @param description Description of the task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"    public Task(String description) {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"     * Marks this task as done.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"LJQ2001"},"content":"    public void mark() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"LJQ2001"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"LJQ2001"},"content":"     * Marks this task as not done.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"LJQ2001"},"content":"    public void unmark() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"LJQ2001"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"LJQ2001"},"content":"     * Returns whether this task is done.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"LJQ2001"},"content":"     * @return {@code true} if the task is done, otherwise {@code false}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"LJQ2001"},"content":"    public boolean isDone() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"LJQ2001"},"content":"        return isDone;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"LJQ2001"},"content":"     * Returns the description of this task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"LJQ2001"},"content":"     * @return The task description as a {@code String}.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"LJQ2001"},"content":"    public String description() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"LJQ2001"},"content":"        return description;","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"LJQ2001"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"LJQ2001"},"content":"     * {@code \"X\"} if the task is done, otherwise a blank space.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"LJQ2001"},"content":"     * @return A string representing the task\u0027s completion status.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"LJQ2001"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"LJQ2001"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"LJQ2001"},"content":"     * Returns the string representation of this task,","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"LJQ2001"},"content":"     * showing its status and description.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"LJQ2001"},"content":"     * @return A formatted string representing this task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"LJQ2001"},"content":"    public String toString() {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"LJQ2001"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":80}},{"path":"src/main/java/resonant/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LJQ2001"},"content":"package resonant.tasks;","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"LJQ2001"},"content":"/**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"LJQ2001"},"content":" * Represents a simple to-do task without any specific date or time attached.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"LJQ2001"},"content":" * \u003cp\u003e","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"LJQ2001"},"content":" * A {@code Todo} is one of the basic task types supported by the program.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"LJQ2001"},"content":" * It inherits from {@link Task} and only requires a description.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"LJQ2001"},"content":" */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"LJQ2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"LJQ2001"},"content":"     * Constructs a {@code Todo} task with the given description.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"LJQ2001"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"LJQ2001"},"content":"    public Todo(String description) {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"LJQ2001"},"content":"        super(description);","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"LJQ2001"},"content":"","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"LJQ2001"},"content":"    /**","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"LJQ2001"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"LJQ2001"},"content":"     * The output includes the type indicator {@code [T]} and the base task details.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"LJQ2001"},"content":"     *","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"LJQ2001"},"content":"     * @return A formatted string representing this to-do task.","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"LJQ2001"},"content":"     */","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"LJQ2001"},"content":"    @Override","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"LJQ2001"},"content":"    public String toString() {","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"LJQ2001"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"LJQ2001"},"content":"    }","lastModifiedDate":"2025-10-05T15:45:59","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"LJQ2001"},"content":"}","lastModifiedDate":"2025-09-29T01:39:58","isFullCredit":false}],"authorContributionMap":{"LJQ2001":30}}]
